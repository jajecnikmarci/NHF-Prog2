{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment NHF  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}NHF}
{\comment Generated by doxygen 1.9.6.}
{\creatim \yr2023\mo5\dy13\hr19\min45\sec23}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt NHF}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version 1.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Sat May 13 2023 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Index\par \pard\plain 
{\tc \v Namespace Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Namespace List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented namespaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b gtest_lite} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gtest_lite: a keretrendszer f\'FCggv\'E9nyinek \'E9s objektumainak n\'E9vtere })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
_Is_Types< F, T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Client\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Company\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Person\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
Contract\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Contract_date\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Date\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MVM\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MyVector< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MyVector< Client * >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
MyVector< Contract >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
gtest_lite::Test\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b _Is_Types< F, T >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seg\'C3\'A9dsablon t\'C3\'ADpuskonverzi\'C3\'B3 fut\'C3\'A1s k\'C3\'B6zbeni ellen\'C5\'91rz\'C3\'A9sere })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Client} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'DCgyf\'E9l adatait t\'E1rolja })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Company} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Egy c\'E9g adatait t\'E1rolja })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Contract} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Egy szerz\'C5\'91d\'C3\'A9st t\'C3\'A1rol })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Contract_date} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Egy id\'C5\'91p\'C3\'A1rt t\'C3\'A1rol })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Date} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Egy d\'E1tumot t\'E1rol time_point form\'E1tumba })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MVM} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'DCgyfeleket t\'E1rol\'F3 class })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MyVector< T >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indexelhet\'C5\'91s\'C3\'A9ghez std::vektor mint\'C3\'A1j\'C3\'A1ra saj\'C3\'A1t vektor template })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Person} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mag\'E1nszem\'E9ly adatait t\'E1rolja })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAET \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b gtest_lite::Test} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all documented files with brief descriptions:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b clients.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b clients.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b contracts.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b contracts.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b date.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b date.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b gtest_lite.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b memtrace.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b memtrace.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MVM.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b MVM.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b myvektor.hpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Test.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Namespace Documentation\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest_lite Namespace Reference\par \pard\plain 
{\tc\tcl2 \v gtest_lite}
{\xe \v gtest_lite}
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b gtest_lite}: a keretrendszer f\'FCggv\'E9nyinek \'E9s objektumainak n\'E9vtere }}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Test}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > std::ostream & {\b EXPECT_} (T1 exp, T2 act, bool(*pred)(T1, T2), const char *file, int line, const char *expr, const char *lhs="elvart", const char *rhs="aktual")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'E1ltal\'E1nos sablon a v\'E1rt \'E9rt\'E9khez. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > std::ostream & {\b EXPECT_} (T1 *exp, T2 *act, bool(*pred)(T1 *, T2 *), const char *file, int line, const char *expr, const char *lhs="elvart", const char *rhs="aktual")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pointerre specializ\'E1lt sablon a v\'E1rt \'E9rt\'E9khez. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b EXPECTSTR} (const char *exp, const char *act, bool(*pred)(const char *, const char *), const char *file, int line, const char *expr, const char *lhs="elvart", const char *rhs="aktual")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > bool {\b eq} (T1 a, T2 b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b eqstr} (const char *a, const char *b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > bool {\b ne} (T1 a, T2 b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b nestr} (const char *a, const char *b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > bool {\b le} (T1 a, T2 b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > bool {\b lt} (T1 a, T2 b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > bool {\b ge} (T1 a, T2 b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > bool {\b gt} (T1 a, T2 b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > bool {\b almostEQ} (T a, T b)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b gtest_lite}: a keretrendszer f\'FCggv\'E9nyinek \'E9s objektumainak n\'E9vtere \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v almostEQ\:gtest_lite}
{\xe \v gtest_lite\:almostEQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > bool gtest_lite::almostEQ (T  {\i a}, T  {\i b})}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seg\'E9dsablon val\'F3s sz\'E1mok \'F6sszehasonl\'EDt\'E1s\'E1hoz Nem bombabiztos, de nek\'FCnk most j\'F3 lesz Elm\'E9leti h\'E1t\'E9r: {\f2 http://www.cygnus-software.com/papers/comparingfloats/comparingfloats.htm} \par
}{
Definition at line {\b 353} of file {\b gtest_lite.h}.}\par
}
{\xe \v eq\:gtest_lite}
{\xe \v gtest_lite\:eq}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 > bool gtest_lite::eq (T1  {\i a}, T2  {\i b})}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
seg\'E9d sablonok a rel\'E1ci\'F3khoz. az\'E9rt nem STL (algorithm), mert csak a f\'FCggv\'E9ny lehet, hogy menjen a deduckci\'F3 \par
}{
Definition at line {\b 317} of file {\b gtest_lite.h}.}\par
}
{\xe \v eqstr\:gtest_lite}
{\xe \v gtest_lite\:eqstr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool gtest_lite::eqstr (const char *  {\i a}, const char *  {\i b}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 320} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_\:gtest_lite}
{\xe \v gtest_lite\:EXPECT_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 > std::ostream & gtest_lite::EXPECT_ (T1 *  {\i exp}, T2 *  {\i act}, bool(*)(T1 *, T2 *)  {\i pred}, const char *  {\i file}, int  {\i line}, const char *  {\i expr}, const char *  {\i lhs} = {\f2 "elvart"}, const char *  {\i rhs} = {\f2 "aktual"})}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pointerre specializ\'E1lt sablon a v\'E1rt \'E9rt\'E9khez. }}\par
{
Definition at line {\b 286} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_\:gtest_lite}
{\xe \v gtest_lite\:EXPECT_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 > std::ostream & gtest_lite::EXPECT_ (T1  {\i exp}, T2  {\i act}, bool(*)(T1, T2)  {\i pred}, const char *  {\i file}, int  {\i line}, const char *  {\i expr}, const char *  {\i lhs} = {\f2 "elvart"}, const char *  {\i rhs} = {\f2 "aktual"})}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'E1ltal\'E1nos sablon a v\'E1rt \'E9rt\'E9khez. }}\par
{
Definition at line {\b 277} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECTSTR\:gtest_lite}
{\xe \v gtest_lite\:EXPECTSTR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::ostream & gtest_lite::EXPECTSTR (const char *  {\i exp}, const char *  {\i act}, bool(*)(const char *, const char *)  {\i pred}, const char *  {\i file}, int  {\i line}, const char *  {\i expr}, const char *  {\i lhs} = {\f2 "elvart"}, const char *  {\i rhs} = {\f2 "aktual"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
stringek \'C3\'B6sszehasonl\'C3\'ADt\'C3\'A1s\'C3\'A1hoz. az\'C3\'A9rt nem spec. mert a sima EQ-ra m\'C3\'A1sk\'C3\'A9nt kell m\'C5\'B1k\'C3\'B6dnie. \par
}{
Definition at line {\b 307} of file {\b gtest_lite.h}.}\par
}
{\xe \v ge\:gtest_lite}
{\xe \v gtest_lite\:ge}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 > bool gtest_lite::ge (T1  {\i a}, T2  {\i b})}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 343} of file {\b gtest_lite.h}.}\par
}
{\xe \v gt\:gtest_lite}
{\xe \v gtest_lite\:gt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 > bool gtest_lite::gt (T1  {\i a}, T2  {\i b})}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 346} of file {\b gtest_lite.h}.}\par
}
{\xe \v le\:gtest_lite}
{\xe \v gtest_lite\:le}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 > bool gtest_lite::le (T1  {\i a}, T2  {\i b})}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 337} of file {\b gtest_lite.h}.}\par
}
{\xe \v lt\:gtest_lite}
{\xe \v gtest_lite\:lt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 > bool gtest_lite::lt (T1  {\i a}, T2  {\i b})}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 340} of file {\b gtest_lite.h}.}\par
}
{\xe \v ne\:gtest_lite}
{\xe \v gtest_lite\:ne}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T1 , typename T2 > bool gtest_lite::ne (T1  {\i a}, T2  {\i b})}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 327} of file {\b gtest_lite.h}.}\par
}
{\xe \v nestr\:gtest_lite}
{\xe \v gtest_lite\:nestr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool gtest_lite::nestr (const char *  {\i a}, const char *  {\i b}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 330} of file {\b gtest_lite.h}.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
_Is_Types< F, T > Struct Template Reference\par \pard\plain 
{\tc\tcl2 \v _Is_Types< F, T >}
{\xe \v _Is_Types< F, T >}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seg\'C3\'A9dsablon t\'C3\'ADpuskonverzi\'C3\'B3 fut\'C3\'A1s k\'C3\'B6zbeni ellen\'C5\'91rz\'C3\'A9sere. }}\par
{
{\f2 #include <gtest_lite.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<typename D > static char(& {\b f} (D))[1]{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 

template<typename D > static char(& {\b f} (...))[2]{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool const {\b convertable} = sizeof(f<T>(F())) == 1\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename F, typename T>\par
struct _Is_Types< F, T >\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seg\'C3\'A9dsablon t\'C3\'ADpuskonverzi\'C3\'B3 fut\'C3\'A1s k\'C3\'B6zbeni ellen\'C5\'91rz\'C3\'A9sere. \par
}{
Definition at line {\b 161} of file {\b gtest_lite.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v convertable\:_Is_Types< F, T >}
{\xe \v _Is_Types< F, T >\:convertable}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename F , typename T > bool const {\b _Is_Types}< F, T >::convertable = sizeof(f<T>(F())) == 1{\f2 [static]}}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 164} of file {\b gtest_lite.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gtest_lite.h}}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Client Class Reference\par \pard\plain 
{\tc\tcl2 \v Client}
{\xe \v Client}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'DCgyf\'E9l adatait t\'E1rolja. }}\par
{
{\f2 #include <clients.h>}}\par
Inheritance diagram for Client:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_client.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Client} (const std::string name_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alap\'E9rt\'E9kes kontruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b getSumOfAll_Contract} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a kliens \'C3\'A1ltal eddig k\'C3\'B6t\'C3\'B6tt szerz\'C5\'91d\'C3\'A9sek sz\'C3\'A1m\'C3\'A1t. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getName} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszadja a kliens nev\'E9t. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addContract} ({\b Contract} &contract_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Szerz\'C5\'91d\'C3\'A9s hozz\'C3\'A1ad\'C3\'A1sa a mycontracts hez. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getsub_Client_info} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a gyermek oszt\'E1ly szem\'E9lyes adatait ki\'EDr\'E1shoz egy string-ben. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b save_invoice} (size_t contract_index, const {\b Date} &date)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sz\'E1ml\'E1t \'E1ll\'EDt ki f\'E1jlba. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Contract} & {\b getContract} (size_t contract_ID)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja azt a szerz\'C5\'91d\'C3\'A9st aminek az azonos\'C3\'ADt\'C3\'B3j\'C3\'A1t megadtuk. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Client} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Virtu\'E1lis destruktor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'DCgyf\'E9l adatait t\'E1rolja. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name} \cell }{Az \'FCgyf\'E9l neve \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i mycontracts} \cell }{Az \'C3\'BCgyf\'C3\'A9l szerz\'C5\'91d\'C3\'A9seit t\'C3\'A1rol\'C3\'B3 t\'C3\'B6mb \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SumOfAll_contracts} \cell }{Azt t\'C3\'A1rolja hogy a kliens megl\'C3\'A9te alatt \'C3\'B6sszesen h\'C3\'A1ny szerz\'C5\'91d\'C3\'A9st k\'C3\'B6t\'C3\'B6tt (A szerz\'C5\'91d\'C3\'A9s azonos\'C3\'ADt\'C3\'A1s\'C3\'A1ra haszn\'C3\'A1l a felhaszn\'C3\'A1l\'C3\'B3 sz\'C3\'A1m\'C3\'A1ra) \cell }
{\row }
}
}{
Definition at line {\b 21} of file {\b clients.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Client\:Client}
{\xe \v Client\:Client}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Client::Client (const std::string  {\i name_in}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alap\'E9rt\'E9kes kontruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name_in} \cell }{\'DCgyf\'E9l neve \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i sumofContracts} \cell }{A kliens \'C3\'A1ltal eddig k\'C3\'B6t\'C3\'B6tt szerz\'C5\'91d\'C3\'A9sek sz\'C3\'A1ma (nem jelenlegi) \cell }
{\row }
}
}{
Definition at line {\b 33} of file {\b clients.h}.}\par
}
{\xe \v ~Client\:Client}
{\xe \v Client\:~Client}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual Client::~Client (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Virtu\'E1lis destruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line {\b 77} of file {\b clients.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addContract\:Client}
{\xe \v Client\:addContract}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Client::addContract ({\b Contract} &  {\i contract_in})}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Szerz\'C5\'91d\'C3\'A9s hozz\'C3\'A1ad\'C3\'A1sa a mycontracts hez. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i contract_in} \cell }{a hozz\'C3\'A1adand\'C3\'B3 szerz\'C5\'91d\'C3\'A9sre mutat\'C3\'B3 referencia. \cell }
{\row }
}
}{
Definition at line {\b 11} of file {\b clients.cpp}.}\par
}
{\xe \v getContract\:Client}
{\xe \v Client\:getContract}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Contract} & Client::getContract (size_t  {\i contract_ID})}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja azt a szerz\'C5\'91d\'C3\'A9st aminek az azonos\'C3\'ADt\'C3\'B3j\'C3\'A1t megadtuk. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i contract_ID} \cell }{A szerz\'C5\'91d\'C3\'A9s azonos\'C3\'ADt\'C3\'B3ja \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 28} of file {\b clients.cpp}.}\par
}
{\xe \v getName\:Client}
{\xe \v Client\:getName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Client::getName () const}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszadja a kliens nev\'E9t. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
kliens neve \par
}}}{
Definition at line {\b 7} of file {\b clients.cpp}.}\par
}
{\xe \v getsub_Client_info\:Client}
{\xe \v Client\:getsub_Client_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Client::getsub_Client_info (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a gyermek oszt\'E1ly szem\'E9lyes adatait ki\'EDr\'E1shoz egy string-ben. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
gyermek oszt\'E1ly szem\'E9lyes adatai ki\'EDr\'E1shoz egy string-ben \par
}}}{
Reimplemented in {\b Person} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACC \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b Company} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 20} of file {\b clients.cpp}.}\par
}
{\xe \v getSumOfAll_Contract\:Client}
{\xe \v Client\:getSumOfAll_Contract}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t Client::getSumOfAll_Contract ()}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a kliens \'C3\'A1ltal eddig k\'C3\'B6t\'C3\'B6tt szerz\'C5\'91d\'C3\'A9sek sz\'C3\'A1m\'C3\'A1t. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
kliens \'C3\'A1ltal eddig k\'C3\'B6t\'C3\'B6tt szerz\'C5\'91d\'C3\'A9sek sz\'C3\'A1ma \par
}}}{
Definition at line {\b 16} of file {\b clients.cpp}.}\par
}
{\xe \v save_invoice\:Client}
{\xe \v Client\:save_invoice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Client::save_invoice (size_t  {\i contract_index}, const {\b Date} &  {\i date})}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sz\'E1ml\'E1t \'E1ll\'EDt ki f\'E1jlba. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i contract_index} \cell }{A szerz\'C5\'91d\'C3\'A9s sorsz\'C3\'A1ma a t\'C3\'A1rolt szerz\'C5\'91d\'C3\'A9sek k\'C3\'B6z\'C3\'B6tt \cell }
{\row }
}
}{
Definition at line {\b 24} of file {\b clients.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
clients.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
clients.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Company Class Reference\par \pard\plain 
{\tc\tcl2 \v Company}
{\xe \v Company}
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Egy c\'E9g adatait t\'E1rolja. }}\par
{
{\f2 #include <clients.h>}}\par
Inheritance diagram for Company:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_company.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Company} (std::string name_in="", long ID_in=0)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alap\'E9rt\'E9kes kontruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setID} (long ID_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C\'E9g ad\'F3sz\'E1m\'E1nak \'E1ll\'EDt\'E1sa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b getID} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C\'E9g ad\'F3sz\'E1m\'E1t adja vissza. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getsub_Client_info} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a gyermek oszt\'E1ly szem\'E9lyes adatait ki\'EDr\'E1shoz egy string-ben. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Company} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destruktor. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b Client}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Client} (const std::string name_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alap\'E9rt\'E9kes kontruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b getSumOfAll_Contract} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a kliens \'C3\'A1ltal eddig k\'C3\'B6t\'C3\'B6tt szerz\'C5\'91d\'C3\'A9sek sz\'C3\'A1m\'C3\'A1t. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getName} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszadja a kliens nev\'E9t. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addContract} ({\b Contract} &contract_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Szerz\'C5\'91d\'C3\'A9s hozz\'C3\'A1ad\'C3\'A1sa a mycontracts hez. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getsub_Client_info} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a gyermek oszt\'E1ly szem\'E9lyes adatait ki\'EDr\'E1shoz egy string-ben. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b save_invoice} (size_t contract_index, const {\b Date} &date)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sz\'E1ml\'E1t \'E1ll\'EDt ki f\'E1jlba. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Contract} & {\b getContract} (size_t contract_ID)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja azt a szerz\'C5\'91d\'C3\'A9st aminek az azonos\'C3\'ADt\'C3\'B3j\'C3\'A1t megadtuk. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Client} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Virtu\'E1lis destruktor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Egy c\'E9g adatait t\'E1rolja. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i Tax_ID} \cell }{A c\'E9g ad\'F3azonos\'EDt\'F3 sz\'E1ma \cell }
{\row }
}
}{
Definition at line {\b 124} of file {\b clients.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Company\:Company}
{\xe \v Company\:Company}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Company::Company (std::string  {\i name_in} = {\f2 ""}, long  {\i ID_in} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alap\'E9rt\'E9kes kontruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name_in} \cell }{Bej\'C3\'B6v\'C5\'91 C\'C3\'A9gn\'C3\'A9v \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ID_in} \cell }{Bej\'C3\'B6v\'C5\'91 C\'C3\'A9g ad\'C3\'B3sz\'C3\'A1m \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SumOfAllContract} \cell }{A kliens \'C3\'A1ltal eddig k\'C3\'B6t\'C3\'B6tt szerz\'C5\'91d\'C3\'A9sek sz\'C3\'A1ma (nem jelenlegi) \cell }
{\row }
}
}{
Definition at line {\b 135} of file {\b clients.h}.}\par
}
{\xe \v ~Company\:Company}
{\xe \v Company\:~Company}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Company::~Company ()}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line {\b 64} of file {\b clients.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getID\:Company}
{\xe \v Company\:getID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long Company::getID () const}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C\'E9g ad\'F3sz\'E1m\'E1t adja vissza. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
C\'E9g ad\'F3sz\'E1ma \par
}}}{
Definition at line {\b 51} of file {\b clients.cpp}.}\par
}
{\xe \v getsub_Client_info\:Company}
{\xe \v Company\:getsub_Client_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Company::getsub_Client_info (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a gyermek oszt\'E1ly szem\'E9lyes adatait ki\'EDr\'E1shoz egy string-ben. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
gyermek oszt\'E1ly szem\'E9lyes adatai ki\'EDr\'E1shoz egy string-ben \par
}}}{
Reimplemented from {\b Client} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 59} of file {\b clients.cpp}.}\par
}
{\xe \v setID\:Company}
{\xe \v Company\:setID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Company::setID (long  {\i ID_in})}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C\'E9g ad\'F3sz\'E1m\'E1nak \'E1ll\'EDt\'E1sa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ID_in} \cell }{Bej\'C3\'B6v\'C5\'91 C\'C3\'A9g ad\'C3\'B3sz\'C3\'A1m \cell }
{\row }
}
}{
Definition at line {\b 55} of file {\b clients.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
clients.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
clients.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Contract Class Reference\par \pard\plain 
{\tc\tcl2 \v Contract}
{\xe \v Contract}
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Egy szerz\'C5\'91d\'C3\'A9st t\'C3\'A1rol. }}\par
{
{\f2 #include <contracts.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Contract} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Param\'E9ter n\'E9lk\'FCli konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Contract} ({\b Client} *client_in, ContractType ctype_in, int year_begin, int month_begin, int day_begin, int year_end, int month_end, int day_end, int invo_in_year, int invo_in_month, int invo_in_day, size_t ContractID_in, double tariff_in=0.0, double balance_in=0.0, double consumption_in=0.0)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alap\'C3\'A9rt\'C3\'A9kes konstruktor egy szerz\'C5\'91d\'C3\'A9shez. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCtype} (ContractType ctype_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Be\'C3\'A1ll\'C3\'ADtja a szerz\'C5\'91d\'C3\'A9s t\'C3\'ADpus\'C3\'A1t. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTariff} (double tariff_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Be\'E1ll\'EDtja az \'FAj tarif\'E1t. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBalance} (double balance_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Be\'E1ll\'EDtja a jelenlegi egyenleget. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addConsumption} (double con_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hozz\'E1ad a fogyasztott mennyis\'E9ghez. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setLast_invoicing} ({\b Date} last_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Be\'E1ll\'EDtja a legutols\'F3 sz\'E1ml\'E1z\'E1s idej\'E9t. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCtime} ({\b Contract_date} ctime_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Be\'C3\'A1ll\'C3\'ADtja a szerz\'C5\'91d\'C3\'A9s id\'C5\'91tartom\'C3\'A1ny\'C3\'A1t. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Client} * {\b getClient} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja az \'FCgyf\'E9l adatait. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b getContractID} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a szerz\'C5\'91d\'C3\'A9s azonos\'C3\'ADt\'C3\'B3j\'C3\'A1t. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ContractType {\b getCtype} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a szerz\'C5\'91d\'C3\'A9s t\'C3\'ADpus\'C3\'A1t. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getTariff} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a tarif\'E1t. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getBalance} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a jelenlegi egyenleget. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getConsumption} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja az eddigi fogyaszt\'E1st a legut\'F3bbi sz\'E1mla ki\'E1ll\'EDt\'E1sa \'F3ta. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Contract_date} {\b getCtime} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a szerz\'C5\'91d\'C3\'A9s id\'C5\'91tartom\'C3\'A1ny\'C3\'A1t. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b Ctype_toString} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A szerz\'C5\'91d\'C3\'A9s t\'C3\'ADpus\'C3\'A1t adja vissza stringk\'C3\'A9nt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Date} {\b getLast_invoicing} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a legut\'C3\'B3t\'C3\'B3bbi sz\'C3\'A1mla ki\'C3\'A1ll\'C3\'ADt\'C3\'A1s\'C3\'A1nak az id\'C5\'91pontj\'C3\'A1t. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pay} (double amount)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Befizet\'E9s egyenlegrendez\'E9shez. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b invoice} (const {\b Date} &today)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sz\'E1mla ki\'E1ll\'EDt\'E1sa f\'E1jlba. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Contract} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destruktor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Egy szerz\'C5\'91d\'C3\'A9st t\'C3\'A1rol. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i client} \cell }{T\'C3\'A1rolja a szerz\'C5\'91d\'C3\'A9stk\'C3\'B6t\'C5\'91 adatait \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i contract_type} \cell }{A szerz\'C5\'91d\'C3\'A9s t\'C3\'ADpus\'C3\'A1t t\'C3\'A1rolja \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i contract_time} \cell }{A szerz\'C5\'91d\'C3\'A9s id\'C5\'91tartam\'C3\'A1t adja meg egy kezd\'C5\'91 \'C3\'A9s egy v\'C3\'A9gd\'C3\'A1tummal \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i last_invoicing} \cell }{Utols\'F3 sz\'E1mlakibocs\'E1jt\'E1s ideje \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tariff} \cell }{A KWh-k\'E9nti \'E1rat adja meg \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i balance} \cell }{T\'C3\'A1rolja a szerz\'C5\'91d\'C3\'A9shez tartoz\'C3\'B3 sz\'C3\'A1mla egyenleg\'C3\'A9t \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i consumption} \cell }{T\'E1rolja a fogyaszt\'E1st a legut\'F3bbi sz\'E1mlakibocs\'E1jt\'E1s \'F3ta \cell }
{\row }
}
}{
Definition at line {\b 39} of file {\b contracts.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Contract\:Contract}
{\xe \v Contract\:Contract}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Contract::Contract (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Param\'E9ter n\'E9lk\'FCli konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line {\b 46} of file {\b contracts.h}.}\par
}
{\xe \v Contract\:Contract}
{\xe \v Contract\:Contract}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Contract::Contract ({\b Client} *  {\i client_in}, ContractType  {\i ctype_in}, int  {\i year_begin}, int  {\i month_begin}, int  {\i day_begin}, int  {\i year_end}, int  {\i month_end}, int  {\i day_end}, int  {\i invo_in_year}, int  {\i invo_in_month}, int  {\i invo_in_day}, size_t  {\i ContractID_in}, double  {\i tariff_in} = {\f2 0.0}, double  {\i balance_in} = {\f2 0.0}, double  {\i consumption_in} = {\f2 0.0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alap\'C3\'A9rt\'C3\'A9kes konstruktor egy szerz\'C5\'91d\'C3\'A9shez. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i client_in} \cell }{Szerz\'C5\'91d\'C3\'A9st k\'C3\'B6t\'C5\'91 \'C3\'BCgyf\'C3\'A9l (k\'C3\'B6telez\'C5\'91) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ctype_in} \cell }{Szerz\'C5\'91d\'C3\'A9s t\'C3\'ADpusa \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i year_begin} \cell }{Szerz\'C5\'91d\'C3\'A9s kezdeti \'C3\'A9ve \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i month_begin} \cell }{Szerz\'C5\'91d\'C3\'A9s kezdeti h\'C3\'B3napja \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i day_begin} \cell }{Szerz\'C5\'91d\'C3\'A9s kezdeti napja \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i year_end} \cell }{Szerz\'C5\'91d\'C3\'A9s v\'C3\'A9gs\'C5\'91 \'C3\'A9ve \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i month_end} \cell }{Szerz\'C5\'91d\'C3\'A9s v\'C3\'A9gs\'C5\'91 h\'C3\'B3napja \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i day_end} \cell }{Szerz\'C5\'91d\'C3\'A9s v\'C3\'A9gs\'C5\'91 napja \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i invo_in_year} \cell }{Legut\'F3bbi sz\'E1ml\'E1z\'E1s \'E9ve \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i invo_in_month} \cell }{Legut\'F3bbi sz\'E1ml\'E1z\'E1s h\'F3napja \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i invo_in_day} \cell }{Legut\'F3bbi sz\'E1ml\'E1z\'E1s napja \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ContractID_in} \cell }{A szerz\'C5\'91d\'C3\'A9s azonos\'C3\'ADt\'C3\'B3sz\'C3\'A1ma \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tariff_in} \cell }{KWh-k\'E9nti \'E1r \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i balance_in} \cell }{Jelenlegi egyenleg \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i consumption_in} \cell }{Jelenlegi fogyaszt\'E1s \cell }
{\row }
}
}{
Definition at line {\b 66} of file {\b contracts.h}.}\par
}
{\xe \v ~Contract\:Contract}
{\xe \v Contract\:~Contract}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Contract::~Contract ()}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line {\b 124} of file {\b contracts.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addConsumption\:Contract}
{\xe \v Contract\:addConsumption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Contract::addConsumption (double  {\i con_in})}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hozz\'E1ad a fogyasztott mennyis\'E9ghez. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i con_in} \cell }{Bej\'C3\'B6v\'C5\'91 fogyaszt\'C3\'A1s \cell }
{\row }
}
}{
Definition at line {\b 19} of file {\b contracts.cpp}.}\par
}
{\xe \v Ctype_toString\:Contract}
{\xe \v Contract\:Ctype_toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string Contract::Ctype_toString () const}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
A szerz\'C5\'91d\'C3\'A9s t\'C3\'ADpus\'C3\'A1t adja vissza stringk\'C3\'A9nt. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
szerz\'C5\'91d\'C3\'A9s t\'C3\'ADpusa adja vissza stringk\'C3\'A9nt \par
}}}{
Definition at line {\b 59} of file {\b contracts.cpp}.}\par
}
{\xe \v getBalance\:Contract}
{\xe \v Contract\:getBalance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Contract::getBalance () const}}
\par
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a jelenlegi egyenleget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jelenlegi egyenleg \par
}}}{
Definition at line {\b 47} of file {\b contracts.cpp}.}\par
}
{\xe \v getClient\:Contract}
{\xe \v Contract\:getClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Client} * Contract::getClient ()}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja az \'FCgyf\'E9l adatait. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\'DCgyf\'E9l adatai \par
}}}{
Definition at line {\b 31} of file {\b contracts.cpp}.}\par
}
{\xe \v getConsumption\:Contract}
{\xe \v Contract\:getConsumption}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Contract::getConsumption () const}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja az eddigi fogyaszt\'E1st a legut\'F3bbi sz\'E1mla ki\'E1ll\'EDt\'E1sa \'F3ta. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Eddigi fogyaszt\'E1s \par
}}}{
Definition at line {\b 51} of file {\b contracts.cpp}.}\par
}
{\xe \v getContractID\:Contract}
{\xe \v Contract\:getContractID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t Contract::getContractID () const}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a szerz\'C5\'91d\'C3\'A9s azonos\'C3\'ADt\'C3\'B3j\'C3\'A1t. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
szerz\'C5\'91d\'C3\'A9s azonos\'C3\'ADt\'C3\'B3ja \par
}}}{
Definition at line {\b 35} of file {\b contracts.cpp}.}\par
}
{\xe \v getCtime\:Contract}
{\xe \v Contract\:getCtime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Contract_date} Contract::getCtime () const}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a szerz\'C5\'91d\'C3\'A9s id\'C5\'91tartom\'C3\'A1ny\'C3\'A1t. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Szerz\'C5\'91d\'C3\'A9s id\'C5\'91tartom\'C3\'A1nya \par
}}}{
Definition at line {\b 55} of file {\b contracts.cpp}.}\par
}
{\xe \v getCtype\:Contract}
{\xe \v Contract\:getCtype}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ContractType Contract::getCtype () const}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a szerz\'C5\'91d\'C3\'A9s t\'C3\'ADpus\'C3\'A1t. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Szerz\'C5\'91d\'C3\'A9s t\'C3\'ADpusa \par
}}}{
Definition at line {\b 39} of file {\b contracts.cpp}.}\par
}
{\xe \v getLast_invoicing\:Contract}
{\xe \v Contract\:getLast_invoicing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Date} Contract::getLast_invoicing () const}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a legut\'C3\'B3t\'C3\'B3bbi sz\'C3\'A1mla ki\'C3\'A1ll\'C3\'ADt\'C3\'A1s\'C3\'A1nak az id\'C5\'91pontj\'C3\'A1t. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Legut\'C3\'B3t\'C3\'B3bbi sz\'C3\'A1mla ki\'C3\'A1ll\'C3\'ADt\'C3\'A1s\'C3\'A1nak az id\'C5\'91pontja \par
}}}{
Definition at line {\b 73} of file {\b contracts.cpp}.}\par
}
{\xe \v getTariff\:Contract}
{\xe \v Contract\:getTariff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Contract::getTariff () const}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a tarif\'E1t. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Jelenlegi tarifa \par
}}}{
Definition at line {\b 43} of file {\b contracts.cpp}.}\par
}
{\xe \v invoice\:Contract}
{\xe \v Contract\:invoice}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Contract::invoice (const {\b Date} &  {\i today})}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sz\'E1mla ki\'E1ll\'EDt\'E1sa f\'E1jlba. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i today} \cell }{sz\'E1mla ki\'E1ll\'EDt\'E1s\'E1nak napja (n\'E9v amiatt mert a sz\'E1mlaki\'E1ll\'EDt\'E1s napja \'E1ltal\'E1ban a jelenlegi nappal egyezik meg) \cell }
{\row }
}
}{
Definition at line {\b 81} of file {\b contracts.cpp}.}\par
}
{\xe \v pay\:Contract}
{\xe \v Contract\:pay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Contract::pay (double  {\i amount})}}
\par
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Befizet\'E9s egyenlegrendez\'E9shez. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i amount} \cell }{Befizetett \'F6sszeg \cell }
{\row }
}
}{
Definition at line {\b 77} of file {\b contracts.cpp}.}\par
}
{\xe \v setBalance\:Contract}
{\xe \v Contract\:setBalance}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Contract::setBalance (double  {\i balance_in})}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Be\'E1ll\'EDtja a jelenlegi egyenleget. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i balance_in} \cell }{Be\'E1ll\'EDtand\'F3 egyenleg \cell }
{\row }
}
}{
Definition at line {\b 15} of file {\b contracts.cpp}.}\par
}
{\xe \v setCtime\:Contract}
{\xe \v Contract\:setCtime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Contract::setCtime ({\b Contract_date}  {\i ctime_in})}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Be\'C3\'A1ll\'C3\'ADtja a szerz\'C5\'91d\'C3\'A9s id\'C5\'91tartom\'C3\'A1ny\'C3\'A1t. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ctime_in} \cell }{Bej\'C3\'B6v\'C5\'91 id\'C5\'91tartom\'C3\'A1ny \cell }
{\row }
}
}{
Definition at line {\b 27} of file {\b contracts.cpp}.}\par
}
{\xe \v setCtype\:Contract}
{\xe \v Contract\:setCtype}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Contract::setCtype (ContractType  {\i ctype_in})}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Be\'C3\'A1ll\'C3\'ADtja a szerz\'C5\'91d\'C3\'A9s t\'C3\'ADpus\'C3\'A1t. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ctype_in} \cell }{Be\'C3\'A1ll\'C3\'ADtand\'C3\'B3 szerz\'C5\'91d\'C3\'A9st\'C3\'ADpus \cell }
{\row }
}
}{
Definition at line {\b 7} of file {\b contracts.cpp}.}\par
}
{\xe \v setLast_invoicing\:Contract}
{\xe \v Contract\:setLast_invoicing}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Contract::setLast_invoicing ({\b Date}  {\i last_in})}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Be\'E1ll\'EDtja a legutols\'F3 sz\'E1ml\'E1z\'E1s idej\'E9t. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i last_in} \cell }{Sz\'C3\'A1ml\'C3\'A1z\'C3\'A1s id\'C5\'91pontja \cell }
{\row }
}
}{
Definition at line {\b 23} of file {\b contracts.cpp}.}\par
}
{\xe \v setTariff\:Contract}
{\xe \v Contract\:setTariff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Contract::setTariff (double  {\i tariff_in})}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Be\'E1ll\'EDtja az \'FAj tarif\'E1t. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tariff_in} \cell }{Be\'E1ll\'EDtand\'F3 tarifa \cell }
{\row }
}
}{
Definition at line {\b 11} of file {\b contracts.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
contracts.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
contracts.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Contract_date Class Reference\par \pard\plain 
{\tc\tcl2 \v Contract_date}
{\xe \v Contract_date}
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Egy id\'C5\'91p\'C3\'A1rt t\'C3\'A1rol. }}\par
{
{\f2 #include <date.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Contract_date} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
param\'E9ter n\'E9lk\'FCl h\'EDvhat\'F3 konstruktor }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Contract_date} (int year_begin, int month_begin, int day_begin, int year_end, int month_end, int day_end)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Date} {\b getBegin} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a kezdeti id\'C5\'91pontot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Date} {\b getEnd} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a v\'C3\'A9gs\'C5\'91 id\'C5\'91pontot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBegin} (int year, int month, int day)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Be\'C3\'A1ll\'C3\'ADtja a kezdeti id\'C5\'91pontot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setEnd} (int year, int month, int day)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Be\'C3\'A1ll\'C3\'ADtja a v\'C3\'A9gs\'C5\'91 id\'C5\'91pontot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b contains} (const {\b Date} &date_in) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ellen\'C5\'91rzi hogy a param\'C3\'A9terk\'C3\'A9nt kapott d\'C3\'A1tum a d\'C3\'A1tump\'C3\'A1r k\'C3\'B6z\'C3\'B6tt van-e. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Contract_date} & {\b operator=} (const {\b Contract_date} &contractDate_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
= oper\'C3\'A1tor az = jel helyes m\'C5\'B1k\'C3\'B6d\'C3\'A9s\'C3\'A9hez }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Egy id\'C5\'91p\'C3\'A1rt t\'C3\'A1rol. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i beging} \cell }{Az kezdeti id\'C5\'91pont \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i end} \cell }{A v\'C3\'A9gs\'C5\'91 id\'C5\'91pont \cell }
{\row }
}
}{
Definition at line {\b 101} of file {\b date.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Contract_date\:Contract_date}
{\xe \v Contract_date\:Contract_date}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Contract_date::Contract_date (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
param\'E9ter n\'E9lk\'FCl h\'EDvhat\'F3 konstruktor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line {\b 111} of file {\b date.h}.}\par
}
{\xe \v Contract_date\:Contract_date}
{\xe \v Contract_date\:Contract_date}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Contract_date::Contract_date (int  {\i year_begin}, int  {\i month_begin}, int  {\i day_begin}, int  {\i year_end}, int  {\i month_end}, int  {\i day_end}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i year_begin} \cell }{Bej\'C3\'B6v\'C5\'91 kezdeti \'C3\'A9v \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i month_begin} \cell }{Bej\'C3\'B6v\'C5\'91 kezdeti h\'C3\'B3nap \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i day_begin} \cell }{Bej\'C3\'B6v\'C5\'91 kezdeti nap \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i year_end} \cell }{Bej\'C3\'B6v\'C5\'91 v\'C3\'A9gzeti \'C3\'A9v \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i month_end} \cell }{Bej\'C3\'B6v\'C5\'91 v\'C3\'A9gzeti h\'C3\'B3nap \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i day_end} \cell }{Bej\'C3\'B6v\'C5\'91 v\'C3\'A9gzeti nap \cell }
{\row }
}
}{
Definition at line {\b 122} of file {\b date.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v contains\:Contract_date}
{\xe \v Contract_date\:contains}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Contract_date::contains (const {\b Date} &  {\i date_in}) const}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ellen\'C5\'91rzi hogy a param\'C3\'A9terk\'C3\'A9nt kapott d\'C3\'A1tum a d\'C3\'A1tump\'C3\'A1r k\'C3\'B6z\'C3\'B6tt van-e. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i date} \cell }{param\'E9terk\'E9nt kapott d\'E1tum \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
A d\'E1tump\'E1r k\'F6z\'F6tt van? \par
}}}{
Definition at line {\b 76} of file {\b date.cpp}.}\par
}
{\xe \v getBegin\:Contract_date}
{\xe \v Contract_date\:getBegin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Date} Contract_date::getBegin () const}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a kezdeti id\'C5\'91pontot. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
kezdeti id\'C5\'91pont \par
}}}{
Definition at line {\b 59} of file {\b date.cpp}.}\par
}
{\xe \v getEnd\:Contract_date}
{\xe \v Contract_date\:getEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Date} Contract_date::getEnd () const}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a v\'C3\'A9gs\'C5\'91 id\'C5\'91pontot. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
V\'C3\'A9gs\'C5\'91 id\'C5\'91pont \par
}}}{
Definition at line {\b 63} of file {\b date.cpp}.}\par
}
{\xe \v operator=\:Contract_date}
{\xe \v Contract_date\:operator=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Contract_date} & Contract_date::operator= (const {\b Contract_date} &  {\i contractDate_in})}}
\par
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
= oper\'C3\'A1tor az = jel helyes m\'C5\'B1k\'C3\'B6d\'C3\'A9s\'C3\'A9hez }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i contractDate_in} \cell }{Bej\'C3\'B6v\'C5\'91 contractDate \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Visszaadand\'F3 contractDate \par
}}}{
Definition at line {\b 80} of file {\b date.cpp}.}\par
}
{\xe \v setBegin\:Contract_date}
{\xe \v Contract_date\:setBegin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Contract_date::setBegin (int  {\i year}, int  {\i month}, int  {\i day})}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Be\'C3\'A1ll\'C3\'ADtja a kezdeti id\'C5\'91pontot. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i year} \cell }{Be\'E1ll\'EDtand\'F3 \'E9v \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i month} \cell }{Be\'E1ll\'EDtand\'F3 h\'F3nap \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i day} \cell }{Be\'E1ll\'EDtand\'F3 nap \cell }
{\row }
}
}{
Definition at line {\b 67} of file {\b date.cpp}.}\par
}
{\xe \v setEnd\:Contract_date}
{\xe \v Contract_date\:setEnd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Contract_date::setEnd (int  {\i year}, int  {\i month}, int  {\i day})}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Be\'C3\'A1ll\'C3\'ADtja a v\'C3\'A9gs\'C5\'91 id\'C5\'91pontot. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i year} \cell }{Be\'E1ll\'EDtand\'F3 \'E9v \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i month} \cell }{Be\'E1ll\'EDtand\'F3 h\'F3nap \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i day} \cell }{Be\'E1ll\'EDtand\'F3 nap \cell }
{\row }
}
}{
Definition at line {\b 72} of file {\b date.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
date.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
date.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Date Class Reference\par \pard\plain 
{\tc\tcl2 \v Date}
{\xe \v Date}
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Egy d\'E1tumot t\'E1rol time_point form\'E1tumba. }}\par
{
{\f2 #include <date.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Date} (int year, int month, int day)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::chrono::system_clock::time_point {\b into_date} (int year, int month, int day)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Id\'C5\'91pontt\'C3\'A1 alak\'C3\'ADt egy d\'C3\'A1tumot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b print_date} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ki\'C3\'ADrja az id\'C5\'91pontot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator==} (const {\b Date} &in) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
== oper\'E1tor \'F6sszehasonl\'EDt\'E1shoz }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator<} (const {\b Date} &in) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< oper\'E1tor \'F6sszehasonl\'EDt\'E1shoz }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator>} (const {\b Date} &in) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
> oper\'E1tor \'F6sszehasonl\'EDt\'E1shoz }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator<=} (const {\b Date} &in) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
<= oper\'E1tor \'F6sszehasonl\'EDt\'E1shoz }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b operator>=} (const {\b Date} &in) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
>= oper\'E1tor \'F6sszehasonl\'EDt\'E1shoz }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b toString} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a d\'E1tumot string form\'E1tumban. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Egy d\'E1tumot t\'E1rol time_point form\'E1tumba. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tp} \cell }{t\'E1rolt d\'E1tum \cell }
{\row }
}
}{
Definition at line {\b 16} of file {\b date.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Date\:Date}
{\xe \v Date\:Date}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Date::Date (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 21} of file {\b date.h}.}\par
}
{\xe \v Date\:Date}
{\xe \v Date\:Date}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Date::Date (int  {\i year}, int  {\i month}, int  {\i day}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@Konstruktor\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i year} \cell }{Be\'E1ll\'EDtand\'F3 \'E9v \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i month} \cell }{Be\'E1ll\'EDtand\'F3 h\'F3nap \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i day} \cell }{Be\'E1ll\'EDtand\'F3 nap \cell }
{\row }
}
}{
Definition at line {\b 29} of file {\b date.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v into_date\:Date}
{\xe \v Date\:into_date}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::chrono::system_clock::time_point Date::into_date (int  {\i year}, int  {\i month}, int  {\i day})}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Id\'C5\'91pontt\'C3\'A1 alak\'C3\'ADt egy d\'C3\'A1tumot. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i year} \cell }{Bej\'C3\'B6v\'C5\'91 \'C3\'A9v \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i month} \cell }{Bej\'C3\'B6v\'C5\'91 h\'C3\'B3nap \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i day} \cell }{Bej\'C3\'B6v\'C5\'91 nap \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
id\'C5\'91pontt\'C3\'A1 alak\'C3\'ADtott d\'C3\'A1tum \par
}}}{
Definition at line {\b 7} of file {\b date.cpp}.}\par
}
{\xe \v operator<\:Date}
{\xe \v Date\:operator<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Date::operator< (const {\b Date} &  {\i in}) const}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< oper\'E1tor \'F6sszehasonl\'EDt\'E1shoz }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i in} \cell }{\'D6sszehasonl\'EDtand\'F3 d\'E1tum \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Kisebb? \par
}}}{
Definition at line {\b 24} of file {\b date.cpp}.}\par
}
{\xe \v operator<=\:Date}
{\xe \v Date\:operator<=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Date::operator<= (const {\b Date} &  {\i in}) const}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
<= oper\'E1tor \'F6sszehasonl\'EDt\'E1shoz }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i in} \cell }{\'D6sszehasonl\'EDtand\'F3 d\'E1tum \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Kisebb vagy egyenl\'C5\'91? \par
}}}{
Definition at line {\b 32} of file {\b date.cpp}.}\par
}
{\xe \v operator==\:Date}
{\xe \v Date\:operator==}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Date::operator== (const {\b Date} &  {\i in}) const}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
== oper\'E1tor \'F6sszehasonl\'EDt\'E1shoz }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i in} \cell }{\'D6sszehasonl\'EDtand\'F3 d\'E1tum \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Egyenl\'C5\'91ek \par
}}}{
Definition at line {\b 20} of file {\b date.cpp}.}\par
}
{\xe \v operator>\:Date}
{\xe \v Date\:operator>}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Date::operator> (const {\b Date} &  {\i in}) const}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
> oper\'E1tor \'F6sszehasonl\'EDt\'E1shoz }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i in} \cell }{\'D6sszehasonl\'EDtand\'F3 d\'E1tum \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Nagyobb? \par
}}}{
Definition at line {\b 28} of file {\b date.cpp}.}\par
}
{\xe \v operator>=\:Date}
{\xe \v Date\:operator>=}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Date::operator>= (const {\b Date} &  {\i in}) const}}
\par
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
>= oper\'E1tor \'F6sszehasonl\'EDt\'E1shoz }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i in} \cell }{\'D6sszehasonl\'EDtand\'F3 d\'E1tum \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Nagyobb vagy egyenl\'C5\'91? \par
}}}{
Definition at line {\b 36} of file {\b date.cpp}.}\par
}
{\xe \v print_date\:Date}
{\xe \v Date\:print_date}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Date::print_date () const}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ki\'C3\'ADrja az id\'C5\'91pontot. }}\par
{
Definition at line {\b 13} of file {\b date.cpp}.}\par
}
{\xe \v toString\:Date}
{\xe \v Date\:toString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Date::toString () const}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a d\'E1tumot string form\'E1tumban. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
\par
}}}{
Definition at line {\b 40} of file {\b date.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
date.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
date.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MVM Class Reference\par \pard\plain 
{\tc\tcl2 \v MVM}
{\xe \v MVM}
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'DCgyfeleket t\'E1rol\'F3 class. }}\par
{
{\f2 #include <MVM.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MVM} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
param\'E9ter n\'E9lk\'FCl h\'EDvhat\'F3 konstruktor }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addClient} ({\b Client} *client_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hozz\'E1ad egy \'FAj klienst. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addContract} ({\b Client} *client_in, ContractType ctype_in, int year_begin, int month_begin, int day_begin, int year_end, int month_end, int day_end, int invo_in_year, int invo_in_month, int invo_in_day, double tariff_in=0.0, double balance_in=0.0, double consumption_in=0.0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Client} * {\b getClient} (const std::string name_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a keresett \'FCgyfelet a neve alapj\'E1n. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const std::string {\b getCompanyDetails} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Az {\b MVM} adatait adja vissza. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b deleteClient} (const std::string name_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kit\'F6r\'F6l egy \'FCgyfelet a neve alapj\'E1n. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~MVM} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destruktor. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Company} {\b MVM_company} = {\b Company}("MVM ZRT.", 10760798244)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'DCgyfeleket t\'E1rol\'F3 class. \par
}{
Definition at line {\b 22} of file {\b MVM.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MVM\:MVM}
{\xe \v MVM\:MVM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MVM::MVM (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
param\'E9ter n\'E9lk\'FCl h\'EDvhat\'F3 konstruktor }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line {\b 38} of file {\b MVM.h}.}\par
}
{\xe \v ~MVM\:MVM}
{\xe \v MVM\:~MVM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
MVM::~MVM ()}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line {\b 35} of file {\b MVM.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v addClient\:MVM}
{\xe \v MVM\:addClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MVM::addClient ({\b Client} *  {\i client_in})}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hozz\'E1ad egy \'FAj klienst. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Elt\'C3\'A1rolja a klienst, amit el\'C5\'91re l\'C3\'A9tre kell hozni, de a felszabad\'C3\'ADt\'C3\'A1st az {\b MVM} oszt\'C3\'A1ly v\'C3\'A9gzi {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i client_in} \cell }{Szerz\'C5\'91d\'C3\'A9st k\'C3\'B6t\'C5\'91 \'C3\'BCgyf\'C3\'A9l \cell }
{\row }
}
}{
Definition at line {\b 9} of file {\b MVM.cpp}.}\par
}
{\xe \v addContract\:MVM}
{\xe \v MVM\:addContract}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MVM::addContract ({\b Client} *  {\i client_in}, ContractType  {\i ctype_in}, int  {\i year_begin}, int  {\i month_begin}, int  {\i day_begin}, int  {\i year_end}, int  {\i month_end}, int  {\i day_end}, int  {\i invo_in_year}, int  {\i invo_in_month}, int  {\i invo_in_day}, double  {\i tariff_in} = {\f2 0.0}, double  {\i balance_in} = {\f2 0.0}, double  {\i consumption_in} = {\f2 0.0})}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
@briefHozz\'C3\'A1ad egy szerz\'C5\'91d\'C3\'A9st\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i client_in} \cell }{Szerz\'C5\'91d\'C3\'A9st k\'C3\'B6t\'C5\'91 \'C3\'BCgyf\'C3\'A9l \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ctype_in} \cell }{Szerz\'C5\'91d\'C3\'A9s t\'C3\'ADpusa \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i year_begin} \cell }{Szerz\'C5\'91d\'C3\'A9sk\'C3\'B6t\'C3\'A9s kezdeti \'C3\'A9ve \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i month_begin} \cell }{Szerz\'C5\'91d\'C3\'A9sk\'C3\'B6t\'C3\'A9s kezdeti h\'C3\'B3napja \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i day_begin} \cell }{Szerz\'C5\'91d\'C3\'A9sk\'C3\'B6t\'C3\'A9s kezdeti napja \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i year_end} \cell }{Szerz\'C5\'91d\'C3\'A9sk\'C3\'B6t\'C3\'A9s v\'C3\'A9gs\'C5\'91 \'C3\'A9ve \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i month_end} \cell }{Szerz\'C5\'91d\'C3\'A9sk\'C3\'B6t\'C3\'A9s v\'C3\'A9gs\'C5\'91 h\'C3\'B3napja \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i day_end} \cell }{Szerz\'C5\'91d\'C3\'A9sk\'C3\'B6t\'C3\'A9s v\'C3\'A9gs\'C5\'91 napja \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i invo_in_year} \cell }{Legut\'F3bbi sz\'E1ml\'E1z\'E1s \'E9ve \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i invo_in_month} \cell }{Legut\'F3bbi sz\'E1ml\'E1z\'E1s h\'F3napja \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i invo_in_day} \cell }{Legut\'F3bbi sz\'E1ml\'E1z\'E1s napja \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i tariff_in} \cell }{KWh-k\'E9nti \'E1r \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i balance_in} \cell }{Bej\'C3\'B6v\'C5\'91 egyenleg \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i consumption_in} \cell }{Bej\'C3\'B6v\'C5\'91 fogyaszt\'C3\'A1s \cell }
{\row }
}
}{
Definition at line {\b 14} of file {\b MVM.cpp}.}\par
}
{\xe \v deleteClient\:MVM}
{\xe \v MVM\:deleteClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void MVM::deleteClient (const std::string  {\i name_in})}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kit\'F6r\'F6l egy \'FCgyfelet a neve alapj\'E1n. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name_in} \cell }{T\'C3\'B6rlend\'C5\'91 \'C3\'BCgyf\'C3\'A9l neve \cell }
{\row }
}
}{
Definition at line {\b 31} of file {\b MVM.cpp}.}\par
}
{\xe \v getClient\:MVM}
{\xe \v MVM\:getClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Client} * MVM::getClient (const std::string  {\i name_in})}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a keresett \'FCgyfelet a neve alapj\'E1n. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name_in} \cell }{Keresett \'FCgyf\'E9l neve \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Keresett \'FCgyf\'E9l \par
}}}{
Definition at line {\b 20} of file {\b MVM.cpp}.}\par
}
{\xe \v getCompanyDetails\:MVM}
{\xe \v MVM\:getCompanyDetails}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const std::string MVM::getCompanyDetails ()}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Az {\b MVM} adatait adja vissza. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{\b MVM} adatai \par
}}}{
Definition at line {\b 27} of file {\b MVM.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v MVM_company\:MVM}
{\xe \v MVM\:MVM_company}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Company} MVM::MVM_company = {\b Company}("MVM ZRT.", 10760798244){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Az {\b MVM} adatai \par
}{
Definition at line {\b 33} of file {\b MVM.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MVM.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
MVM.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MyVector< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v MyVector< T >}
{\xe \v MyVector< T >}
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indexelhet\'C5\'91s\'C3\'A9ghez std::vektor mint\'C3\'A1j\'C3\'A1ra saj\'C3\'A1t vektor template. }}\par
{
{\f2 #include <myvektor.hpp>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MyVector} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alap\'E9rt\'E9kes konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b push_back} (T value)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bej\'C3\'B6v\'C5\'91 objektum t\'C3\'A1rol\'C3\'A1sa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b size} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a t\'E1rolt objektumok sz\'E1m\'E1t. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b capacity} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a jelenlegi kapacit\'E1st. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b erase} (size_t pos)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Egy elem elt\'C3\'A1vol\'C3\'ADt\'C3\'A1sa a t\'C3\'A1rolt objektumok k\'C3\'B6z\'C3\'BCl egy bizonyos helyr\'C5\'91l. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b pop_back} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Utols\'F3 objektum elt\'E1vol\'EDt\'E1sa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T & {\b operator[]} (size_t i)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
[] oper\'C3\'A1tor az indexelhet\'C5\'91s\'C3\'A9ghez }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const T & {\b operator[]} (size_t i) const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
[] oper\'C3\'A1tor az indexelhet\'C5\'91s\'C3\'A9ghez constans form\'C3\'A1ban is }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~MyVector} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destruktor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<typename T>\par
class MyVector< T >\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Indexelhet\'C5\'91s\'C3\'A9ghez std::vektor mint\'C3\'A1j\'C3\'A1ra saj\'C3\'A1t vektor template. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Template Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i T} \cell }{T\'E1rolt objektumok fajt\'E1ja\cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i m_buffer} \cell }{Az adat buffer elej\'E9re mutat\'F3 pointer \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i m_capacity} \cell }{A maxim\'E1lis kapacit\'E1s a jelenlegi foglalt ter\'FClettel \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i m_size} \cell }{A jelenleg t\'E1rolt objektumok sz\'E1ma \cell }
{\row }
}
}{
Definition at line {\b 21} of file {\b myvektor.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v MyVector\:MyVector< T >}
{\xe \v MyVector< T >\:MyVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b MyVector}< T >{\b ::MyVector} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alap\'E9rt\'E9kes konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line {\b 49} of file {\b myvektor.hpp}.}\par
}
{\xe \v ~MyVector\:MyVector< T >}
{\xe \v MyVector< T >\:~MyVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > {\b MyVector}< T >::~{\b MyVector} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line {\b 127} of file {\b myvektor.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v capacity\:MyVector< T >}
{\xe \v MyVector< T >\:capacity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > size_t {\b MyVector}< T >::capacity () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a jelenlegi kapacit\'E1st. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
jelenlegi kapacit\'E1s \par
}}}{
Definition at line {\b 77} of file {\b myvektor.hpp}.}\par
}
{\xe \v erase\:MyVector< T >}
{\xe \v MyVector< T >\:erase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b MyVector}< T >::erase (size_t  {\i pos}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Egy elem elt\'C3\'A1vol\'C3\'ADt\'C3\'A1sa a t\'C3\'A1rolt objektumok k\'C3\'B6z\'C3\'BCl egy bizonyos helyr\'C5\'91l. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i pos} \cell }{Az elt\'E1vol\'EDtand\'F3 objektum indexe \cell }
{\row }
}
}{
Definition at line {\b 85} of file {\b myvektor.hpp}.}\par
}
{\xe \v operator[]\:MyVector< T >}
{\xe \v MyVector< T >\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > T & {\b MyVector}< T >::operator[] (size_t  {\i i}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
[] oper\'C3\'A1tor az indexelhet\'C5\'91s\'C3\'A9ghez }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i i} \cell }{Az el\'E9rni k\'EDv\'E1nt objektum indexe \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Visszaadand\'F3 objektum \par
}}}{
Definition at line {\b 109} of file {\b myvektor.hpp}.}\par
}
{\xe \v operator[]\:MyVector< T >}
{\xe \v MyVector< T >\:operator[]}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > const T & {\b MyVector}< T >::operator[] (size_t  {\i i}) const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
[] oper\'C3\'A1tor az indexelhet\'C5\'91s\'C3\'A9ghez constans form\'C3\'A1ban is }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i i} \cell }{Az el\'E9rni k\'EDv\'E1nt objektum indexe \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Visszaadand\'F3 objektum \par
}}}{
Definition at line {\b 119} of file {\b myvektor.hpp}.}\par
}
{\xe \v pop_back\:MyVector< T >}
{\xe \v MyVector< T >\:pop_back}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b MyVector}< T >::pop_back (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Utols\'F3 objektum elt\'E1vol\'EDt\'E1sa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line {\b 98} of file {\b myvektor.hpp}.}\par
}
{\xe \v push_back\:MyVector< T >}
{\xe \v MyVector< T >\:push_back}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > void {\b MyVector}< T >::push_back (T  {\i value}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Bej\'C3\'B6v\'C5\'91 objektum t\'C3\'A1rol\'C3\'A1sa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{Bej\'C3\'B6v\'C5\'91 objektum \cell }
{\row }
}
}{
Definition at line {\b 57} of file {\b myvektor.hpp}.}\par
}
{\xe \v size\:MyVector< T >}
{\xe \v MyVector< T >\:size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename T > size_t {\b MyVector}< T >::size () const{\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a t\'E1rolt objektumok sz\'E1m\'E1t. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
t\'E1rolt objektumok sz\'E1ma \par
}}}{
Definition at line {\b 69} of file {\b myvektor.hpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
myvektor.hpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Person Class Reference\par \pard\plain 
{\tc\tcl2 \v Person}
{\xe \v Person}
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mag\'E1nszem\'E9ly adatait t\'E1rolja. }}\par
{
{\f2 #include <clients.h>}}\par
Inheritance diagram for Person:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_person.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Person} (const std::string name_in="", long ID_in=0)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alap\'E9rt\'E9kes konstruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setID} (long ID_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Szem\'E9lyigazolv\'E1ny be\'E1ll\'EDt\'E1sa. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
long {\b getID} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mag\'E1nszem\'E9ly szem\'E9lyigazolv\'E1nysz\'E1m\'E1t adja vissza. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getsub_Client_info} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a gyermek oszt\'E1ly szem\'E9lyes adatait ki\'EDr\'E1shoz egy string-ben. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Person} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destruktor. }{
}\par
}\par}
}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Public Member Functions inherited from {\b Client}\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Client} (const std::string name_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alap\'E9rt\'E9kes kontruktor. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b getSumOfAll_Contract} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a kliens \'C3\'A1ltal eddig k\'C3\'B6t\'C3\'B6tt szerz\'C5\'91d\'C3\'A9sek sz\'C3\'A1m\'C3\'A1t. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b getName} () const\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszadja a kliens nev\'E9t. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addContract} ({\b Contract} &contract_in)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Szerz\'C5\'91d\'C3\'A9s hozz\'C3\'A1ad\'C3\'A1sa a mycontracts hez. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual std::string {\b getsub_Client_info} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a gyermek oszt\'E1ly szem\'E9lyes adatait ki\'EDr\'E1shoz egy string-ben. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b save_invoice} (size_t contract_index, const {\b Date} &date)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sz\'E1ml\'E1t \'E1ll\'EDt ki f\'E1jlba. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Contract} & {\b getContract} (size_t contract_ID)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja azt a szerz\'C5\'91d\'C3\'A9st aminek az azonos\'C3\'ADt\'C3\'B3j\'C3\'A1t megadtuk. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual {\b ~Client} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Virtu\'E1lis destruktor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mag\'E1nszem\'E9ly adatait t\'E1rolja. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s80\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ID} \cell }{A szem\'E9ly szem\'E9lyazonos\'EDt\'F3 sz\'E1ma \cell }
{\row }
}
}{
Definition at line {\b 83} of file {\b clients.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Person\:Person}
{\xe \v Person\:Person}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Person::Person (const std::string  {\i name_in} = {\f2 ""}, long  {\i ID_in} = {\f2 0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Alap\'E9rt\'E9kes konstruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i name_in} \cell }{Bej\'C3\'B6v\'C5\'91 mag\'C3\'A1nszem\'C3\'A9ly neve \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ID_in} \cell }{Bej\'C3\'B6v\'C5\'91 mag\'C3\'A1nszem\'C3\'A9ly szem\'C3\'A9lyigazolv\'C3\'A1nysz\'C3\'A1ma \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i SumOfAll_contract} \cell }{A kliens \'C3\'A1ltal eddig k\'C3\'B6t\'C3\'B6tt szerz\'C5\'91d\'C3\'A9sek sz\'C3\'A1ma (nem jelenlegi) \cell }
{\row }
}
}{
Definition at line {\b 92} of file {\b clients.h}.}\par
}
{\xe \v ~Person\:Person}
{\xe \v Person\:~Person}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Person::~Person ()}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destruktor. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{
Definition at line {\b 47} of file {\b clients.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getID\:Person}
{\xe \v Person\:getID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
long Person::getID () const}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mag\'E1nszem\'E9ly szem\'E9lyigazolv\'E1nysz\'E1m\'E1t adja vissza. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Mag\'E1nszem\'E9ly szem\'E9lyigazolv\'E1nysz\'E1ma \par
}}}{
Definition at line {\b 39} of file {\b clients.cpp}.}\par
}
{\xe \v getsub_Client_info\:Person}
{\xe \v Person\:getsub_Client_info}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string Person::getsub_Client_info (){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Visszaadja a gyermek oszt\'E1ly szem\'E9lyes adatait ki\'EDr\'E1shoz egy string-ben. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
gyermek oszt\'E1ly szem\'E9lyes adatai ki\'EDr\'E1shoz egy string-ben \par
}}}{
Reimplemented from {\b Client} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAACB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line {\b 35} of file {\b clients.cpp}.}\par
}
{\xe \v setID\:Person}
{\xe \v Person\:setID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Person::setID (long  {\i ID_in})}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Szem\'E9lyigazolv\'E1ny be\'E1ll\'EDt\'E1sa. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ID_in} \cell }{Be\'C3\'A9rkez\'C5\'91 szem\'C3\'A9lyigazolv\'C3\'A1nysz\'C3\'A1m \cell }
{\row }
}
}{
Definition at line {\b 43} of file {\b clients.cpp}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
clients.h\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
clients.cpp\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest_lite::Test Struct Reference\par \pard\plain 
{\tc\tcl2 \v gtest_lite::Test}
{\xe \v gtest_lite::Test}
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
\par
{
{\f2 #include <gtest_lite.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} (const char *n)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Teszt kezdete. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b end} (bool memchk=false)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Teszt v\'E9ge. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b fail} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b expect} (bool st, const char *file, int line, const char *expr, bool pr=false)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Eredm\'E9nyt adminisztr\'E1l\'F3 tagf\'FCggv\'E9ny True a j\'F3 eset. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Test} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destruktor. }{
}\par
}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Public Member Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static {\b Test} & {\b getTest} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sum}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tesztek sz\'E1ml\'E1l\'F3ja }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b failed}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
hib\'E1s tesztek }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ablocks}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
allok\'E1lt blokkok sz\'E1ma }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b status}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'E9ppen fut\'F3 teszt st\'E1tusza }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b tmp}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
temp a kiv\'E9telkezel\'E9shez; }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::string {\b name}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'E9ppen fut\'F3 teszt neve }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::fstream {\b null}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
nyel\'C5\'91, ha nem kell ki\'C3\'ADrni semmit }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Tesztek \'E1llapot\'E1t t\'E1rol\'F3 oszt\'E1ly. Egyetlen egy statikus p\'E9ld\'E1ny keletkezik, aminek a destruktora a fut\'E1s v\'E9g\'E9n h\'EDv\'F3dik meg. \par
}{
Definition at line {\b 198} of file {\b gtest_lite.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ~Test\:gtest_lite::Test}
{\xe \v gtest_lite::Test\:~Test}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
gtest_lite::Test::~Test (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destruktor. }}\par
{
Definition at line {\b 263} of file {\b gtest_lite.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:gtest_lite::Test}
{\xe \v gtest_lite::Test\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void gtest_lite::Test::begin (const char *  {\i n}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Teszt kezdete. }}\par
{
Definition at line {\b 216} of file {\b gtest_lite.h}.}\par
}
{\xe \v end\:gtest_lite::Test}
{\xe \v gtest_lite::Test\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::ostream & gtest_lite::Test::end (bool  {\i memchk} = {\f2 false}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Teszt v\'E9ge. }}\par
{
Definition at line {\b 227} of file {\b gtest_lite.h}.}\par
}
{\xe \v expect\:gtest_lite::Test}
{\xe \v gtest_lite::Test\:expect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::ostream & gtest_lite::Test::expect (bool  {\i st}, const char *  {\i file}, int  {\i line}, const char *  {\i expr}, bool  {\i pr} = {\f2 false}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Eredm\'E9nyt adminisztr\'E1l\'F3 tagf\'FCggv\'E9ny True a j\'F3 eset. }}\par
{
Definition at line {\b 247} of file {\b gtest_lite.h}.}\par
}
{\xe \v fail\:gtest_lite::Test}
{\xe \v gtest_lite::Test\:fail}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool gtest_lite::Test::fail (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 244} of file {\b gtest_lite.h}.}\par
}
{\xe \v getTest\:gtest_lite::Test}
{\xe \v gtest_lite::Test\:getTest}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static {\b Test} & gtest_lite::Test::getTest (){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
< egyed\'FCli (singleton) p\'E9ld\'E1ny\par
}{
Definition at line {\b 206} of file {\b gtest_lite.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v ablocks\:gtest_lite::Test}
{\xe \v gtest_lite::Test\:ablocks}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int gtest_lite::Test::ablocks}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
allok\'E1lt blokkok sz\'E1ma }}\par
{
Definition at line {\b 201} of file {\b gtest_lite.h}.}\par
}
{\xe \v failed\:gtest_lite::Test}
{\xe \v gtest_lite::Test\:failed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int gtest_lite::Test::failed}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
hib\'E1s tesztek }}\par
{
Definition at line {\b 200} of file {\b gtest_lite.h}.}\par
}
{\xe \v name\:gtest_lite::Test}
{\xe \v gtest_lite::Test\:name}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::string gtest_lite::Test::name}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'E9ppen fut\'F3 teszt neve }}\par
{
Definition at line {\b 204} of file {\b gtest_lite.h}.}\par
}
{\xe \v null\:gtest_lite::Test}
{\xe \v gtest_lite::Test\:null}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::fstream gtest_lite::Test::null}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
nyel\'C5\'91, ha nem kell ki\'C3\'ADrni semmit }}\par
{
Definition at line {\b 205} of file {\b gtest_lite.h}.}\par
}
{\xe \v status\:gtest_lite::Test}
{\xe \v gtest_lite::Test\:status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool gtest_lite::Test::status}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'E9ppen fut\'F3 teszt st\'E1tusza }}\par
{
Definition at line {\b 202} of file {\b gtest_lite.h}.}\par
}
{\xe \v sum\:gtest_lite::Test}
{\xe \v gtest_lite::Test\:sum}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int gtest_lite::Test::sum}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
tesztek sz\'E1ml\'E1l\'F3ja }}\par
{
Definition at line {\b 199} of file {\b gtest_lite.h}.}\par
}
{\xe \v tmp\:gtest_lite::Test}
{\xe \v gtest_lite::Test\:tmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool gtest_lite::Test::tmp}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
temp a kiv\'E9telkezel\'E9shez; }}\par
{
Definition at line {\b 203} of file {\b gtest_lite.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this struct was generated from the following file:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b gtest_lite.h}}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
clients.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 //}\par
00002 {\cf20 // Created by Jajecnik Marcell on 2023. 05. 04..}\par
00003 {\cf20 //}\par
00004 \par
00005 {\cf21 #include "clients.h"}\par
00006 \par
00007 std::string Client::getName(){\cf17  const}\{\par
00008     {\cf19 return} name;\par
00009 \}\par
00010 \par
00011 {\cf18 void} Client::addContract(Contract& contract_in) \{\par
00012     SumOfAll_contract++;\par
00013     mycontracts.push_back(contract_in);\par
00014 \}\par
00015 \par
00016 {\cf18 size_t} Client::getSumOfAll_Contract() \{\par
00017     {\cf19 return} SumOfAll_contract;\par
00018 \}\par
00019 \par
00020 std::string Client::getsub_Client_info() \{\par
00021     {\cf19 return} {\cf22 "Client name: "} + getName();\par
00022 \}\par
00023 \par
00024 {\cf18 void} Client::save_invoice({\cf18 size_t} contract_index, {\cf17 const} Date& date) \{\par
00025     getContract(contract_index).invoice(date);\par
00026 \}\par
00027 \par
00028 Contract &Client::getContract({\cf18 size_t} contract_index) \{\par
00029     {\cf19 if} (contract_index<=0 || contract_index>getSumOfAll_Contract()) {\cf19 throw} std::range_error({\cf22 "Nem l\'C3\'A9tez\'C5\'91 contract"});\par
00030     {\cf19 for} ({\cf18 size_t} i = 0; i < mycontracts.size(); ++i) \{\par
00031         {\cf19 if} (mycontracts[i].getContractID()==contract_index) {\cf19 return} mycontracts[i];\par
00032     \}\par
00033 \}\par
00034 \par
00035 std::string Person::getsub_Client_info() \{\par
00036     {\cf19 return} {\cf22 "Person name: "} + getName() + {\cf22 ", ID: "} + std::to_string(ID);\par
00037 \}\par
00038 \par
00039 {\cf18 long} Person::getID(){\cf17  const }\{\par
00040     {\cf19 return} ID;\par
00041 \}\par
00042 \par
00043 {\cf18 void} Person::setID({\cf18 long} ID_in) \{\par
00044     ID=ID_in;\par
00045 \}\par
00046 \par
00047 Person::~Person() \{\par
00048 \par
00049 \}\par
00050 \par
00051 {\cf18 long} Company::getID(){\cf17  const }\{\par
00052     {\cf19 return} Tax_ID;\par
00053 \}\par
00054 \par
00055 {\cf18 void} Company::setID({\cf18 long} ID_in) \{\par
00056     Tax_ID=ID_in;\par
00057 \}\par
00058 \par
00059 std::string Company::getsub_Client_info() \{\par
00060     {\cf19 return} {\cf22 "Company name: "} + getName() + {\cf22 ", Tax ID: "} + std::to_string(Tax_ID);\par
00061 \}\par
00062 \par
00063 \par
00064 Company::~Company() \{\par
00065 \par
00066 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
clients.h\par \pard\plain 
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 //}\par
00002 {\cf20 // Created by Jajecnik Marcell on 2023. 05. 04..}\par
00003 {\cf20 //}\par
00004 \par
00005 {\cf21 #ifndef SKELETON_CLIENTS_H}\par
00006 {\cf21 #define SKELETON_CLIENTS_H}\par
00007 \par
00008 {\cf21 #include "date.h"}\par
00009 {\cf21 #include "myvektor.hpp"}\par
00010 {\cf21 #include "contracts.h"}\par
00011 {\cf21 #include <string>}\par
00012 \par
00014 {\cf17 class }Contract;\par
00015 \par
00021 {\cf17 class }Client\{\par
00022 {\cf17 private}:\par
00023     std::string name;\par
00024     MyVector<Contract> mycontracts;\par
00025     {\cf18 size_t} SumOfAll_contract;\par
00026 \par
00027 {\cf17 public}:\par
00033     Client({\cf17 const} std::string name_in):name(std::string(name_in)), SumOfAll_contract(0)\{\}\par
00034 \par
00039     {\cf18 size_t} getSumOfAll_Contract();\par
00040 \par
00045     std::string getName() {\cf17 const};\par
00046 \par
00051     {\cf18 void} addContract(Contract& contract_in);\par
00052 \par
00058     {\cf17 virtual} std::string getsub_Client_info();\par
00059 \par
00065     {\cf18 void} save_invoice({\cf18 size_t} contract_index, {\cf17 const} Date& date);\par
00066 \par
00072     Contract& getContract({\cf18 size_t} contract_ID);\par
00073 \par
00077     {\cf17 virtual} ~Client()\{\};\par
00078 \};\par
00079 \par
00083 {\cf17 class }Person: {\cf17 public} Client\{\par
00084 {\cf17 private}:\par
00085     {\cf18 long} ID;\par
00086 {\cf17 public}:\par
00092     Person({\cf17 const} std::string name_in={\cf22 ""}, {\cf18 long} ID_in=0)\par
00093     : Client(std::string(name_in)), ID(ID_in)\par
00094     \{\}\par
00095 \par
00100     {\cf18 void} setID({\cf18 long} ID_in);\par
00101 \par
00106     {\cf18 long} getID() {\cf17 const};\par
00107 \par
00113     std::string getsub_Client_info();\par
00114 \par
00118     ~Person();\par
00119 \};\par
00120 \par
00124 {\cf17 class }Company: {\cf17 public} Client\{\par
00125 {\cf17 private}:\par
00126     {\cf18 long} Tax_ID;\par
00127 {\cf17 public}:\par
00128 \par
00135     Company(std::string name_in={\cf22 ""}, {\cf18 long} ID_in=0)\par
00136     : Client(name_in), Tax_ID(ID_in)\par
00137     \{\}\par
00138 \par
00143     {\cf18 void} setID({\cf18 long} ID_in);\par
00144 \par
00149     {\cf18 long} getID() {\cf17 const};\par
00150 \par
00156     std::string getsub_Client_info();\par
00157 \par
00161     ~Company();\par
00162 \};\par
00163 \par
00164 {\cf21 #endif }{\cf20 //SKELETON_CLIENTS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
contracts.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 //}\par
00002 {\cf20 // Created by Jajecnik Marcell on 2023. 05. 05..}\par
00003 {\cf20 //}\par
00004 \par
00005 {\cf21 #include "contracts.h"}\par
00006 \par
00007 {\cf18 void} Contract::setCtype(ContractType ctype_in) \{\par
00008     contract_type = ctype_in;\par
00009 \}\par
00010 \par
00011 {\cf18 void} Contract::setTariff({\cf18 double} tariff_in) \{\par
00012     tariff = tariff_in;\par
00013 \}\par
00014 \par
00015 {\cf18 void} Contract::setBalance({\cf18 double} balance_in) \{\par
00016     balance = balance_in;\par
00017 \}\par
00018 \par
00019 {\cf18 void} Contract::addConsumption({\cf18 double} con_in) \{\par
00020     consumption += con_in;\par
00021 \}\par
00022 \par
00023 {\cf18 void} Contract::setLast_invoicing(Date last_in) \{\par
00024     last_invoicing = last_in;\par
00025 \}\par
00026 \par
00027 {\cf18 void} Contract::setCtime(Contract_date ctime_in) \{\par
00028     contract_time = ctime_in;\par
00029 \}\par
00030 \par
00031 Client* Contract::getClient() \{\par
00032     {\cf19 return} client;\par
00033 \}\par
00034 \par
00035 {\cf18 size_t} Contract::getContractID(){\cf17  const}\{\par
00036     {\cf19 return} contract_ID;\par
00037 \}\par
00038 \par
00039 ContractType Contract::getCtype(){\cf17  const }\{\par
00040     {\cf19 return} contract_type;\par
00041 \}\par
00042 \par
00043 {\cf18 double} Contract::getTariff(){\cf17  const }\{\par
00044     {\cf19 return} tariff;\par
00045 \}\par
00046 \par
00047 {\cf18 double} Contract::getBalance(){\cf17  const }\{\par
00048     {\cf19 return} balance;\par
00049 \}\par
00050 \par
00051 {\cf18 double} Contract::getConsumption(){\cf17  const }\{\par
00052     {\cf19 return} consumption;\par
00053 \}\par
00054 \par
00055 Contract_date Contract::getCtime(){\cf17  const }\{\par
00056     {\cf19 return} contract_time;\par
00057 \}\par
00058 \par
00059 {\cf17 const} std::string Contract::Ctype_toString(){\cf17  const }\{\par
00060     {\cf19 switch} (contract_type) \{\par
00061     {\cf19 case} ContractType::Regular: {\cf19 return} {\cf22 "Regular"};\par
00062     {\cf19 case} ContractType::VIP: {\cf19 return} {\cf22 "VIP"};\par
00063     {\cf19 case} ContractType::Premium: {\cf19 return} {\cf22 "Premium"};\par
00064     {\cf19 case} ContractType::Corporate: {\cf19 return} {\cf22 "Corporate"};\par
00065     {\cf19 case} ContractType::Student: {\cf19 return} {\cf22 "Student"};\par
00066     {\cf19 case} ContractType::SeniorCitizen: {\cf19 return} {\cf22 "SeniorCitizen"};\par
00067     {\cf19 case} ContractType::Government: {\cf19 return} {\cf22 "Government"};\par
00068     {\cf19 case} ContractType::Onetime: {\cf19 return} {\cf22 "Onetime"};\par
00069     {\cf19 default}: {\cf19 return} {\cf22 "Unknown"};\par
00070     \}\par
00071 \}\par
00072 \par
00073 Date Contract::getLast_invoicing(){\cf17  const }\{\par
00074     {\cf19 return} last_invoicing;\par
00075 \}\par
00076 \par
00077 {\cf18 void} Contract::pay({\cf18 double} amount) \{\par
00078     balance += amount;\par
00079 \}\par
00080 \par
00081 {\cf18 void} Contract::invoice( {\cf17 const} Date &today) \{\par
00082     std::ofstream outfile;\par
00083     std::string filename = client->getName() + {\cf22 "_"} + std::to_string(contract_ID) + {\cf22 ".txt"};\par
00084 \par
00085     outfile.open(filename);\par
00086     {\cf20 // Write contract details}\par
00087     outfile << {\cf22 "Contract details:"} << std::endl; \par
00088         outfile<< {\cf22 "Seller details:"} << std::endl;\par
00089     outfile<<{\cf22 "Seller name: "}<< MVM::MVM_company.getsub_Client_info() << std::endl;\par
00090     outfile << {\cf22 "Client name: "} << getClient()->getName() << std::endl;\par
00091     outfile << {\cf22 "Client ID: "} << getClient()->getsub_Client_info() << std::endl;\par
00092     outfile << {\cf22 "Contract type: "} << Ctype_toString() << std::endl;\par
00093     outfile << {\cf22 "Contract start date: "} << getCtime().getBegin().toString() << std::endl;\par
00094     outfile << {\cf22 "Contract end date: "} << getCtime().getEnd().toString() << std::endl;\par
00095     outfile << {\cf22 "Last invoicing date: "} << getLast_invoicing().toString() << std::endl;\par
00096     outfile << {\cf22 "Tariff: "} << std::fixed << std::setprecision(2) << getTariff() << {\cf22 " Ft/KWh"} << std::endl;\par
00097     outfile << {\cf22 "Balance: "} << std::fixed << std::setprecision(2) << getBalance() << {\cf22 " Ft"} << std::endl;\par
00098     outfile << {\cf22 "Consumption since last invoicing: "} << std::fixed << std::setprecision(2) << getConsumption() << {\cf22 " KWh"} << std::endl;\par
00099 \par
00100     {\cf20 // Calculate invoice details}\par
00101     {\cf18 double} consumption = getConsumption();\par
00102     {\cf18 double} prev_balance =getBalance();\par
00103     {\cf18 double} tariff = getTariff();\par
00104     {\cf18 double} vat = 0.27; {\cf20 // Value added tax}\par
00105     {\cf18 double} subtotal = consumption * tariff;\par
00106     {\cf18 double} total = subtotal * (1 + vat);\par
00107     {\cf18 double} new_balance = prev_balance + total;\par
00108 \par
00109     {\cf20 // Write invoice details}\par
00110     outfile << std::endl;\par
00111     outfile << {\cf22 "Invoice details:"} << std::endl;\par
00112     outfile << {\cf22 "Invoice date: "} << today.toString() << std::endl;\par
00113     outfile << {\cf22 "Previous balance: "} << std::fixed << std::setprecision(2) << prev_balance << {\cf22 " Ft"} << std::endl;\par
00114     outfile << {\cf22 "Tariff: "} << std::fixed << std::setprecision(2) << tariff << {\cf22 " Ft/KWh"} << std::endl;\par
00115     outfile << {\cf22 "Consumption: "} << std::fixed << std::setprecision(2) << consumption << {\cf22 " KWh"} << std::endl;\par
00116     outfile << {\cf22 "Subtotal: "} << std::fixed << std::setprecision(2) << subtotal << {\cf22 " Ft"} << std::endl;\par
00117     outfile << {\cf22 "VAT ("} << std::fixed << std::setprecision(2) << vat*100 << {\cf22 "%): "} << std::fixed << std::setprecision(2) << subtotal * vat << {\cf22 " Ft"} << std::endl;\par
00118     outfile << {\cf22 "Total: "} << std::fixed << std::setprecision(2) << total << {\cf22 " Ft"} << std::endl;\par
00119     outfile << {\cf22 "New balance: "} << std::fixed << std::setprecision(2) << new_balance << {\cf22 " Ft"} << std::endl;\par
00120 \par
00121     outfile.close();\par
00122 \}\par
00123 \par
00124 Contract::~Contract() \{\par
00125 \par
00126 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
contracts.h\par \pard\plain 
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 //}\par
00002 {\cf20 // Created by Jajecnik Marcell on 2023. 05. 05..}\par
00003 {\cf20 //}\par
00004 \par
00005 {\cf21 #ifndef SKELETON_CONTRACTS_H}\par
00006 {\cf21 #define SKELETON_CONTRACTS_H}\par
00007 {\cf21 #include "clients.h"}\par
00008 {\cf21 #include "iomanip"}\par
00009 {\cf21 #include "fstream"}\par
00010 {\cf21 #include "MVM.h"}\par
00011 \par
00012 {\cf17 class }Client;\par
00013 \par
00017 {\cf17 enum class} ContractType \{\par
00018     Regular,\par
00019     VIP,\par
00020     Premium,\par
00021     Corporate,\par
00022     Student,\par
00023     SeniorCitizen,\par
00024     Government,\par
00025     Onetime\par
00026 \};\par
00027 \par
00039 {\cf17 class }Contract \{\par
00040 \par
00041 {\cf17 public}:\par
00042 \par
00046     Contract() \{\};\par
00047 \par
00066     Contract(Client* client_in, ContractType ctype_in, {\cf18 int} year_begin, {\cf18 int} month_begin, {\cf18 int} day_begin, {\cf18 int} year_end, {\cf18 int} month_end, {\cf18 int} day_end, {\cf18 int} invo_in_year, {\cf18 int} invo_in_month, {\cf18 int} invo_in_day, {\cf18 size_t} ContractID_in ,{\cf18 double} tariff_in=0.0, {\cf18 double} balance_in=0.0, {\cf18 double} consumption_in=0.0)\par
00067             :client(client_in),contract_ID(ContractID_in), contract_type(ctype_in), contract_time(year_begin, month_begin, day_begin, year_end, month_end, day_end), last_invoicing(invo_in_year, invo_in_month, invo_in_day), tariff(tariff_in), balance(balance_in), consumption(consumption_in)\par
00068     \{\}\par
00069 \par
00070     {\cf20 // Setter functions}\par
00075 {\cf20 }    {\cf18 void} setCtype(ContractType ctype_in);\par
00076 \par
00081     {\cf18 void} setTariff({\cf18 double} tariff_in);\par
00082 \par
00087     {\cf18 void} setBalance({\cf18 double} balance_in);\par
00088 \par
00093     {\cf18 void} addConsumption({\cf18 double} con_in);\par
00094 \par
00099     {\cf18 void} setLast_invoicing(Date last_in);\par
00100 \par
00105     {\cf18 void} setCtime(Contract_date ctime_in);\par
00106 \par
00111     Client* getClient();\par
00112 \par
00117     {\cf18 size_t} getContractID() {\cf17 const};\par
00118 \par
00123    ContractType getCtype() {\cf17 const};\par
00124 \par
00129     {\cf18 double} getTariff() {\cf17 const};\par
00130 \par
00135     {\cf18 double} getBalance() {\cf17 const};\par
00136 \par
00141     {\cf18 double} getConsumption() {\cf17 const};\par
00142 \par
00147     Contract_date getCtime() {\cf17 const};\par
00148 \par
00153     {\cf17 const} std::string Ctype_toString() {\cf17 const};\par
00154 \par
00159     Date getLast_invoicing() {\cf17 const};\par
00160 \par
00165     {\cf18 void} pay({\cf18 double} amount);\par
00166 \par
00171     {\cf18 void} invoice( {\cf17 const} Date& today);\par
00172 \par
00176     ~Contract();\par
00177 {\cf17 private}:\par
00178 \par
00179     Client* client;\par
00180     {\cf18 int} contract_ID;\par
00181     ContractType contract_type;\par
00182     Contract_date contract_time;\par
00183     Date last_invoicing;\par
00184     {\cf18 double} tariff;\par
00185     {\cf18 double} balance;\par
00186     {\cf18 double} consumption;\par
00187 \par
00188 \};\par
00189 \par
00190 {\cf21 #endif }{\cf20 //SKELETON_CONTRACTS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
date.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 //}\par
00002 {\cf20 // Created by Jajecnik Marcell on 2023. 05. 04..}\par
00003 {\cf20 //}\par
00004 \par
00005 {\cf21 #include "date.h"}\par
00006 \par
00007 std::chrono::system_clock::time_point Date::into_date({\cf18 int} year, {\cf18 int} month, {\cf18 int} day) \{\par
00008     std::tm tm = \{ 0, 0, 0, day, month - 1, year - 1900 \}; {\cf20 // Month is 0-based, year is 1900-based}\par
00009     std::time_t tt = std::mktime(&tm);\par
00010     {\cf19 return} std::chrono::system_clock::from_time_t(tt);\par
00011 \}\par
00012 \par
00013 {\cf18 void} Date::print_date(){\cf17  const}\{\par
00014     std::time_t tt = std::chrono::system_clock::to_time_t(tp);\par
00015     {\cf18 char} buffer[11];\par
00016     std::strftime(buffer, 11, {\cf22 "%Y-%m-%d"}, std::localtime(&tt));\par
00017     std::cout << {\cf22 "Date entered: "} << buffer;\par
00018 \}\par
00019 \par
00020 {\cf18 bool} Date::operator==({\cf17 const} Date& in){\cf17  const }\{\par
00021     {\cf19 return}  tp == in.tp;\par
00022 \}\par
00023 \par
00024 {\cf18 bool} Date::operator<({\cf17 const} Date& in){\cf17  const }\{\par
00025     {\cf19 return} tp < in.tp;\par
00026 \}\par
00027 \par
00028 {\cf18 bool} Date::operator>({\cf17 const} Date& in){\cf17  const }\{\par
00029     {\cf19 return} tp > in.tp;\par
00030 \}\par
00031 \par
00032 {\cf18 bool} Date::operator<=({\cf17 const} Date& in){\cf17  const }\{\par
00033     {\cf19 return} tp <= in.tp;\par
00034 \}\par
00035 \par
00036 {\cf18 bool} Date::operator>=({\cf17 const} Date& in){\cf17  const }\{\par
00037     {\cf19 return} tp >= in.tp;\par
00038 \}\par
00039 \par
00040 std::string Date::toString(){\cf17  const }\{\par
00041     {\cf20 // Convert the time_point to a time_t}\par
00042     std::time_t tt = std::chrono::system_clock::to_time_t(tp);\par
00043 \par
00044     {\cf20 // Convert the time_t to a struct tm}\par
00045     std::tm tm = *std::localtime(&tt);\par
00046 \par
00047     {\cf20 // Format the date as a string}\par
00048     std::stringstream ss;\par
00049     ss << std::put_time(&tm, {\cf22 "%Y-%m-%d"});\par
00050     {\cf19 return} ss.str();\par
00051 \}\par
00052 \par
00053 \par
00054 std::ostream& operator<<(std::ostream os, {\cf17 const} Date& date) \{\par
00055     date.print_date();\par
00056     {\cf19 return} os;\par
00057 \}\par
00058 \par
00059 Date Contract_date::getBegin(){\cf17  const }\{\par
00060     {\cf19 return} begin;\par
00061 \}\par
00062 \par
00063 Date Contract_date::getEnd(){\cf17  const }\{\par
00064     {\cf19 return} end;\par
00065 \}\par
00066 \par
00067 {\cf18 void} Contract_date::setBegin({\cf18 int} year, {\cf18 int} month, {\cf18 int} day) \{\par
00068     begin = Date(year, month, day);\par
00069 \par
00070 \}\par
00071 \par
00072 {\cf18 void} Contract_date::setEnd({\cf18 int} year, {\cf18 int} month, {\cf18 int} day) \{\par
00073     end = Date(year, month, day);;\par
00074 \}\par
00075 \par
00076 {\cf18 bool} Contract_date::contains({\cf17 const} Date& date_in){\cf17  const }\{\par
00077     {\cf19 return} (date_in >= begin && date_in <= end);\par
00078 \}\par
00079 \par
00080 Contract_date &Contract_date::operator=({\cf17 const} Contract_date &contractDate_in) \{\par
00081     {\cf19 if} (!(this->begin==contractDate_in.begin && this->end==contractDate_in.end)) \{\par
00082         this->begin = contractDate_in.begin;\par
00083         this->end = contractDate_in.end;\par
00084     \}\par
00085     {\cf19 return} *{\cf17 this};\par
00086 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
date.h\par \pard\plain 
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 //}\par
00002 {\cf20 // Created by Jajecnik Marcell on 2023. 05. 04..}\par
00003 {\cf20 //}\par
00004 \par
00005 {\cf21 #ifndef SKELETON_DATE_H}\par
00006 {\cf21 #define SKELETON_DATE_H}\par
00007 \par
00008 {\cf21 #include <iostream>}\par
00009 {\cf21 #include <chrono>}\par
00010 {\cf21 #include "sstream"}\par
00011 {\cf21 #include "iomanip"}\par
00012 \par
00016 {\cf17 class }Date \{\par
00017 {\cf17 private}:\par
00018     std::chrono::system_clock::time_point tp;\par
00019 \par
00020 {\cf17 public}:\par
00021     Date()\{\}\par
00022 \par
00029     Date({\cf18 int} year, {\cf18 int} month, {\cf18 int} day): tp(into_date(year,month,day)) \{\}\par
00030 \par
00038     std::chrono::system_clock::time_point into_date({\cf18 int} year, {\cf18 int} month, {\cf18 int} day);\par
00039 \par
00042     {\cf18 void} print_date() {\cf17 const};\par
00043 \par
00049     {\cf18 bool} operator==({\cf17 const} Date& in) {\cf17 const};\par
00050 \par
00056     {\cf18 bool} operator<({\cf17 const} Date& in) {\cf17 const};\par
00057 \par
00063     {\cf18 bool} operator>({\cf17 const} Date& in) {\cf17 const};\par
00064 \par
00070     {\cf18 bool} operator<=({\cf17 const} Date& in) {\cf17 const};\par
00071 \par
00077     {\cf18 bool} operator>=({\cf17 const} Date& in) {\cf17 const};\par
00078 \par
00084     std::string toString() {\cf17 const};\par
00085 \};\par
00086 \par
00093 std::ostream& operator<<(std::ostream os, {\cf17 const} Date& date);\par
00094 \par
00095 \par
00096 \par
00101 {\cf17 class }Contract_date \{\par
00102 {\cf17 private}:\par
00103     Date begin;\par
00104     Date end;\par
00105 \par
00106 {\cf17 public}:\par
00107 \par
00111     Contract_date()\{\}\par
00112 \par
00122     Contract_date({\cf18 int} year_begin, {\cf18 int} month_begin, {\cf18 int} day_begin, {\cf18 int} year_end, {\cf18 int} month_end, {\cf18 int} day_end)\par
00123         : begin(Date(year_begin, month_begin, day_begin)), end(Date(year_end, month_end, day_end))\par
00124     \{\}\par
00125 \par
00130     Date getBegin() {\cf17 const};\par
00131 \par
00136     Date getEnd() {\cf17 const};\par
00137 \par
00144     {\cf18 void} setBegin({\cf18 int} year, {\cf18 int} month, {\cf18 int} day);\par
00145 \par
00152     {\cf18 void} setEnd({\cf18 int} year, {\cf18 int} month, {\cf18 int} day);\par
00153 \par
00159     {\cf18 bool} contains({\cf17 const} Date& date_in) {\cf17 const};\par
00160 \par
00161 \par
00167     Contract_date& operator=({\cf17 const} Contract_date& contractDate_in);\par
00168 \};\par
00169 \par
00170 \par
00171 {\cf21 #endif }{\cf20 //SKELETON_DATE_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest_lite.h File Reference\par \pard\plain 
{\tc\tcl2 \v gtest_lite.h}
{\xe \v gtest_lite.h}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <cassert>}\par
{\f2 #include <cmath>}\par
{\f2 #include <cstring>}\par
{\f2 #include <limits>}\par
{\f2 #include <string>}\par
{\f2 #include <fstream>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b _Is_Types< F, T >}{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seg\'C3\'A9dsablon t\'C3\'ADpuskonverzi\'C3\'B3 fut\'C3\'A1s k\'C3\'B6zbeni ellen\'C5\'91rz\'C3\'A9sere. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b gtest_lite::Test}}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Namespaces\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
namespace {\b gtest_lite}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b gtest_lite}: a keretrendszer f\'FCggv\'E9nyinek \'E9s objektumainak n\'E9vtere }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEST}(C,  N)\~ \{ gtest_lite::test.begin(#C"."#N);\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b END}\~ gtest_lite::test.end(); \}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Teszteset v\'E9ge. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ENDM}\~ gtest_lite::test.end(true); \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ENDMsg}(t)\~ gtest_lite::test.end(true) << t << std::endl; \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SUCCEED}()\~ gtest_lite::test.expect(true, __FILE__, __LINE__, "SUCCEED()", true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sikeres teszt makr\'F3ja. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FAIL}()\~ gtest_lite::test.expect(false, __FILE__, __LINE__, "FAIL()", true)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sikertelen teszt makr\'F3ja. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_EQ}(expected,  actual)\~ {\b gtest_lite::EXPECT_}(expected, actual, {\b gtest_lite::eq}, __FILE__, __LINE__, "EXPECT_EQ(" #expected ", " #actual ")" )\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Azonoss\'E1got elv\'E1r\'F3 makr\'F3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_NE}(expected,  actual)\~ {\b gtest_lite::EXPECT_}(expected, actual, gtest_lite::ne, __FILE__, __LINE__, "EXPECT_NE(" #expected ", " #actual ")", "etalon" )\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Elt\'E9r\'E9st elv\'E1r\'F3 makr\'F3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_LE}(expected,  actual)\~ {\b gtest_lite::EXPECT_}(expected, actual, gtest_lite::le, __FILE__, __LINE__, "EXPECT_LE(" #expected ", " #actual ")", "etalon" )\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kisebb, vagy egyenl\'C5\'91 rel\'C3\'A1ci\'C3\'B3t elv\'C3\'A1r\'C3\'B3 makr\'C3\'B3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_LT}(expected,  actual)\~ {\b gtest_lite::EXPECT_}(expected, actual, gtest_lite::lt, __FILE__, __LINE__, "EXPECT_LT(" #expected ", " #actual ")", "etalon" )\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kisebb, mint rel\'E1ci\'F3t elv\'E1r\'F3 makr\'F3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_GE}(expected,  actual)\~ {\b gtest_lite::EXPECT_}(expected, actual, gtest_lite::ge, __FILE__, __LINE__, "EXPECT_GE(" #expected ", " #actual ")", "etalon" )\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nagyobb, vagy egyenl\'C5\'91 rel\'C3\'A1ci\'C3\'B3t elv\'C3\'A1r\'C3\'B3 makr\'C3\'B3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_GT}(expected,  actual)\~ {\b gtest_lite::EXPECT_}(expected, actual, gtest_lite::gt, __FILE__, __LINE__, "EXPECT_GT(" #expected ", " #actual ")", "etalon" )\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nagyobb, mint rel\'E1ci\'F3t elv\'E1r\'F3 makr\'F3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_TRUE}(actual)\~ {\b gtest_lite::EXPECT_}(true, actual,  {\b gtest_lite::eq}, __FILE__, __LINE__, "EXPECT_TRUE(" #actual ")" )\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Igaz \'E9rt\'E9ket elv\'E1r\'F3 makr\'F3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_FALSE}(actual)\~ {\b gtest_lite::EXPECT_}(false, actual, {\b gtest_lite::eq}, __FILE__, __LINE__, "EXPECT_FALSE(" #actual ")" )\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hamis \'E9rt\'E9ket elv\'E1r\'F3 makr\'F3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_FLOAT_EQ}(expected,  actual)\~ {\b gtest_lite::EXPECT_}(expected, actual, {\b gtest_lite::almostEQ}, __FILE__, __LINE__, "EXPECT_FLOAT_EQ(" #expected ", " #actual ")" )\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Val\'F3s sz\'E1mok azonoss\'E1g\'E1t elv\'E1r\'F3 makr\'F3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_DOUBLE_EQ}(expected,  actual)\~ {\b gtest_lite::EXPECT_}(expected, actual, {\b gtest_lite::almostEQ}, __FILE__, __LINE__, "EXPECT_DOUBLE_EQ(" #expected ", " #actual ")" )\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Val\'F3s sz\'E1mok azonoss\'E1g\'E1t elv\'E1r\'F3 makr\'F3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_STREQ}(expected,  actual)\~ {\b gtest_lite::EXPECTSTR}(expected, actual, gtest_lite::eqstr, __FILE__, __LINE__, "EXPECT_STREQ(" #expected ", " #actual ")" )\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C stringek (const char *) azonoss\'C3\'A1g\'C3\'A1t tesztel\'C5\'91 makr\'C3\'B3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_STRNE}(expected,  actual)\~ {\b gtest_lite::EXPECTSTR}(expected, actual, gtest_lite::nestr, __FILE__, __LINE__, "EXPECT_STRNE(" #expected ", " #actual ")", "etalon" )\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C stringek (const char *) elt\'C3\'A9r\'C3\'A9set tesztel\'C5\'91 makr\'C3\'B3 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_THROW}(statement,  exception_type)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kiv\'E9telt v\'E1runk. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_ANY_THROW}(statement)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kiv\'E9telt v\'E1runk. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_NO_THROW}(statement)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nem v\'E1runk kiv\'E9telt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ASSERT_NO_THROW}(statement)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nem v\'E1runk kiv\'E9telt gtest kompatibilit\'E1s miatt. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECT_THROW_THROW}(statement,  exception_type)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kiv\'E9telt v\'E1runk \'E9s tov\'E1bbdobjuk \'96 ilyen nincs a gtest-ben. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CREATE_Has_}(X)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EXPECTTHROW}(statement,  exp,  act)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EXPECTTHROW: kiv\'E9telkezel\'E9s. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTINIT}(IS)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b GTEND}(os)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b hasMember} (...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > std::ostream & {\b gtest_lite::EXPECT_} (T1 exp, T2 act, bool(*pred)(T1, T2), const char *file, int line, const char *expr, const char *lhs="elvart", const char *rhs="aktual")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\'E1ltal\'E1nos sablon a v\'E1rt \'E9rt\'E9khez. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > std::ostream & {\b gtest_lite::EXPECT_} (T1 *exp, T2 *act, bool(*pred)(T1 *, T2 *), const char *file, int line, const char *expr, const char *lhs="elvart", const char *rhs="aktual")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pointerre specializ\'E1lt sablon a v\'E1rt \'E9rt\'E9khez. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::ostream & {\b gtest_lite::EXPECTSTR} (const char *exp, const char *act, bool(*pred)(const char *, const char *), const char *file, int line, const char *expr, const char *lhs="elvart", const char *rhs="aktual")\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > bool {\b gtest_lite::eq} (T1 a, T2 b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b gtest_lite::eqstr} (const char *a, const char *b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > bool {\b gtest_lite::ne} (T1 a, T2 b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b gtest_lite::nestr} (const char *a, const char *b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > bool {\b gtest_lite::le} (T1 a, T2 b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > bool {\b gtest_lite::lt} (T1 a, T2 b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > bool {\b gtest_lite::ge} (T1 a, T2 b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T1 , typename T2 > bool {\b gtest_lite::gt} (T1 a, T2 b)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename T > bool {\b gtest_lite::almostEQ} (T a, T b)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
(v3/2019)\par
Google gtest keretrendszerhez hasonl\'F3 rendszer. Sz.I. 2015., 2016., 2017. (_Has_X) Sz.I. 2018 (template), ENDM, ENDMsg, nullptr_t Sz.I. 2019 singleton\par
A tesztel\'C3\'A9s legalapvet\'C5\'91bb funkci\'C3\'B3it t\'C3\'A1mogat\'C3\'B3 f\'C3\'BCggv\'C3\'A9nyek \'C3\'A9s makr\'C3\'B3k. Nem sz\'C3\'A1lbiztos megval\'C3\'B3s\'C3\'ADt\'C3\'A1s.\par
Szabadon felhaszn\'C3\'A1lhat\'C3\'B3, b\'C5\'91v\'C3\'ADthet\'C5\'91.\par
Haszn\'E1lati p\'E9lda: Tesztelj\'FCk az f(x)=2*x f\'FCggv\'E9nyt: int f(int x) \{ return 2*x; \}\par
int main() \{ {\b TEST(TeszEsetNeve, TesztNeve)} {\b EXPECT_EQ(0, f(0))}; {\b EXPECT_EQ(4, f(2))} << "A f\'FCggv\'E9ny hib\'E1s eredm\'E9nyt adott" << std::endl; ... END ...\par
A m\'C5\'B1k\'C3\'B6d\'C3\'A9s r\'C3\'A9szleteinek meg\'C3\'A9rt\'C3\'A9se szorgalmi feladat. \par
}{
Definition in file {\b gtest_lite.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ASSERT_NO_THROW\:gtest_lite.h}
{\xe \v gtest_lite.h\:ASSERT_NO_THROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ASSERT_NO_THROW( statement)}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf19 try} \{ gtest_lite::test.tmp = {\cf17 true}; statement; \} \\\par
    catch (...) \{ gtest_lite::test.tmp = {\cf17 false}; \}\\\par
    EXPECTTHROW(statement, {\cf22 "nem dob kivetelt."}, {\cf22 "kivetelt dobott."})\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nem v\'E1runk kiv\'E9telt gtest kompatibilit\'E1s miatt. }}\par
{
Definition at line {\b 130} of file {\b gtest_lite.h}.}\par
}
{\xe \v CREATE_Has_\:gtest_lite.h}
{\xe \v gtest_lite.h\:CREATE_Has_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CREATE_Has_( X)}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid {\cf17 template}<{\cf17 typename} T> {\cf17 struct }_Has_##X \{  \\\par
    {\cf17 struct }Fallback \{ {\cf18 int} X; \};         \\\par
    {\cf17 struct }Derived : T, Fallback \{\};    \\\par
    {\cf17 template}<{\cf17 typename} C, C> {\cf17 struct }ChT; \\\par
    {\cf17 template}<{\cf17 typename} D> {\cf17 static} char (&f(ChT<int Fallback::*, &D::X>*))[1]; \\\par
    {\cf17 template}<{\cf17 typename} D> {\cf17 static} char (&f(...))[2]; \\\par
    {\cf17 static} {\cf18 bool} {\cf17 const} member = {\cf17 sizeof}(f<Derived>(0)) == 2; \\\par
\};\par
}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seg\'C3\'A9dmakr\'C3\'B3 egy adattag, vagy tagf\'C3\'BCggv\'C3\'A9ny l\'C3\'A9tez\'C3\'A9s\'C3\'A9nek tesztel\'C3\'A9s\'C3\'A9re fut\'C3\'A1si id\'C5\'91ben \'C3\'96tlet: {\f2 https://cpptalk.wordpress.com/2009/09/12/substitution-failure-is-not-an-error-2} Haszn\'C3\'A1lat: {\b CREATE_Has_(size)} ... if (_Has_size<std::string>::member)... \par
}{
Definition at line {\b 145} of file {\b gtest_lite.h}.}\par
}
{\xe \v END\:gtest_lite.h}
{\xe \v gtest_lite.h\:END}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define END\~ gtest_lite::test.end(); \}}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Teszteset v\'E9ge. }}\par
{
Definition at line {\b 56} of file {\b gtest_lite.h}.}\par
}
{\xe \v ENDM\:gtest_lite.h}
{\xe \v gtest_lite.h\:ENDM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ENDM\~ gtest_lite::test.end(true); \}}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Teszteset v\'C3\'A9ge allok\'C3\'A1lt blokkok sz\'C3\'A1m\'C3\'A1nak \'C3\'B6sszehasonl\'C3\'ADt\'C3\'A1s\'C3\'A1val Ez az ellen\'C5\'91rz\'C3\'A9s nem bomba biztos. \par
}{
Definition at line {\b 60} of file {\b gtest_lite.h}.}\par
}
{\xe \v ENDMsg\:gtest_lite.h}
{\xe \v gtest_lite.h\:ENDMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ENDMsg( t)\~ gtest_lite::test.end(true) << t << std::endl; \}}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Teszteset v\'C3\'A9ge allok\'C3\'A1lt blokkok sz\'C3\'A1m\'C3\'A1nak \'C3\'B6sszehasonl\'C3\'ADt\'C3\'A1s\'C3\'A1val Ez az ellen\'C5\'91rz\'C3\'A9s nem bomba biztos. Ha hiba van ki\'C3\'ADrja az \'C3\'BCzenetet. \par
}{
Definition at line {\b 65} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_ANY_THROW\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECT_ANY_THROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_ANY_THROW( statement)}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf19 try} \{ gtest_lite::test.tmp = {\cf17 false}; statement; \} \\\par
    catch (...) \{ gtest_lite::test.tmp = {\cf17 true}; \} \\\par
    EXPECTTHROW(statement, {\cf22 "kivetelt dob."}, {\cf22 "nem dobott kivetelt."})\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kiv\'E9telt v\'E1runk. }}\par
{
Definition at line {\b 120} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_DOUBLE_EQ\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECT_DOUBLE_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_DOUBLE_EQ( expected,  actual)\~ {\b gtest_lite::EXPECT_}(expected, actual, {\b gtest_lite::almostEQ}, __FILE__, __LINE__, "EXPECT_DOUBLE_EQ(" #expected ", " #actual ")" )}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Val\'F3s sz\'E1mok azonoss\'E1g\'E1t elv\'E1r\'F3 makr\'F3 }}\par
{
Definition at line {\b 105} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_EQ\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECT_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_EQ( expected,  actual)\~ {\b gtest_lite::EXPECT_}(expected, actual, {\b gtest_lite::eq}, __FILE__, __LINE__, "EXPECT_EQ(" #expected ", " #actual ")" )}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Azonoss\'E1got elv\'E1r\'F3 makr\'F3 }}\par
{
Definition at line {\b 78} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_FALSE\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECT_FALSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_FALSE( actual)\~ {\b gtest_lite::EXPECT_}(false, actual, {\b gtest_lite::eq}, __FILE__, __LINE__, "EXPECT_FALSE(" #actual ")" )}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Hamis \'E9rt\'E9ket elv\'E1r\'F3 makr\'F3 }}\par
{
Definition at line {\b 99} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_FLOAT_EQ\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECT_FLOAT_EQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_FLOAT_EQ( expected,  actual)\~ {\b gtest_lite::EXPECT_}(expected, actual, {\b gtest_lite::almostEQ}, __FILE__, __LINE__, "EXPECT_FLOAT_EQ(" #expected ", " #actual ")" )}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Val\'F3s sz\'E1mok azonoss\'E1g\'E1t elv\'E1r\'F3 makr\'F3 }}\par
{
Definition at line {\b 102} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_GE\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECT_GE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_GE( expected,  actual)\~ {\b gtest_lite::EXPECT_}(expected, actual, gtest_lite::ge, __FILE__, __LINE__, "EXPECT_GE(" #expected ", " #actual ")", "etalon" )}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nagyobb, vagy egyenl\'C5\'91 rel\'C3\'A1ci\'C3\'B3t elv\'C3\'A1r\'C3\'B3 makr\'C3\'B3 }}\par
{
Definition at line {\b 90} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_GT\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECT_GT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_GT( expected,  actual)\~ {\b gtest_lite::EXPECT_}(expected, actual, gtest_lite::gt, __FILE__, __LINE__, "EXPECT_GT(" #expected ", " #actual ")", "etalon" )}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nagyobb, mint rel\'E1ci\'F3t elv\'E1r\'F3 makr\'F3 }}\par
{
Definition at line {\b 93} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_LE\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECT_LE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_LE( expected,  actual)\~ {\b gtest_lite::EXPECT_}(expected, actual, gtest_lite::le, __FILE__, __LINE__, "EXPECT_LE(" #expected ", " #actual ")", "etalon" )}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kisebb, vagy egyenl\'C5\'91 rel\'C3\'A1ci\'C3\'B3t elv\'C3\'A1r\'C3\'B3 makr\'C3\'B3 }}\par
{
Definition at line {\b 84} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_LT\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECT_LT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_LT( expected,  actual)\~ {\b gtest_lite::EXPECT_}(expected, actual, gtest_lite::lt, __FILE__, __LINE__, "EXPECT_LT(" #expected ", " #actual ")", "etalon" )}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kisebb, mint rel\'E1ci\'F3t elv\'E1r\'F3 makr\'F3 }}\par
{
Definition at line {\b 87} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_NE\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECT_NE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_NE( expected,  actual)\~ {\b gtest_lite::EXPECT_}(expected, actual, gtest_lite::ne, __FILE__, __LINE__, "EXPECT_NE(" #expected ", " #actual ")", "etalon" )}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Elt\'E9r\'E9st elv\'E1r\'F3 makr\'F3 }}\par
{
Definition at line {\b 81} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_NO_THROW\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECT_NO_THROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_NO_THROW( statement)}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf19 try} \{ gtest_lite::test.tmp = {\cf17 true}; statement; \} \\\par
    catch (...) \{ gtest_lite::test.tmp = {\cf17 false}; \}\\\par
    EXPECTTHROW(statement, {\cf22 "nem dob kivetelt."}, {\cf22 "kivetelt dobott."})\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Nem v\'E1runk kiv\'E9telt. }}\par
{
Definition at line {\b 125} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_STREQ\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECT_STREQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_STREQ( expected,  actual)\~ {\b gtest_lite::EXPECTSTR}(expected, actual, gtest_lite::eqstr, __FILE__, __LINE__, "EXPECT_STREQ(" #expected ", " #actual ")" )}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C stringek (const char *) azonoss\'C3\'A1g\'C3\'A1t tesztel\'C5\'91 makr\'C3\'B3 }}\par
{
Definition at line {\b 108} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_STRNE\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECT_STRNE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_STRNE( expected,  actual)\~ {\b gtest_lite::EXPECTSTR}(expected, actual, gtest_lite::nestr, __FILE__, __LINE__, "EXPECT_STRNE(" #expected ", " #actual ")", "etalon" )}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
C stringek (const char *) elt\'C3\'A9r\'C3\'A9set tesztel\'C5\'91 makr\'C3\'B3 }}\par
{
Definition at line {\b 111} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_THROW\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECT_THROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_THROW( statement,  exception_type)}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf19 try} \{ gtest_lite::test.tmp = {\cf17 false}; statement; \} \\\par
    catch (exception_type) \{ gtest_lite::test.tmp = {\cf17 true}; \} \\\par
    catch (...) \{ \} \\\par
    EXPECTTHROW(statement, {\cf22 "kivetelt dob."}, {\cf22 "nem dobott '"}#exception_type{\cf22 "' kivetelt."})\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kiv\'E9telt v\'E1runk. }}\par
{
Definition at line {\b 114} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_THROW_THROW\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECT_THROW_THROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_THROW_THROW( statement,  exception_type)}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf19 try} \{ gtest_lite::test.tmp = {\cf17 false}; statement; \} \\\par
    catch (exception_type) \{ gtest_lite::test.tmp = {\cf17 true}; {\cf19 throw}; \} \\\par
    EXPECTTHROW(statement, {\cf22 "kivetelt dob."}, {\cf22 "nem dobott '"}#exception_type{\cf22 "' kivetelt."})\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Kiv\'E9telt v\'E1runk \'E9s tov\'E1bbdobjuk \'96 ilyen nincs a gtest-ben. }}\par
{
Definition at line {\b 135} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECT_TRUE\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECT_TRUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECT_TRUE( actual)\~ {\b gtest_lite::EXPECT_}(true, actual,  {\b gtest_lite::eq}, __FILE__, __LINE__, "EXPECT_TRUE(" #actual ")" )}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Igaz \'E9rt\'E9ket elv\'E1r\'F3 makr\'F3 }}\par
{
Definition at line {\b 96} of file {\b gtest_lite.h}.}\par
}
{\xe \v EXPECTTHROW\:gtest_lite.h}
{\xe \v gtest_lite.h\:EXPECTTHROW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EXPECTTHROW( statement,  exp,  act)}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Value:}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     gtest_lite::test.expect(gtest_lite::test.tmp, __FILE__, __LINE__, #statement) \\\par
    << {\cf22 "** Az utasitas "} << (act) \\\par
    << {\cf22 "\\n** Azt vartuk, hogy "} << (exp) << std::endl\par
}
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
EXPECTTHROW: kiv\'E9telkezel\'E9s. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
 Bels\'C5\'91 megval\'C3\'B3s\'C3\'ADt\'C3\'A1shoz tartoz\'C3\'B3 makr\'C3\'B3k, \'C3\'A9s oszt\'C3\'A1lyok. \par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{{\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Nem c\'C3\'A9lszer\'C5\'B1 k\'C3\'B6zvetlen\'C3\'BCl haszn\'C3\'A1lni, vagy m\'C3\'B3dos\'C3\'ADtani
\par}
{\tc\tcl3 \v Nem c\'C3\'A9lszer\'C5\'B1 k\'C3\'B6zvetlen\'C3\'BCl haszn\'C3\'A1lni, vagy m\'C3\'B3dos\'C3\'ADtani}
\par}
}{
Definition at line {\b 173} of file {\b gtest_lite.h}.}\par
}
{\xe \v FAIL\:gtest_lite.h}
{\xe \v gtest_lite.h\:FAIL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FAIL()\~ gtest_lite::test.expect(false, __FILE__, __LINE__, "FAIL()", true)}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sikertelen teszt makr\'F3ja. }}\par
{
Definition at line {\b 74} of file {\b gtest_lite.h}.}\par
}
{\xe \v GTEND\:gtest_lite.h}
{\xe \v gtest_lite.h\:GTEND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTEND( os)}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 189} of file {\b gtest_lite.h}.}\par
}
{\xe \v GTINIT\:gtest_lite.h}
{\xe \v gtest_lite.h\:GTINIT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define GTINIT( IS)}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line {\b 182} of file {\b gtest_lite.h}.}\par
}
{\xe \v SUCCEED\:gtest_lite.h}
{\xe \v gtest_lite.h\:SUCCEED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SUCCEED()\~ gtest_lite::test.expect(true, __FILE__, __LINE__, "SUCCEED()", true)}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sikeres teszt makr\'F3ja. }}\par
{
Definition at line {\b 71} of file {\b gtest_lite.h}.}\par
}
{\xe \v TEST\:gtest_lite.h}
{\xe \v gtest_lite.h\:TEST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEST( C,  N)\~ \{ gtest_lite::test.begin(#C"."#N);}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Teszt kezdete. A makr\'C3\'B3 param\'C3\'A9terez\'C3\'A9se hasonl\'C3\'ADt a gtest param\'C3\'A9terez\'C3\'A9s\'C3\'A9hez. \'C3\'8Dgy az itt elk\'C3\'A9sz\'C3\'ADtett testek k\'C3\'B6nnyen \'C3\'A1temelhet\'C5\'91k a gtest keretrendszerbe. {\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Parameters\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i C} \cell }{- teszteset neve (csak a gtest kompatibilit\'E1s miatt van k\'FCl\'F6n neve az eseteknek) \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i N} \cell }{- teszt neve \cell }
{\row }
}
}{
Definition at line {\b 53} of file {\b gtest_lite.h}.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v hasMember\:gtest_lite.h}
{\xe \v gtest_lite.h\:hasMember}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void hasMember (  {\i ...}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seg\'C3\'A9df\'C3\'BCggv\'C3\'A9ny egy publikus adattag, vagy tagf\'C3\'BCggv\'C3\'A9ny l\'C3\'A9tez\'C3\'A9s\'C3\'A9nek tesztel\'C3\'A9s\'C3\'A9re ford\'C3\'ADt\'C3\'A1si id\'C5\'91ben \par
}{
Definition at line {\b 157} of file {\b gtest_lite.h}.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
gtest_lite.h\par \pard\plain 
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
Go to the documentation of this file.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #ifndef GTEST_LITE_H}\par
00002 {\cf21 #define GTEST_LITE_H}\par
00003 \par
00033 {\cf21 #include <iostream>}\par
00034 {\cf21 #include <cassert>}\par
00035 {\cf21 #include <cmath>}\par
00036 {\cf21 #include <cstring>}\par
00037 {\cf21 #include <limits>}\par
00038 {\cf21 #include <string>}\par
00039 {\cf21 #include <fstream>}\par
00040 {\cf21 #ifdef MEMTRACE}\par
00041 {\cf21 #include "memtrace.h"}\par
00042 {\cf21 #endif}\par
00043 \par
00044 {\cf20 // K\'E9t makr\'F3 az egyes tesztek el\'E9 \'E9s m\'F6g\'E9:}\par
00045 {\cf20 // A k\'E9t makr\'F3 a kapcsos z\'E1r\'F3jelekkel egy \'FAj blokkot hoz l\'E9tre, amiben}\par
00046 {\cf20 // a nevek lok\'C3\'A1lisak, \'C3\'ADgy elker\'C3\'BClhet\'C5\'91 a n\'C3\'A9v\'C3\'BCtk\'C3\'B6z\'C3\'A9s.}\par
00047 \par
00053 {\cf21 #define TEST(C, N) \{ gtest_lite::test.begin(#C"."}#N);\par
00054 \par
00056 {\cf21 #define END gtest_lite::test.end(); \}}\par
00057 \par
00060 {\cf21 #define ENDM gtest_lite::test.end(true); \}}\par
00061 \par
00065 {\cf21 #define ENDMsg(t) gtest_lite::test.end(true) << t << std::endl; \}}\par
00066 \par
00067 {\cf20 // Eredm\'C3\'A9nyek vizsg\'C3\'A1lat\'C3\'A1t seg\'C3\'ADt\'C5\'91 makr\'C3\'B3k.}\par
00068 {\cf20 // A param\'E9terek \'E9s a funkci\'F3k a gtest keretrendszerrel megegyeznek.}\par
00069 \par
00071 {\cf21 #define SUCCEED() gtest_lite::test.expect(true, __FILE__, __LINE__, "SUCCEED()"}, true)\par
00072 \par
00074 {\cf21 #define FAIL() gtest_lite::test.expect(false, __FILE__, __LINE__, "FAIL()"}, true)\par
00075 \par
00077 \par
00078 {\cf21 #define EXPECT_EQ(expected, actual) gtest_lite::EXPECT_(expected, actual, gtest_lite::eq, __FILE__, __LINE__, "EXPECT_EQ("} #expected ", " #actual ")" )\par
00079 \par
00081 {\cf21 #define EXPECT_NE(expected, actual) gtest_lite::EXPECT_(expected, actual, gtest_lite::ne, __FILE__, __LINE__, "EXPECT_NE("} #expected ", " #actual ")", "etalon" )\par
00082 \par
00084 {\cf21 #define EXPECT_LE(expected, actual) gtest_lite::EXPECT_(expected, actual, gtest_lite::le, __FILE__, __LINE__, "EXPECT_LE("} #expected ", " #actual ")", "etalon" )\par
00085 \par
00087 {\cf21 #define EXPECT_LT(expected, actual) gtest_lite::EXPECT_(expected, actual, gtest_lite::lt, __FILE__, __LINE__, "EXPECT_LT("} #expected ", " #actual ")", "etalon" )\par
00088 \par
00090 {\cf21 #define EXPECT_GE(expected, actual) gtest_lite::EXPECT_(expected, actual, gtest_lite::ge, __FILE__, __LINE__, "EXPECT_GE("} #expected ", " #actual ")", "etalon" )\par
00091 \par
00093 {\cf21 #define EXPECT_GT(expected, actual) gtest_lite::EXPECT_(expected, actual, gtest_lite::gt, __FILE__, __LINE__, "EXPECT_GT("} #expected ", " #actual ")", "etalon" )\par
00094 \par
00096 {\cf21 #define EXPECT_TRUE(actual)  gtest_lite::EXPECT_(true, actual,  gtest_lite::eq, __FILE__, __LINE__, "EXPECT_TRUE("} #actual ")" )\par
00097 \par
00099 {\cf21 #define EXPECT_FALSE(actual) gtest_lite::EXPECT_(false, actual, gtest_lite::eq, __FILE__, __LINE__, "EXPECT_FALSE("} #actual ")" )\par
00100 \par
00102 {\cf21 #define EXPECT_FLOAT_EQ(expected, actual)  gtest_lite::EXPECT_(expected, actual, gtest_lite::almostEQ, __FILE__, __LINE__, "EXPECT_FLOAT_EQ("} #expected ", " #actual ")" )\par
00103 \par
00105 {\cf21 #define EXPECT_DOUBLE_EQ(expected, actual) gtest_lite::EXPECT_(expected, actual, gtest_lite::almostEQ, __FILE__, __LINE__, "EXPECT_DOUBLE_EQ("} #expected ", " #actual ")" )\par
00106 \par
00108 {\cf21 #define EXPECT_STREQ(expected, actual) gtest_lite::EXPECTSTR(expected, actual, gtest_lite::eqstr, __FILE__, __LINE__, "EXPECT_STREQ("} #expected ", " #actual ")" )\par
00109 \par
00111 {\cf21 #define EXPECT_STRNE(expected, actual) gtest_lite::EXPECTSTR(expected, actual, gtest_lite::nestr, __FILE__, __LINE__, "EXPECT_STRNE("} #expected ", " #actual ")", "etalon" )\par
00112 \par
00114 {\cf21 #define EXPECT_THROW(statement, exception_type) try \{ gtest_lite::test.tmp = false; statement; \} \\}\par
00115 {\cf21     catch (exception_type) \{ gtest_lite::test.tmp = true; \} \\}\par
00116 {\cf21     catch (...) \{ \} \\}\par
00117 {\cf21     EXPECTTHROW(statement, "kivetelt dob."}, "nem dobott '"#exception_type"' kivetelt.")\par
00118 \par
00120 {\cf21 #define EXPECT_ANY_THROW(statement) try \{ gtest_lite::test.tmp = false; statement; \} \\}\par
00121 {\cf21     catch (...) \{ gtest_lite::test.tmp = true; \} \\}\par
00122 {\cf21     EXPECTTHROW(statement, "kivetelt dob."}, "nem dobott kivetelt.")\par
00123 \par
00125 {\cf21 #define EXPECT_NO_THROW(statement) try \{ gtest_lite::test.tmp = true; statement; \} \\}\par
00126 {\cf21     catch (...) \{ gtest_lite::test.tmp = false; \}\\}\par
00127 {\cf21     EXPECTTHROW(statement, "nem dob kivetelt."}, "kivetelt dobott.")\par
00128 \par
00130 {\cf21 #define ASSERT_NO_THROW(statement) try \{ gtest_lite::test.tmp = true; statement; \} \\}\par
00131 {\cf21     catch (...) \{ gtest_lite::test.tmp = false; \}\\}\par
00132 {\cf21     EXPECTTHROW(statement, "nem dob kivetelt."}, "kivetelt dobott.")\par
00133 \par
00135 {\cf21 #define EXPECT_THROW_THROW(statement, exception_type) try \{ gtest_lite::test.tmp = false; statement; \} \\}\par
00136 {\cf21     catch (exception_type) \{ gtest_lite::test.tmp = true; throw; \} \\}\par
00137 {\cf21     EXPECTTHROW(statement, "kivetelt dob."}, "nem dobott '"#exception_type"' kivetelt.")\par
00138 \par
00145 {\cf21 #define CREATE_Has_(X) \\}\par
00146 {\cf21 template<typename T> struct _Has_##X \{  \\}\par
00147 {\cf21     struct Fallback \{ int X; \};         \\}\par
00148 {\cf21     struct Derived : T, Fallback \{\};    \\}\par
00149 {\cf21     template<typename C, C> struct ChT; \\}\par
00150 {\cf21     template<typename D> static char (&f(ChT<int Fallback::*, &D::X>*))[1]; \\}\par
00151 {\cf21     template<typename D> static char (&f(...))[2]; \\}\par
00152 {\cf21     static bool const member = sizeof(f<Derived>(0)) == 2; \\}\par
00153 {\cf21 \};}\par
00154 \par
00157 {\cf17 inline} {\cf18 void} hasMember(...) \{\}\par
00158 \par
00160 {\cf17 template} <{\cf17 typename} F, {\cf17 typename} T>\par
00161 {\cf17 struct }_Is_Types \{\par
00162     {\cf17 template}<{\cf17 typename} D> {\cf17 static} char (&f(D))[1];\par
00163     {\cf17 template}<{\cf17 typename} D> {\cf17 static} char (&f(...))[2];\par
00164     {\cf17 static} {\cf18 bool} {\cf17 const} convertable = {\cf17 sizeof}(f<T>(F())) == 1;\par
00165 \};\par
00166 \par
00171 \par
00173 {\cf21 #define EXPECTTHROW(statement, exp, act) gtest_lite::test.expect(gtest_lite::test.tmp, __FILE__, __LINE__, #statement) \\}\par
00174 {\cf21     << "** Az utasitas "} << (act) \\\par
00175     << "\\n** Azt vartuk, hogy " << (exp) << std::endl\par
00176 \par
00177 {\cf21 #ifdef CPORTA}\par
00178 {\cf21 #define GTINIT(is)  \\}\par
00179 {\cf21     int magic;      \\}\par
00180 {\cf21     is >> magic;}\par
00181 {\cf21 #else}\par
00182 {\cf21 #define GTINIT(IS)}\par
00183 {\cf21 #endif }{\cf20 // CPORTA}\par
00184 \par
00185 {\cf21 #ifdef CPORTA}\par
00186 {\cf21 #define GTEND(os)  \\}\par
00187 {\cf21     os << magic << (gtest_lite::test.fail() ? " NO"} : " OK?") << std::endl;\par
00188 {\cf21 #else}\par
00189 {\cf21 #define GTEND(os)}\par
00190 {\cf21 #endif }{\cf20 // CPORTA}\par
00191 \par
00193 {\cf17 namespace }gtest_lite \{\par
00194 \par
00198 {\cf17 struct }Test \{\par
00199     {\cf18 int} sum;            \par
00200     {\cf18 int} failed;         \par
00201     {\cf18 int} ablocks;        \par
00202     {\cf18 bool} status;        \par
00203     {\cf18 bool} tmp;           \par
00204     std::string name;   \par
00205     std::fstream null;  \par
00206     {\cf17 static} Test& getTest() \{\par
00207         {\cf17 static} Test instance;\par
00208         {\cf19 return} instance;\par
00209     \}\par
00210 {\cf17 private}:    \par
00211     Test() :sum(0), failed(0), status(false), null({\cf22 "/dev/null"}) \{\}\par
00212     Test({\cf17 const} Test&);\par
00213     {\cf18 void} operator=({\cf17 const} Test&);\par
00214 {\cf17 public}:\par
00216     {\cf18 void} begin({\cf17 const} {\cf18 char} *n) \{\par
00217         name = n; status = {\cf17 true};\par
00218 {\cf21 #ifdef MEMTRACE}\par
00219         ablocks = memtrace::allocated_blocks();\par
00220 {\cf21 #endif}\par
00221 {\cf21 #ifndef CPORTA}\par
00222         std::cerr << {\cf22 "\\n---> "} << name << std::endl;\par
00223 {\cf21 #endif }{\cf20 // CPORTA}\par
00224         ++sum;\par
00225     \}\par
00227     std::ostream& end({\cf18 bool} memchk = {\cf17 false}) \{\par
00228 {\cf21 #ifdef MEMTRACE}\par
00229         {\cf19 if} (memchk && ablocks != memtrace::allocated_blocks()) \{\par
00230             status = {\cf17 false};\par
00231             {\cf19 return} std::cerr << {\cf22 "** Lehet, hogy nem szabaditott fel minden memoriat! **"} << std::endl;\par
00232         \}\par
00233 {\cf21 #endif}\par
00234 {\cf21 #ifdef CPORTA}\par
00235         {\cf19 if} (!status)\par
00236 {\cf21 #endif }{\cf20 // CPORTA}\par
00237             std::cerr << (status ? {\cf22 "     SIKERES"} : {\cf22 "** HIBAS ****"}) << {\cf22 "\\t"} << name << {\cf22 " <---"} << std::endl;\par
00238         {\cf19 if} (!status)\par
00239             {\cf19 return} std::cerr;\par
00240         {\cf19 else}\par
00241             {\cf19 return} null;\par
00242     \}\par
00243 \par
00244     {\cf18 bool} fail() \{ {\cf19 return} failed; \}\par
00245 \par
00247     std::ostream& expect({\cf18 bool} st, {\cf17 const} {\cf18 char} *file, {\cf18 int} line, {\cf17 const} {\cf18 char} *expr, {\cf18 bool} pr = {\cf17 false}) \{\par
00248         {\cf19 if} (!st) \{\par
00249             ++failed;\par
00250             status = {\cf17 false};\par
00251         \}\par
00252         {\cf19 if} (!st || pr) \{\par
00253             std::string str(file);\par
00254             {\cf18 size_t} i = str.rfind({\cf22 "\\\\"});\par
00255             {\cf19 if} (i == std::string::npos) i = str.rfind({\cf22 "/"});\par
00256             {\cf19 if} (i == std::string::npos) i = 0; {\cf19 else} i++;\par
00257             {\cf19 return} std::cerr << {\cf22 "\\n**** "} << &file[i] << {\cf22 "("} << line << {\cf22 "): "} << expr << {\cf22 " ****"} << std::endl;\par
00258         \}\par
00259         {\cf19 return} null;\par
00260     \}\par
00261 \par
00263     ~Test() \{\par
00264 {\cf21 #ifdef CPORTA}\par
00265         {\cf19 if} (failed)\par
00266 {\cf21 #endif }{\cf20 // CPORTA}\par
00267             std::cerr << {\cf22 "\\n==== TESZT VEGE ==== HIBAS/OSSZES: "} << failed << {\cf22 "/"} << sum << std::endl;\par
00268     \}\par
00269 \};\par
00270 \par
00273 {\cf17 static} Test& test = Test::getTest();\par
00274 \par
00276 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00277 std::ostream& EXPECT_(T1 exp, T2 act, {\cf18 bool} (*pred)(T1, T2), {\cf17 const} {\cf18 char} *file, {\cf18 int} line,\par
00278                       {\cf17 const} {\cf18 char} *expr, {\cf17 const} {\cf18 char} *lhs = {\cf22 "elvart"}, {\cf17 const} {\cf18 char} *rhs = {\cf22 "aktual"}) \{\par
00279     {\cf19 return} test.expect(pred(exp, act), file, line, expr)\par
00280         << {\cf22 "** "} << lhs << {\cf22 ": "} << std::boolalpha << exp\par
00281         << {\cf22 "\\n** "} << rhs << {\cf22 ": "} << std::boolalpha << act << std::endl;\par
00282 \}\par
00283 \par
00285 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00286 std::ostream& EXPECT_(T1* exp, T2* act, {\cf18 bool} (*pred)(T1*, T2*), {\cf17 const} {\cf18 char} *file, {\cf18 int} line,\par
00287                       {\cf17 const} {\cf18 char} *expr, {\cf17 const} {\cf18 char} *lhs = {\cf22 "elvart"}, {\cf17 const} {\cf18 char} *rhs = {\cf22 "aktual"}) \{\par
00288     {\cf19 return} test.expect(pred(exp, act), file, line, expr)\par
00289         << {\cf22 "** "} << lhs << {\cf22 ": "} << ({\cf18 void}*) exp\par
00290         << {\cf22 "\\n** "} << rhs << {\cf22 ": "} << ({\cf18 void}*) act << std::endl;\par
00291 \}\par
00292 \par
00293 {\cf21 #if __cplusplus >= 201103L}\par
00295 {\cf17 template} <{\cf17 typename} T1>\par
00296 std::ostream& EXPECT_(T1* exp, std::nullptr_t act, {\cf18 bool} (*pred)(T1*, std::nullptr_t), {\cf17 const} {\cf18 char} *file, {\cf18 int} line,\par
00297                       {\cf17 const} {\cf18 char} *expr, {\cf17 const} {\cf18 char} *lhs = {\cf22 "elvart"}, {\cf17 const} {\cf18 char} *rhs = {\cf22 "aktual"}) \{\par
00298     {\cf19 return} test.expect(pred(exp, act), file, line, expr)\par
00299         << {\cf22 "** "} << lhs << {\cf22 ": "} << ({\cf18 void}*) exp\par
00300         << {\cf22 "\\n** "} << rhs << {\cf22 ": "} << ({\cf18 void}*) act << std::endl;\par
00301 \}\par
00302 {\cf21 #endif}\par
00303 \par
00306 {\cf17 inline}\par
00307 std::ostream& EXPECTSTR({\cf17 const} {\cf18 char} *exp, {\cf17 const} {\cf18 char} *act, {\cf18 bool} (*pred)({\cf17 const} {\cf18 char}*, {\cf17 const} {\cf18 char}*), {\cf17 const} {\cf18 char} *file, {\cf18 int} line,\par
00308                       {\cf17 const} {\cf18 char} *expr, {\cf17 const} {\cf18 char} *lhs = {\cf22 "elvart"}, {\cf17 const} {\cf18 char} *rhs = {\cf22 "aktual"}) \{\par
00309     {\cf19 return} test.expect(pred(exp, act), file, line, expr)\par
00310         << {\cf22 "** "} << lhs << {\cf22 ": "} << (exp == NULL ? {\cf22 "NULL pointer"} : std::string({\cf22 "\\""}) + exp + std::string({\cf22 "\\""}))\par
00311         << {\cf22 "\\n** "} << rhs << {\cf22 ": "} << (act == NULL ? {\cf22 "NULL pointer"} : std::string({\cf22 "\\""}) + act + std::string({\cf22 "\\""})) << std::endl;\par
00312 \}\par
00313 \par
00316 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00317 {\cf18 bool} eq(T1 a, T2 b) \{ {\cf19 return} a == b; \}\par
00318 \par
00319 {\cf17 inline}\par
00320 {\cf18 bool} eqstr({\cf17 const} {\cf18 char} *a, {\cf17 const} {\cf18 char} *b) \{\par
00321     {\cf19 if} (a != NULL && b != NULL)\par
00322         {\cf19 return} strcmp(a, b) == 0;\par
00323     {\cf19 return} {\cf17 false};\par
00324 \}\par
00325 \par
00326 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00327 {\cf18 bool} ne(T1 a, T2 b) \{ {\cf19 return} a != b; \}\par
00328 \par
00329 {\cf17 inline}\par
00330 {\cf18 bool} nestr({\cf17 const} {\cf18 char} *a, {\cf17 const} {\cf18 char} *b) \{\par
00331     {\cf19 if} (a != NULL && b != NULL)\par
00332         {\cf19 return} strcmp(a, b) != 0;\par
00333     {\cf19 return} {\cf17 false};\par
00334 \}\par
00335 \par
00336 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00337 {\cf18 bool} le(T1 a, T2 b) \{ {\cf19 return} a <= b; \}\par
00338 \par
00339 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00340 {\cf18 bool} lt(T1 a, T2 b) \{ {\cf19 return} a < b; \}\par
00341 \par
00342 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00343 {\cf18 bool} ge(T1 a, T2 b) \{ {\cf19 return} a >= b; \}\par
00344 \par
00345 {\cf17 template} <{\cf17 typename} T1, {\cf17 typename} T2>\par
00346 {\cf18 bool} gt(T1 a, T2 b) \{ {\cf19 return} a > b; \}\par
00347 \par
00352 {\cf17 template} <{\cf17 typename} T>\par
00353 {\cf18 bool} almostEQ(T a, T  b) \{\par
00354     {\cf20 // eps: ha a relat\'C3\'ADv, vagy abszol\'C3\'BAt hiba ett\'C5\'91l kisebb, akkor elfogadjuk}\par
00355     T eps = 10 * std::numeric_limits<T>::epsilon(); {\cf20 // 10-szer a legkisebb \'E9rt\'E9k}\par
00356     {\cf19 if} (a == b) {\cf19 return} {\cf17 true};\par
00357     {\cf19 if} (fabs(a - b) < eps)\par
00358        {\cf19 return} {\cf17 true};\par
00359     {\cf18 double} aa = fabs(a);\par
00360     {\cf18 double} ba = fabs(b);\par
00361     {\cf19 if} (aa < ba) \{\par
00362         aa = ba;\par
00363         ba = fabs(a);\par
00364     \}\par
00365     {\cf19 return} (aa - ba) < aa * eps;\par
00366 \}\par
00367 \par
00368 \} {\cf20 // namespace gtest_lite}\par
00369 \par
00370 {\cf21 #endif }{\cf20 // GTEST_LITE_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
memtrace.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*********************************}\par
00002 {\cf20 Memoriaszivargas-detektor}\par
00003 {\cf20 Keszitette: Peregi Tamas, BME IIT, 2011}\par
00004 {\cf20             petamas@iit.bme.hu}\par
00005 {\cf20 Kanari:     Szeberenyi Imre, 2013.}\par
00006 {\cf20 VS 2012:    Szeber\'E9nyi Imre, 2015.,}\par
00007 {\cf20 mem_dump:   2016.}\par
00008 {\cf20 meset felszabaditaskor: 2018.}\par
00009 {\cf20 typo:       2019.}\par
00010 {\cf20 *********************************/}\par
00011 \par
00012 {\cf20 /*definialni kell, ha nem paracssorbol allitjuk be (-DMEMTRACE) */}\par
00013 {\cf20 /*#define MEMTRACE */}\par
00014 {\cf21 #ifdef _MSC_VER}\par
00015 {\cf21     #define _CRT_SECURE_NO_WARNINGS 1}\par
00016 {\cf21 #endif}\par
00017 \par
00018 {\cf21 #include <stdio.h>}\par
00019 {\cf21 #include <stdlib.h>}\par
00020 {\cf21 #include <string.h>}\par
00021 {\cf21 #include <time.h>}\par
00022 {\cf21 #include <ctype.h>}\par
00023 \par
00024 {\cf21 #ifdef MEMTRACE}\par
00025 {\cf21 #define FROM_MEMTRACE_CPP}\par
00026 {\cf21 #include "memtrace.h"}\par
00027 \par
00028 {\cf21 #define FMALLOC 0}\par
00029 {\cf21 #define FCALLOC 1}\par
00030 {\cf21 #define FREALLOC 2}\par
00031 {\cf21 #define FFREE 3}\par
00032 {\cf21 #define FNEW 4}\par
00033 {\cf21 #define FDELETE 5}\par
00034 {\cf21 #define FNEWARR 6}\par
00035 {\cf21 #define FDELETEARR 7}\par
00036 {\cf21 #define COMP(a,d) (((a)<=3 && (d)<=3) || ((d)==(a)+1))}\par
00037 {\cf21 #define PU(p)   ((char*)p+CANARY_LEN)   }{\cf20 // mem pointerbol user poi}\par
00038 {\cf21 #define P(pu)   ((char*)pu-CANARY_LEN)  }{\cf20 // user pointerbol mem poi}\par
00039 {\cf21 #define XSTR(s) STR(s)}\par
00040 {\cf21 #define STR(s)  #s}\par
00041 {\cf20 /*******************************************************************/}\par
00042 {\cf20 /* Segedfuggvenyek es egyebek */}\par
00043 {\cf20 /*******************************************************************/}\par
00044 START_NAMESPACE\par
00045     {\cf17 static} FILE *fperror;\par
00046 {\cf21     #ifdef MEMTRACE_TO_MEMORY}\par
00047         {\cf17 static} {\cf17 const} {\cf18 unsigned} {\cf18 int} CANARY_LEN = 64;\par
00048 {\cf21     #else}\par
00049         {\cf17 static} {\cf17 const} {\cf18 unsigned} {\cf18 int} CANARY_LEN = 0;\par
00050 {\cf21     #endif}\par
00051     {\cf17 static} {\cf17 const} {\cf18 unsigned} {\cf18 char} canary_byte1 = {\cf23 'k'};\par
00052     {\cf17 static} {\cf17 const} {\cf18 unsigned} {\cf18 char} canary_byte2 = {\cf23 'K'};\par
00053     {\cf17 static} {\cf18 unsigned} {\cf18 char} random_byte;\par
00054 \par
00055     {\cf17 typedef} {\cf17 enum} \{FALSE,TRUE\} BOOL;\par
00056 \par
00057     {\cf17 static} {\cf17 const} {\cf18 char} * pretty[] = \{{\cf22 "malloc("}, {\cf22 "calloc("}, {\cf22 "realloc("}, {\cf22 "free("},\par
00058                                         {\cf22 "new"}, {\cf22 "delete"}, {\cf22 "new[]"}, {\cf22 "delete[]"}\};\par
00059 \par
00060     {\cf17 static} {\cf17 const} {\cf18 char} * basename({\cf17 const} {\cf18 char} * s) \{\par
00061         {\cf17 const} {\cf18 char} *s1,*s2;\par
00062         s1 = strrchr(s,{\cf23 '/'});\par
00063         {\cf19 if}(s1==NULL) s1 = s; {\cf19 else} s1++;\par
00064         s2 = strrchr(s1, {\cf23 '\\\\'});\par
00065         {\cf19 if}(s2==NULL) s2 = s1; {\cf19 else} s2++;\par
00066         {\cf19 return} s2;\par
00067     \}\par
00068 \par
00069     {\cf17 static} {\cf18 char} *StrCpy({\cf18 char} ** to, {\cf17 const} {\cf18 char} * from) \{\par
00070             {\cf19 if}(from == NULL) \{\par
00071             *to = NULL;\par
00072             \} {\cf19 else} \{\par
00073                     *to = ({\cf18 char}*)malloc(strlen(from)+1);\par
00074                     {\cf19 if}(*to) strcpy(*to, from);\par
00075             \}\par
00076             {\cf19 return} *to;\par
00077     \}\par
00078 \par
00079     {\cf17 static} {\cf18 void} *canary_malloc({\cf18 size_t} size, {\cf18 unsigned} {\cf18 char} data) \{\par
00080         {\cf18 char} *p = ({\cf18 char} *)malloc(size+2*CANARY_LEN);\par
00081         {\cf19 if} (p) \{\par
00082             memset(p, canary_byte1, CANARY_LEN);\par
00083             memset(p+CANARY_LEN, data, size);\par
00084             memset(p+CANARY_LEN+size, canary_byte2, CANARY_LEN);\par
00085         \}\par
00086         {\cf19 return} p;\par
00087     \}\par
00088 \par
00089     {\cf17 static} {\cf18 int} chk_canary({\cf18 void} *p, {\cf18 size_t} size) \{\par
00090         {\cf18 unsigned} {\cf18 char} *pc = ({\cf18 unsigned} {\cf18 char}*)p;\par
00091         {\cf18 unsigned} {\cf18 int} i;\par
00092         {\cf19 for} (i = 0; i < CANARY_LEN; i++)\par
00093             {\cf19 if} (pc[i] != canary_byte1)\par
00094                 {\cf19 return} -1;\par
00095         pc += CANARY_LEN+size;\par
00096         {\cf19 for} (i = 0; i < CANARY_LEN; i++)\par
00097             {\cf19 if} (pc[i] != canary_byte2)\par
00098                 {\cf19 return} 1;\par
00099         {\cf19 return} 0;\par
00100     \}\par
00101 \par
00102     {\cf17 typedef} {\cf17 struct }\{\par
00103         {\cf18 int} f;  {\cf20 /* allocator func */}\par
00104         {\cf18 int} line;\par
00105         {\cf18 char} * par_txt;\par
00106         {\cf18 char} * file;\par
00107     \} call_t;\par
00108 \par
00109     {\cf17 static} call_t pack({\cf18 int} f, {\cf17 const} {\cf18 char} * par_txt, {\cf18 int} line, {\cf17 const} {\cf18 char} * file) \{\par
00110         call_t ret;\par
00111         ret.f = f;\par
00112         ret.line = line;\par
00113         StrCpy(&ret.par_txt, par_txt);\par
00114         StrCpy(&ret.file, file);\par
00115         {\cf19 return} ret;\par
00116     \}\par
00117 \par
00118     {\cf17 static} {\cf18 void} print_call({\cf17 const} {\cf18 char} * msg, call_t call) \{\par
00119         {\cf19 if}(msg) fprintf(fperror, {\cf22 "%s"}, msg);\par
00120         fprintf(fperror, {\cf22 "%s"}, pretty[call.f]);\par
00121         fprintf(fperror, {\cf22 "%s"}, call.par_txt ? call.par_txt : {\cf22 "?"});\par
00122         {\cf19 if} (call.f <= 3) fprintf(fperror, {\cf22 ")"});\par
00123         fprintf(fperror,{\cf22 " @ %s:"}, call.file ? basename(call.file) : {\cf22 "?"});\par
00124         fprintf(fperror,{\cf22 "%d\\n"},call.line ? call.line : 0);\par
00125     \}\par
00126 \par
00127     {\cf20 /* memoriateruletet dump */}\par
00128     {\cf17 static} {\cf18 void} dump_memory({\cf18 void} {\cf17 const} *mem, {\cf18 size_t} size, {\cf18 size_t} can_len, FILE* fp) \{\par
00129         {\cf18 unsigned} {\cf18 char} {\cf17 const} *m=({\cf18 unsigned} {\cf18 char} {\cf17 const} *) mem;\par
00130         {\cf18 unsigned} {\cf18 int} s, o;\par
00131 \par
00132         {\cf19 if} (can_len > 0)\par
00133             fprintf(fp, {\cf22 "Dump (addr: %p kanari hossz: %d):\\n"}, m+can_len, ({\cf18 int})can_len);\par
00134         {\cf19 else}\par
00135             fprintf(fp, {\cf22 "Dump: (addr: %p) \\n"}, m);\par
00136         size += 2*can_len;\par
00137         {\cf19 for} (s = 0; s < (size+15)/16; s++) \{\par
00138             fprintf(fp, {\cf22 "%04x:%c "}, s*16, s*16 < can_len || s*16 >= size-can_len ? {\cf23 ' '} : {\cf23 '*'});\par
00139             {\cf19 for} (o = 0; o < 16; o++) \{\par
00140                 {\cf19 if} (o == 8) fprintf(fp, {\cf22 " "});\par
00141                 {\cf19 if} (s*16+o < size)\par
00142                     fprintf(fp, {\cf22 "%02x "}, m[s*16+o]);\par
00143                 {\cf19 else}\par
00144                     fprintf(fp, {\cf22 "   "});\par
00145             \}\par
00146             fprintf(fp, {\cf22 " "});\par
00147             {\cf19 for} (o = 0; o < 16; o++) \{\par
00148                 {\cf19 if} (s*16+o < size)\par
00149                     fprintf(fp, {\cf22 "%c"}, isprint(m[s*16+o]) ? m[s*16+o] : {\cf23 '.'});\par
00150                 {\cf19 else}\par
00151                     fprintf(fp, {\cf22 " "});\par
00152             \}\par
00153             fprintf(fp, {\cf22 "\\n"});\par
00154         \}\par
00155     \}\par
00156 \par
00157     {\cf18 void} mem_dump({\cf18 void} {\cf17 const} *mem, {\cf18 size_t} size, FILE* fp) \{\par
00158         dump_memory(mem, size, 0, fp);\par
00159     \}\par
00160 \par
00161     {\cf17 static} BOOL dying;\par
00162 \par
00163     {\cf17 static} {\cf18 void} die({\cf17 const} {\cf18 char} * msg, {\cf18 void} * p, {\cf18 size_t} size, call_t * a, call_t * d) \{\par
00164 {\cf21         #ifdef MEMTRACE_ERRFILE}\par
00165             fperror = fopen(XSTR(MEMTRACE_ERRFILE), {\cf22 "w"});\par
00166 {\cf21         #endif}\par
00167         fprintf(fperror,{\cf22 "%s\\n"},msg);\par
00168         {\cf19 if} (p) \{\par
00169             fprintf(fperror, {\cf22 "\\tPointer:\\t%p"}, PU(p));\par
00170             {\cf19 if} (size) fprintf(fperror,{\cf22 " (%d byte)"}, ({\cf18 int})size);\par
00171             fprintf(fperror,{\cf22 "\\n"});\par
00172         \}\par
00173         {\cf19 if} (a) print_call({\cf22 "\\tFoglalas:\\t"}, *a);\par
00174         {\cf19 if} (d) print_call({\cf22 "\\tFelszabaditas:\\t"}, *d);\par
00175                 {\cf19 if} (p) dump_memory(p, size, CANARY_LEN, fperror);\par
00176 \par
00177         dying = TRUE;\par
00178         exit(120);\par
00179     \}\par
00180 \par
00181     {\cf17 static} {\cf18 void} initialize();\par
00182 END_NAMESPACE\par
00183 \par
00184 {\cf20 /*******************************************************************/}\par
00185 {\cf20 /* MEMTRACE_TO_MEMORY */}\par
00186 {\cf20 /*******************************************************************/}\par
00187 \par
00188 {\cf21 #ifdef MEMTRACE_TO_MEMORY}\par
00189 START_NAMESPACE\par
00190     {\cf17 typedef} {\cf17 struct }_registry_item \{\par
00191         {\cf18 void} * p;    {\cf20 /* mem pointer*/}\par
00192         {\cf18 size_t} size; {\cf20 /* size*/}\par
00193         call_t call;\par
00194         {\cf17 struct }_registry_item * next;\par
00195     \} registry_item;\par
00196 \par
00197     {\cf17 static} registry_item registry; {\cf20 /*sentinel*/}\par
00198 \par
00199     {\cf17 static} {\cf18 void} print_registry_item(registry_item * p) \{\par
00200         {\cf19 if} (p) \{\par
00201             print_registry_item(p->next);\par
00202             fprintf(fperror, {\cf22 "\\t%p%5d byte "},p->p, ({\cf18 int})p->size);\par
00203             print_call(NULL, p->call);\par
00204             {\cf19 if}(p->call.par_txt) free(p->call.par_txt);\par
00205             {\cf19 if}(p->call.file) free(p->call.file);\par
00206             free(p);\par
00207         \}\par
00208     \}\par
00209 \par
00210     {\cf20 /* ha nincs hiba, akkor 0-val t\'E9r vissza */}\par
00211     {\cf18 int} mem_check({\cf18 void}) \{\par
00212         initialize();\par
00213         {\cf19 if}(dying) {\cf19 return}  2;    {\cf20 /* c\'EDmz\'E9si hiba */}\par
00214 \par
00215         {\cf19 if}(registry.next) \{\par
00216             {\cf20 /*szivarog*/}\par
00217 {\cf21             #ifdef MEMTRACE_ERRFILE}\par
00218                 fperror = fopen(XSTR(MEMTRACE_ERRFILE), {\cf22 "w"});\par
00219 {\cf21             #endif}\par
00220             fprintf(fperror, {\cf22 "Szivargas:\\n"});\par
00221             print_registry_item(registry.next);\par
00222             registry.next = NULL;\par
00223             {\cf19 return} 1;           {\cf20 /* mem\'F3ria fogy\'E1s */}\par
00224         \}\par
00225         {\cf19 return} 0;\par
00226     \}\par
00227 END_NAMESPACE\par
00228 {\cf21 #endif}{\cf20 /*MEMTRACE_TO_MEMORY*/}{\cf21 }\par
00229 \par
00230 {\cf20 /*******************************************************************/}\par
00231 {\cf20 /* MEMTRACE_TO_FILE */}\par
00232 {\cf20 /*******************************************************************/}\par
00233 \par
00234 {\cf21 #ifdef MEMTRACE_TO_FILE}\par
00235 START_NAMESPACE\par
00236     {\cf17 static} FILE * trace_file;\par
00237 END_NAMESPACE\par
00238 {\cf21 #endif}\par
00239 \par
00240 {\cf20 /*******************************************************************/}\par
00241 {\cf20 /* register/unregister */}\par
00242 {\cf20 /*******************************************************************/}\par
00243 \par
00244 START_NAMESPACE\par
00245     {\cf17 static} {\cf18 int} allocated_blks;\par
00246 \par
00247     {\cf18 int} allocated_blocks() \{ {\cf19 return} allocated_blks; \}\par
00248 \par
00249     {\cf17 static} BOOL register_memory({\cf18 void} * p, {\cf18 size_t} size, call_t call) \{\par
00250         initialize();\par
00251         allocated_blks++;\par
00252 {\cf21         #ifdef MEMTRACE_TO_FILE}\par
00253             fprintf(trace_file, {\cf22 "%p\\t%d\\t%s%s"}, PU(p), ({\cf18 int})size, pretty[call.f], call.par_txt ? call.par_txt : {\cf22 "?"});\par
00254             {\cf19 if} (call.f <= 3) fprintf(trace_file, {\cf22 ")"});\par
00255             fprintf(trace_file, {\cf22 "\\t%d\\t%s\\n"}, call.line, call.file ? call.file : {\cf22 "?"});\par
00256             fflush(trace_file);\par
00257 {\cf21         #endif}\par
00258 {\cf21         #ifdef MEMTRACE_TO_MEMORY}\par
00259         \{{\cf20 /*C-blokk*/}\par
00260             registry_item * n = (registry_item*)malloc({\cf17 sizeof}(registry_item));\par
00261             {\cf19 if}(n==NULL) {\cf19 return} FALSE;\par
00262             n->p = p;\par
00263             n->size = size;\par
00264             n->call = call;\par
00265             n->next = registry.next;\par
00266             registry.next = n;\par
00267         \}{\cf20 /*C-blokk*/}\par
00268 {\cf21         #endif}\par
00269 \par
00270         {\cf19 return} TRUE;\par
00271     \}\par
00272 \par
00273 {\cf21     #ifdef MEMTRACE_TO_MEMORY}\par
00274     {\cf17 static} registry_item *find_registry_item({\cf18 void} * p) \{\par
00275                 registry_item *n = &registry;\par
00276                 {\cf19 for}(; n->next && n->next->p != p ; n=n->next);\par
00277                 {\cf19 return} n;\par
00278         \}\par
00279 {\cf21         #endif}\par
00280 \par
00281     {\cf17 static} {\cf18 void} unregister_memory({\cf18 void} * p, call_t call) \{\par
00282         initialize();\par
00283 {\cf21         #ifdef MEMTRACE_TO_FILE}\par
00284                         fprintf(trace_file, {\cf22 "%p\\t%d\\t%s%s"}, PU(p), -1, pretty[call.f], call.par_txt ? call.par_txt : {\cf22 "?"});\par
00285                         {\cf19 if} (call.f <= 3) fprintf(trace_file, {\cf22 ")"});\par
00286             fprintf(trace_file,{\cf22 "\\t%d\\t%s\\n"},call.line, call.file ? call.file : {\cf22 "?"});\par
00287             fflush(trace_file);\par
00288 {\cf21         #endif}\par
00289 {\cf21         #ifdef MEMTRACE_TO_MEMORY}\par
00290         \{ {\cf20 /*C-blokk*/}\par
00291             registry_item * n = find_registry_item(p);\par
00292             {\cf19 if}(n->next) \{\par
00293                 allocated_blks--;\par
00294                 registry_item * r = n->next;\par
00295                 n->next = r->next;\par
00296                 {\cf19 if}(COMP(r->call.f,call.f)) \{\par
00297                     {\cf18 int} chk = chk_canary(r->p, r->size);\par
00298                     {\cf19 if} (chk < 0)\par
00299                         die({\cf22 "Blokk elott serult a memoria:"}, r->p,r->size,&r->call,&call);\par
00300                     {\cf19 if} (chk > 0)\par
00301                         die({\cf22 "Blokk utan serult a memoria"}, r->p,r->size,&r->call,&call);\par
00302                     {\cf20 /*rendben van minden*/}\par
00303                     {\cf19 if}(call.par_txt) free(call.par_txt);\par
00304                     {\cf19 if}(r->call.par_txt) free(r->call.par_txt);\par
00305                     {\cf19 if}(call.file) free(call.file);\par
00306                     {\cf19 if}(r->call.file) free(r->call.file);\par
00307                     memset(PU(r->p), {\cf23 'f'}, r->size);\par
00308                     PU(r->p)[r->size-1] = 0;\par
00309                     free(r);\par
00310                 \} {\cf19 else} \{\par
00311                     {\cf20 /*hibas felszabaditas*/}\par
00312                     die({\cf22 "Hibas felszabaditas:"},r->p,r->size,&r->call,&call);\par
00313                 \}\par
00314             \} {\cf19 else} \{\par
00315                 die({\cf22 "Nem letezo, vagy mar felszabaditott adat felszabaditasa:"}, p, 0,NULL,&call);\par
00316             \}\par
00317         \} {\cf20 /*C-blokk*/}\par
00318 {\cf21         #endif}\par
00319     \}\par
00320 END_NAMESPACE\par
00321 \par
00322 {\cf20 /*******************************************************************/}\par
00323 {\cf20 /* C-st\'EDlus\'FA mem\'F3riakezel\'E9s */}\par
00324 {\cf20 /*******************************************************************/}\par
00325 \par
00326 {\cf21 #ifdef MEMTRACE_C}\par
00327 START_NAMESPACE\par
00328     {\cf18 void} * traced_malloc({\cf18 size_t} size, {\cf17 const} {\cf18 char} * par_txt, {\cf18 int} line, {\cf17 const} {\cf18 char} * file) \{\par
00329         {\cf18 void} * p;\par
00330         initialize();\par
00331         p = canary_malloc(size, random_byte);\par
00332         {\cf19 if} (p) \{\par
00333             {\cf19 if}(!register_memory(p,size,pack(FMALLOC,par_txt,line,file))) \{\par
00334                 free(p);\par
00335                 {\cf19 return} NULL;\par
00336             \}\par
00337             {\cf19 return} PU(p);\par
00338         \}\par
00339         {\cf19 return} NULL;\par
00340     \}\par
00341 \par
00342     {\cf18 void} * traced_calloc({\cf18 size_t} count, {\cf18 size_t} size, {\cf17 const} {\cf18 char} * par_txt, {\cf18 int} line, {\cf17 const} {\cf18 char} * file) \{\par
00343         {\cf18 void} * p;\par
00344         initialize();\par
00345                 size *= count;\par
00346                 p = canary_malloc(size, 0);\par
00347         {\cf19 if}(p) \{\par
00348             {\cf19 if}(!register_memory(p,size,pack(FCALLOC,par_txt,line,file))) \{\par
00349                 free(p);\par
00350                 {\cf19 return} NULL;\par
00351             \}\par
00352             {\cf19 return} PU(p);\par
00353         \}\par
00354         {\cf19 return} NULL;\par
00355     \}\par
00356 \par
00357     {\cf18 void} traced_free({\cf18 void} * pu, {\cf17 const} {\cf18 char} * par_txt, {\cf18 int} line, {\cf17 const} {\cf18 char} * file) \{\par
00358         initialize();\par
00359         {\cf19 if}(pu) \{\par
00360             unregister_memory(P(pu), pack(FFREE,par_txt,line,file));\par
00361             free(P(pu));\par
00362         \} {\cf19 else} \{\par
00363             {\cf20 /*free(NULL) eset*/}\par
00364 {\cf21             #ifdef MEMTRACE_TO_FILE}\par
00365                 fprintf(trace_file,{\cf22 "%s\\t%d\\t%10s\\t"},{\cf22 "NULL"},-1,pretty[FFREE]);\par
00366                 fprintf(trace_file,{\cf22 "%d\\t%s\\n"},line,file ? file : {\cf22 "?"});\par
00367                 fflush(trace_file);\par
00368 {\cf21             #endif}\par
00369 {\cf21             #ifndef ALLOW_FREE_NULL}\par
00370             \{{\cf20 /*C-blokk*/}\par
00371                 call_t call;\par
00372                 call = pack(FFREE,par_txt,line,file);\par
00373                 die({\cf22 "free(NULL) hivasa:"},NULL,0,NULL,&call);\par
00374             \}{\cf20 /*C-blokk*/}\par
00375 {\cf21             #endif}\par
00376         \}\par
00377     \}\par
00378 \par
00379     {\cf18 void} * traced_realloc({\cf18 void} * old, {\cf18 size_t} size, {\cf17 const} {\cf18 char} * par_txt, {\cf18 int} line, {\cf17 const} {\cf18 char} * file) \{\par
00380         {\cf18 void} * p;\par
00381         {\cf18 size_t} oldsize = 0;\par
00382         registry_item * n;\par
00383         initialize();\par
00384 \par
00385 {\cf21         #ifdef MEMTRACE_TO_MEMORY}\par
00386                 n = find_registry_item(P(old));\par
00387                 {\cf19 if} (n) oldsize = n->next->size;\par
00388             p = canary_malloc(size, random_byte);\par
00389 {\cf21             #else}\par
00390                 p = realloc(old, size);\par
00391 {\cf21             #endif}\par
00392         {\cf19 if} (p) \{\par
00393             {\cf20 /*Ha sikerult a foglalas, regisztraljuk*/}\par
00394             register_memory(p,size,pack(FREALLOC, par_txt, line,file));\par
00395                     {\cf19 if} (old) \{\par
00396 {\cf21                 #ifdef MEMTRACE_TO_MEMORY}\par
00397                     {\cf18 int} cpsize = 2*CANARY_LEN;\par
00398                             {\cf19 if} (oldsize < size) cpsize += oldsize;\par
00399                             {\cf19 else} cpsize += size;\par
00400                             memcpy(p, P(old), cpsize);\par
00401 {\cf21                 #endif}\par
00402                         unregister_memory(P(old), pack(FREALLOC, par_txt, line, file));\par
00403 {\cf21                 #ifdef MEMTRACE_TO_MEMORY}\par
00404                             free P(old);\par
00405 {\cf21                         #endif}\par
00406                     \}\par
00407                     {\cf19 return} PU(p);\par
00408         \} {\cf19 else} \{\par
00409                 {\cf19 return} NULL;\par
00410             \}\par
00411     \}\par
00412 \par
00413 END_NAMESPACE\par
00414 {\cf21 #endif}{\cf20 /*MEMTRACE_C*/}{\cf21 }\par
00415 \par
00416 {\cf20 /*******************************************************************/}\par
00417 {\cf20 /* C++-st\'EDlus\'FA mem\'F3riakezel\'E9s */}\par
00418 {\cf20 /*******************************************************************/}\par
00419 \par
00420 {\cf21 #ifdef MEMTRACE_CPP}\par
00421 START_NAMESPACE\par
00422     std::new_handler _new_handler;\par
00423 \par
00424     {\cf18 void} _set_new_handler(std::new_handler h) \{\par
00425         initialize();\par
00426         _new_handler = h;\par
00427     \}\par
00428 \par
00429     {\cf17 static} call_t delete_call;\par
00430     {\cf17 static} BOOL delete_called;\par
00431 \par
00432     {\cf18 void} set_delete_call({\cf18 int} line, {\cf17 const} {\cf18 char} * file) \{\par
00433         initialize();\par
00434         delete_call=pack(0,{\cf22 ""},line,file); {\cf20 /*func \'E9rt\'E9ke l\'E9nyegtelen, majd fel\'FCl\'EDrjuk*/}\par
00435         delete_called = TRUE;\par
00436     \}\par
00437 \par
00438     {\cf18 void} * traced_new({\cf18 size_t} size, {\cf18 int} line, {\cf17 const} {\cf18 char} * file, {\cf18 int} func) \{\par
00439         initialize();\par
00440         {\cf19 for} (;;) \{\par
00441             {\cf18 void} * p = canary_malloc(size, random_byte);\par
00442             {\cf19 if}(p) \{\par
00443                 register_memory(p,size,pack(func,{\cf22 ""},line,file));\par
00444                 {\cf19 return} PU(p);\par
00445             \}\par
00446 \par
00447             {\cf19 if} (_new_handler == 0)\par
00448                 {\cf19 throw} std::bad_alloc();\par
00449 \par
00450             _new_handler();\par
00451         \}\par
00452     \}\par
00453 \par
00454     {\cf18 void} traced_delete({\cf18 void} * pu, {\cf18 int} func) \{\par
00455         initialize();\par
00456         {\cf19 if}(pu) \{\par
00457             {\cf20 /*kiolvasom call-t, ha van*/}\par
00458             memtrace::call_t call = delete_called ? (delete_call.f=func, delete_call) : pack(func,NULL,0,NULL);\par
00459             memtrace::unregister_memory(P(pu),call);\par
00460             free(P(pu));\par
00461         \}\par
00462         delete_called=FALSE;\par
00463     \}\par
00464 END_NAMESPACE\par
00465 \par
00466 {\cf18 void} * {\cf17 operator} {\cf17 new}({\cf18 size_t} size, {\cf18 int} line, {\cf17 const} {\cf18 char} * file) THROW_BADALLOC \{\par
00467     {\cf19 return} memtrace::traced_new(size,line,file,FNEW);\par
00468 \}\par
00469 \par
00470 {\cf18 void} * {\cf17 operator} {\cf17 new}[]({\cf18 size_t} size, {\cf18 int} line, {\cf17 const} {\cf18 char} * file) THROW_BADALLOC \{\par
00471     {\cf19 return} memtrace::traced_new(size,line,file,FNEWARR);\par
00472 \}\par
00473 \par
00474 {\cf18 void} * {\cf17 operator} {\cf17 new}({\cf18 size_t} size) THROW_BADALLOC \{\par
00475     {\cf19 return} memtrace::traced_new(size,0,NULL,FNEW);\par
00476 \}\par
00477 \par
00478 {\cf18 void} * {\cf17 operator} {\cf17 new}[]({\cf18 size_t} size) THROW_BADALLOC \{\par
00479     {\cf19 return} memtrace::traced_new(size,0,NULL,FNEWARR);\par
00480 \}\par
00481 \par
00482 {\cf18 void} {\cf17 operator} {\cf17 delete}({\cf18 void} * p) THROW_NOTHING \{\par
00483     memtrace::traced_delete(p,FDELETE);\par
00484 \}\par
00485 \par
00486 {\cf18 void} {\cf17 operator} {\cf17 delete}[]({\cf18 void} * p) THROW_NOTHING \{\par
00487     memtrace::traced_delete(p,FDELETEARR);\par
00488 \}\par
00489 {\cf21 #if __cplusplus >= 201402L}\par
00490 {\cf18 void} {\cf17 operator} {\cf17 delete}({\cf18 void} * p, size_t) THROW_NOTHING \{\par
00491     memtrace::traced_delete(p,FDELETE);\par
00492 \}\par
00493 \par
00494 {\cf18 void} {\cf17 operator} {\cf17 delete}[]({\cf18 void} * p, size_t) THROW_NOTHING \{\par
00495     memtrace::traced_delete(p,FDELETEARR);\par
00496 \}\par
00497 {\cf21 #endif}\par
00498 \par
00499 {\cf20 /* Visual C++ 2012 miatt kell, mert h\'C3\'A1klis, hogy nincs megfelel\'C5\'91 delete, b\'C3\'A1r senki sem haszn\'C3\'A1lja */}\par
00500 {\cf18 void} {\cf17 operator} {\cf17 delete}({\cf18 void} * p, int, {\cf17 const} {\cf18 char} *) THROW_NOTHING \{\par
00501     memtrace::traced_delete(p,FDELETE);\par
00502 \}\par
00503 \par
00504 {\cf18 void} {\cf17 operator} {\cf17 delete}[]({\cf18 void} * p, int, {\cf17 const} {\cf18 char} *) THROW_NOTHING \{\par
00505     memtrace::traced_delete(p,FDELETE);\par
00506 \}\par
00507 \par
00508 {\cf21 #endif}{\cf20 /*MEMTRACE_CPP*/}{\cf21 }\par
00509 \par
00510 {\cf20 /*******************************************************************/}\par
00511 {\cf20 /* initialize */}\par
00512 {\cf20 /*******************************************************************/}\par
00513 \par
00514 START_NAMESPACE\par
00515     {\cf17 static} {\cf18 void} initialize() \{\par
00516         {\cf17 static} BOOL first = TRUE;\par
00517         {\cf19 if}(first) \{\par
00518             fperror = stderr;\par
00519             random_byte = ({\cf18 unsigned} char)time(NULL);\par
00520             first = FALSE;\par
00521             dying = FALSE;\par
00522 {\cf21             #ifdef MEMTRACE_TO_MEMORY}\par
00523                 registry.next = NULL;\par
00524 {\cf21                 #if !defined(USE_ATEXIT_OBJECT) && defined(MEMTRACE_AUTO)}\par
00525                     atexit(({\cf18 void}(*)({\cf18 void}))mem_check);\par
00526 {\cf21                 #endif}\par
00527 {\cf21             #endif}\par
00528 {\cf21             #ifdef MEMTRACE_TO_FILE}\par
00529                 trace_file = fopen({\cf22 "memtrace.dump"},{\cf22 "w"});\par
00530 {\cf21             #endif}\par
00531 {\cf21             #ifdef MEMTRACE_CPP}\par
00532                 _new_handler = NULL;\par
00533                 delete_called = FALSE;\par
00534                 delete_call = pack(0,NULL,0,NULL);\par
00535 {\cf21             #endif}\par
00536         \}\par
00537     \}\par
00538 \par
00539 {\cf21 #if defined(MEMTRACE_TO_MEMORY) && defined(USE_ATEXIT_OBJECT)}\par
00540     {\cf18 int} atexit_class::counter = 0;\par
00541     {\cf18 int} atexit_class::err = 0;\par
00542 {\cf21 #endif}\par
00543 END_NAMESPACE\par
00544 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
memtrace.h\par \pard\plain 
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 /*********************************}\par
00002 {\cf20 Memoriaszivargas-detektor}\par
00003 {\cf20 Keszitette: Peregi Tamas, BME IIT, 2011}\par
00004 {\cf20             petamas@iit.bme.hu}\par
00005 {\cf20 Kanari:     Szeberenyi Imre, 2013.,}\par
00006 {\cf20 VS 2012:    Szeber\'E9nyi Imre, 2015.,}\par
00007 {\cf20 mem_dump:   2016.}\par
00008 {\cf20 inclue-ok:  2017., 2018., 2019., 2021.}\par
00009 {\cf20 *********************************/}\par
00010 \par
00011 {\cf21 #ifndef MEMTRACE_H}\par
00012 {\cf21 #define MEMTRACE_H}\par
00013 \par
00014 {\cf21 #if defined(MEMTRACE)}\par
00015 \par
00016 {\cf20 /*ha defini\'E1lva van, akkor a hibakat ebbe a fajlba \'EDrja, egy\'E9bkent stderr-re*/}\par
00017 {\cf20 /*#define MEMTRACE_ERRFILE MEMTRACE.ERR*/}\par
00018 \par
00019 {\cf20 /*ha definialva van, akkor futas kozben lancolt listat epit. Javasolt a hasznalata*/}\par
00020 {\cf21 #define MEMTRACE_TO_MEMORY}\par
00021 \par
00022 {\cf20 /*ha definialva van, akkor futas kozben fajlba irja a foglalasokat*/}\par
00023 {\cf20 /*ekkor nincs ellenorzes, csak naplozas*/}\par
00024 {\cf20 /*#define MEMTRACE_TO_FILE*/}\par
00025 \par
00026 {\cf20 /*ha definialva van, akkor a megallaskor automatikus riport keszul */}\par
00027 {\cf21 #define MEMTRACE_AUTO}\par
00028 \par
00029 {\cf20 /*ha definialva van, akkor malloc()/calloc()/realloc()/free() kovetve lesz*/}\par
00030 {\cf21 #define MEMTRACE_C}\par
00031 \par
00032 {\cf21 #ifdef MEMTRACE_C}\par
00033     {\cf20 /*ha definialva van, akkor free(NULL) nem okoz hibat*/}\par
00034 {\cf21     #define ALLOW_FREE_NULL}\par
00035 {\cf21 #endif}\par
00036 \par
00037 {\cf21 #ifdef __cplusplus}\par
00038     {\cf20 /*ha definialva van, akkor new/delete/new[]/delete[] kovetve lesz*/}\par
00039 {\cf21     #define MEMTRACE_CPP}\par
00040 {\cf21 #endif}\par
00041 \par
00042 {\cf21 #if defined(__cplusplus) && defined(MEMTRACE_TO_MEMORY)}\par
00043     {\cf20 /*ha definialva van, akkor atexit helyett objektumot hasznal*/}\par
00044     {\cf20 /*ajanlott bekapcsolni*/}\par
00045 {\cf21     #define USE_ATEXIT_OBJECT}\par
00046 {\cf21 #endif}\par
00047 \par
00048 {\cf20 /******************************************/}\par
00049 {\cf20 /* INNEN NE MODOSITSD                     */}\par
00050 {\cf20 /******************************************/}\par
00051 {\cf21 #ifdef NO_MEMTRACE_TO_FILE}\par
00052 {\cf21     #undef MEMTRACE_TO_FILE}\par
00053 {\cf21 #endif}\par
00054 \par
00055 {\cf21 #ifdef NO_MEMTRACE_TO_MEMORY}\par
00056 {\cf21     #undef MEMTRACE_TO_MEMORY}\par
00057 {\cf21 #endif}\par
00058 \par
00059 {\cf21 #ifndef MEMTRACE_AUTO}\par
00060 {\cf21     #undef USE_ATEXIT_OBJECT}\par
00061 {\cf21 #endif}\par
00062 \par
00063 {\cf21 #ifdef __cplusplus}\par
00064 {\cf21     #define START_NAMESPACE namespace memtrace \{}\par
00065 {\cf21     #define END_NAMESPACE \} }{\cf20 /*namespace*/}{\cf21 }\par
00066 {\cf21     #define TRACEC(func) memtrace::func}\par
00067 {\cf21     #include <new>}\par
00068 {\cf21 #else}\par
00069 {\cf21     #define START_NAMESPACE}\par
00070 {\cf21     #define END_NAMESPACE}\par
00071 {\cf21     #define TRACEC(func) func}\par
00072 {\cf21 #endif}\par
00073 \par
00074 {\cf20 // THROW deklar\'E1ci\'F3 v\'E1ltozatai}\par
00075 {\cf21 #if defined(_MSC_VER)}\par
00076   {\cf20 // VS rosszul kezeli az __cplusplus makrot}\par
00077 {\cf21   #if _MSC_VER < 1900}\par
00078     {\cf20 // * nem biztos, hogy j\'F3 \'EDgy *}\par
00079 {\cf21     #define THROW_BADALLOC}\par
00080 {\cf21     #define THROW_NOTHING}\par
00081 {\cf21   #else}\par
00082     {\cf20 // C++11 vagy \'FAjabb}\par
00083 {\cf21     #define THROW_BADALLOC noexcept(false)}\par
00084 {\cf21     #define THROW_NOTHING noexcept}\par
00085 {\cf21   #endif}\par
00086 {\cf21 #else}\par
00087 {\cf21   #if __cplusplus < 201103L}\par
00088     {\cf20 // C++2003 vagy r\'E9gebbi}\par
00089 {\cf21     #define THROW_BADALLOC throw (std::bad_alloc)}\par
00090 {\cf21     #define THROW_NOTHING throw ()}\par
00091 {\cf21   #else}\par
00092     {\cf20 // C++11 vagy \'FAjabb}\par
00093 {\cf21     #define THROW_BADALLOC noexcept(false)}\par
00094 {\cf21     #define THROW_NOTHING noexcept}\par
00095 {\cf21   #endif}\par
00096 {\cf21 #endif}\par
00097 \par
00098 START_NAMESPACE\par
00099     {\cf18 int} allocated_blocks();\par
00100 END_NAMESPACE\par
00101 \par
00102 {\cf21 #if defined(MEMTRACE_TO_MEMORY)}\par
00103 START_NAMESPACE\par
00104         {\cf18 int} mem_check({\cf18 void});\par
00105 END_NAMESPACE\par
00106 {\cf21 #endif}\par
00107 \par
00108 {\cf21 #if defined(MEMTRACE_TO_MEMORY) && defined(USE_ATEXIT_OBJECT)}\par
00109 {\cf21 #include <cstdio>}\par
00110 START_NAMESPACE\par
00111     {\cf17 class }atexit_class \{\par
00112         {\cf17 private}:\par
00113             {\cf17 static} {\cf18 int} counter;\par
00114             {\cf17 static} {\cf18 int} err;\par
00115         {\cf17 public}:\par
00116             atexit_class() \{\par
00117 {\cf21 #if defined(CPORTA) && !defined(CPORTA_NOSETBUF)}\par
00118                 {\cf19 if} (counter == 0) \{\par
00119                         setbuf(stdout, 0);\par
00120                         setbuf(stderr, 0);\par
00121                 \}\par
00122 {\cf21 #endif}\par
00123             counter++;\par
00124             \}\par
00125 \par
00126             {\cf18 int} check() \{\par
00127                 {\cf19 if}(--counter == 0)\par
00128                     err = mem_check();\par
00129                 {\cf19 return} err;\par
00130             \}\par
00131 \par
00132             ~atexit_class() \{\par
00133                 check();\par
00134             \}\par
00135     \};\par
00136 \par
00137 {\cf17 static} atexit_class atexit_obj;\par
00138 \par
00139 END_NAMESPACE\par
00140 {\cf21 #endif}{\cf20 /*MEMTRACE_TO_MEMORY && USE_ATEXIT_OBJECT*/}{\cf21 }\par
00141 \par
00142 {\cf20 /*Innentol csak a "normal" include eseten kell, kulonben osszezavarja a mukodest*/}\par
00143 {\cf21 #ifndef FROM_MEMTRACE_CPP}\par
00144 {\cf21 #include <stdlib.h>}\par
00145 {\cf21 #ifdef __cplusplus}\par
00146 {\cf21     #include <iostream>}\par
00147 {\cf20 /* ide gy\'C5\'B1jtj\'C3\'BCk a nemtrace-vel \'C3\'B6sszeakad\'C3\'B3 headereket, hogy el\'C5\'91bb legyenek */}\par
00148 \par
00149 {\cf21     #include <fstream>}  {\cf20 // VS 2013 headerj\'E9ben van deleted definici\'F3}\par
00150 {\cf21     #include <sstream>}\par
00151 {\cf21     #include <vector>}\par
00152 {\cf21     #include <list>}\par
00153 {\cf21     #include <map>}\par
00154 {\cf21     #include <algorithm>}\par
00155 {\cf21     #include <functional>}\par
00156 {\cf21     #include <memory>}\par
00157 {\cf21     #include <iomanip>}\par
00158 {\cf21     #include <locale>}\par
00159 {\cf21     #include <typeinfo>}\par
00160 {\cf21     #include <ostream>}\par
00161 {\cf21     #include <stdexcept>}\par
00162 {\cf21     #include <ctime>}\par
00163 {\cf21 #endif}\par
00164 {\cf21 #ifdef MEMTRACE_CPP}\par
00165     {\cf17 namespace }std \{\par
00166         {\cf17 typedef} void (*new_handler)();\par
00167 \}\par
00168 {\cf21 #endif}\par
00169 \par
00170 {\cf21 #ifdef MEMTRACE_C}\par
00171 START_NAMESPACE\par
00172 {\cf21     #undef malloc}\par
00173 {\cf21     #define malloc(size) TRACEC(traced_malloc)(size,#size,__LINE__,__FILE__)}\par
00174     {\cf18 void} * traced_malloc({\cf18 size_t} size, {\cf17 const} {\cf18 char} *size_txt, {\cf18 int} line, {\cf17 const} {\cf18 char} * file);\par
00175 \par
00176 {\cf21     #undef calloc}\par
00177 {\cf21     #define calloc(count,size) TRACEC(traced_calloc)(count, size, #count","}#size,__LINE__,__FILE__)\par
00178     {\cf18 void} * traced_calloc({\cf18 size_t} count, {\cf18 size_t} size, {\cf17 const} {\cf18 char} *size_txt, {\cf18 int} line, {\cf17 const} {\cf18 char} * file);\par
00179 \par
00180 {\cf21     #undef free}\par
00181 {\cf21     #define free(p) TRACEC(traced_free)(p, #p,__LINE__,__FILE__)}\par
00182     {\cf18 void} traced_free({\cf18 void} * p, {\cf17 const} {\cf18 char} *size_txt, {\cf18 int} line, {\cf17 const} {\cf18 char} * file);\par
00183 \par
00184 {\cf21     #undef realloc}\par
00185 {\cf21     #define realloc(old,size) TRACEC(traced_realloc)(old,size,#size,__LINE__,__FILE__)}\par
00186     {\cf18 void} * traced_realloc({\cf18 void} * old, {\cf18 size_t} size, {\cf17 const} {\cf18 char} *size_txt, {\cf18 int} line, {\cf17 const} {\cf18 char} * file);\par
00187 \par
00188     {\cf18 void} mem_dump({\cf18 void} {\cf17 const} *mem, {\cf18 size_t} size, FILE* fp = stdout);\par
00189 \par
00190 \par
00191 END_NAMESPACE\par
00192 {\cf21 #endif}{\cf20 /*MEMTRACE_C*/}{\cf21 }\par
00193 \par
00194 {\cf21 #ifdef MEMTRACE_CPP}\par
00195 START_NAMESPACE\par
00196 {\cf21     #undef set_new_handler}\par
00197 {\cf21     #define set_new_handler(f) TRACEC(_set_new_handler)(f)}\par
00198     {\cf18 void} _set_new_handler(std::new_handler h);\par
00199 \par
00200     {\cf18 void} set_delete_call({\cf18 int} line, {\cf17 const} {\cf18 char} * file);\par
00201 END_NAMESPACE\par
00202 \par
00203 {\cf18 void} * {\cf17 operator} {\cf17 new}({\cf18 size_t} size, {\cf18 int} line, {\cf17 const} {\cf18 char} * file) THROW_BADALLOC;\par
00204 {\cf18 void} * {\cf17 operator} {\cf17 new}[]({\cf18 size_t} size, {\cf18 int} line, {\cf17 const} {\cf18 char} * file) THROW_BADALLOC;\par
00205 {\cf18 void} * {\cf17 operator} {\cf17 new}({\cf18 size_t} size) THROW_BADALLOC;\par
00206 {\cf18 void} * {\cf17 operator} {\cf17 new}[]({\cf18 size_t} size) THROW_BADALLOC;\par
00207 {\cf18 void} {\cf17 operator} {\cf17 delete}({\cf18 void} * p)  THROW_NOTHING;\par
00208 {\cf18 void} {\cf17 operator} {\cf17 delete}[]({\cf18 void} * p) THROW_NOTHING;\par
00209 \par
00210 {\cf21 #if __cplusplus >= 201402L}\par
00211 {\cf20 // sized delete miatt: http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3536.html}\par
00212 {\cf18 void} {\cf17 operator} {\cf17 delete}({\cf18 void} * p, size_t)  THROW_NOTHING;\par
00213 {\cf18 void} {\cf17 operator} {\cf17 delete}[]({\cf18 void} * p, size_t) THROW_NOTHING;\par
00214 {\cf21 #endif}\par
00215 \par
00216 {\cf20 /* Visual C++ 2012 miatt kell, mert h\'C3\'A1klis, hogy nincs megfelel\'C5\'91 delete, b\'C3\'A1r senki sem haszn\'C3\'A1lja */}\par
00217 {\cf18 void} {\cf17 operator} {\cf17 delete}({\cf18 void} *p, int, {\cf17 const} {\cf18 char} *) THROW_NOTHING;\par
00218 {\cf18 void} {\cf17 operator} {\cf17 delete}[]({\cf18 void} *p, int, {\cf17 const} {\cf18 char} *) THROW_NOTHING;\par
00219 \par
00220 \par
00221 {\cf21 #define new new(__LINE__, __FILE__)}\par
00222 {\cf21 #define delete memtrace::set_delete_call(__LINE__, __FILE__),delete}\par
00223 \par
00224 {\cf21 #ifdef CPORTA}\par
00225 {\cf21 #define system(...)  }{\cf20 // system(__VA_ARGS__)}\par
00226 {\cf21 #endif}\par
00227 \par
00228 {\cf21 #endif }{\cf20 /*MEMTRACE_CPP*/}{\cf21 }\par
00229 \par
00230 {\cf21 #endif }{\cf20 /*FROM_MEMTRACE_CPP*/}{\cf21 }\par
00231 {\cf21 #else}\par
00232 {\cf21 #pragma message ( "MEMTRACE NOT DEFINED"} )\par
00233 {\cf21 #endif }{\cf20 /*MEMTRACE*/}{\cf21 }\par
00234 \par
00235 {\cf21 #endif }{\cf20 /*MEMTRACE_H*/}{\cf21 }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MVM.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 //}\par
00002 {\cf20 // Created by Jajecnik Marcell on 2023. 05. 04..}\par
00003 {\cf20 //}\par
00004 \par
00005 {\cf21 #include "MVM.h"}\par
00006 \par
00007 Company MVM::MVM_company = Company({\cf22 "MVM ZRT."}, 10760798244);\par
00008 \par
00009 {\cf18 void} MVM::addClient(Client* client_in) \{\par
00010     clients.push_back(client_in);\par
00011 \}\par
00012 \par
00013 \par
00014 {\cf18 void} MVM::addContract(Client* client_in, ContractType ctype_in, {\cf18 int} year_begin, {\cf18 int} month_begin, {\cf18 int} day_begin, {\cf18 int} year_end, {\cf18 int} month_end, {\cf18 int} day_end, {\cf18 int} invo_in_year, {\cf18 int} invo_in_month, {\cf18 int} invo_in_day, {\cf18 double} tariff_in, {\cf18 double} balance_in, {\cf18 double} consumption_in) \{\par
00015 ;\par
00016 Contract new_contract(client_in, ctype_in, year_begin, month_begin, day_begin, year_end, month_end, day_end, invo_in_year, invo_in_month, invo_in_day, (client_in->getSumOfAll_Contract() + 1), tariff_in, balance_in, consumption_in);\par
00017     client_in->addContract(new_contract);\par
00018 \}\par
00019 \par
00020 Client *MVM::getClient({\cf17 const} std::string name_in) \{\par
00021     {\cf19 for} ({\cf18 size_t} i = 0; i < clients.size(); ++i) \{\par
00022         {\cf19 if} (name_in==clients[i]->getName()) {\cf19 return} clients[i];\par
00023     \}\par
00024     {\cf19 return} {\cf17 nullptr};\par
00025 \}\par
00026 \par
00027 {\cf17 const} std::string MVM::getCompanyDetails() \{\par
00028     {\cf19 return} {\cf22 "Company name: "} + MVM_company.getName() + {\cf22 ", Tax ID: "} + std::to_string(MVM_company.getID());\par
00029 \}\par
00030 \par
00031 {\cf18 void} MVM::deleteClient({\cf17 const} std::string name_in) \{\par
00032     {\cf17 delete} getClient(name_in);\par
00033 \}\par
00034 \par
00035 MVM::~MVM()\{\par
00036     {\cf19 for} ({\cf18 size_t} i = 0; i < clients.size(); i++)\par
00037     \{\par
00038         {\cf17 delete} clients[i];\par
00039     \}\par
00040 \}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
MVM.h\par \pard\plain 
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 //}\par
00002 {\cf20 // Created by Jajecnik Marcell on 2023. 05. 04..}\par
00003 {\cf20 //}\par
00004 \par
00005 {\cf21 #ifndef SKELETON_MVM_H}\par
00006 {\cf21 #define SKELETON_MVM_H}\par
00007 \par
00008 {\cf21 #include "clients.h"}\par
00009 {\cf21 #include "myvektor.hpp"}\par
00010 {\cf21 #include "date.h"}\par
00011 {\cf21 #include "contracts.h"}\par
00012 {\cf21 #include <iostream>}\par
00013 {\cf21 #include <chrono>}\par
00014 \par
00015 {\cf17 class }Client;\par
00016 {\cf17 class }Company;\par
00017 {\cf17 enum class} ContractType;\par
00018 \par
00022 {\cf17 class }MVM \{\par
00023 {\cf17 private}:\par
00027     MyVector<Client *> clients;\par
00028 \par
00029 {\cf17 public}:\par
00033     {\cf17 static} Company MVM_company;\par
00034 \par
00038     MVM() \{\}\par
00039 \par
00044     {\cf18 void} addClient(Client* client_in);\par
00045 \par
00063     {\cf18 void} addContract(Client* client_in, ContractType ctype_in, {\cf18 int} year_begin, {\cf18 int} month_begin, {\cf18 int} day_begin, {\cf18 int} year_end, {\cf18 int} month_end, {\cf18 int} day_end, {\cf18 int} invo_in_year, {\cf18 int} invo_in_month, {\cf18 int} invo_in_day, {\cf18 double} tariff_in = 0.0, {\cf18 double} balance_in = 0.0, {\cf18 double} consumption_in = 0.0);\par
00064 \par
00070     Client* getClient({\cf17 const} std::string name_in);\par
00071 \par
00076     {\cf17 const} std::string getCompanyDetails();\par
00077 \par
00082     {\cf18 void} deleteClient({\cf17 const} std::string name_in);\par
00083 \par
00087     ~MVM();\par
00088 \};\par
00089 \par
00090 {\cf21 #endif }{\cf20 //SKELETON_MVM_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
myvektor.hpp\par \pard\plain 
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf20 //}\par
00002 {\cf20 // Created by Jajecnik Marcell on 2023. 05. 04..}\par
00003 {\cf20 //}\par
00004 \par
00005 {\cf21 #ifndef SKELETON_MYVEKTOR_HPP}\par
00006 {\cf21 #define SKELETON_MYVEKTOR_HPP}\par
00007 \par
00008 {\cf21 #include <iostream>}\par
00009 {\cf21 #include <cstring>}\par
00010 {\cf21 #include <stdexcept>}\par
00011 \par
00020 {\cf17 template}<{\cf17 typename} T>\par
00021 {\cf17 class }MyVector \{\par
00022 {\cf17 private}:\par
00023 \par
00024     T* m_buffer;\par
00025 \par
00026     {\cf18 size_t} m_capacity;\par
00027 \par
00028     {\cf18 size_t} m_size;\par
00029 \par
00034     {\cf18 void} reserve({\cf18 size_t} new_capacity) \{\par
00035         {\cf19 if} (new_capacity <= m_capacity) \{\par
00036             {\cf19 return};\par
00037         \}\par
00038         T* new_buffer = {\cf17 new} T[new_capacity];\par
00039         memcpy(new_buffer, m_buffer, m_size * {\cf17 sizeof}(T));\par
00040         {\cf17 delete}[] m_buffer;\par
00041         m_buffer = new_buffer;\par
00042         m_capacity = new_capacity;\par
00043     \}\par
00044 \par
00045 {\cf17 public}:\par
00049     MyVector(): m_capacity(10), m_size(0) \{\par
00050         m_buffer = {\cf17 new} T[m_capacity];\par
00051     \}\par
00052 \par
00057     {\cf18 void} push_back(T value) \{\par
00058         {\cf19 if} (m_size == m_capacity) \{\par
00059             reserve(m_capacity * 2);\par
00060         \}\par
00061         m_buffer[m_size] = value;\par
00062         m_size++;\par
00063     \}\par
00064 \par
00069     {\cf18 size_t} size(){\cf17  const }\{\par
00070         {\cf19 return} m_size;\par
00071     \}\par
00072 \par
00077     {\cf18 size_t} capacity(){\cf17  const }\{\par
00078         {\cf19 return} m_capacity;\par
00079     \}\par
00080 \par
00085     {\cf18 void} erase({\cf18 size_t} pos) \{\par
00086         {\cf19 if} (pos >= m_size) \{\par
00087             {\cf19 return};\par
00088         \}\par
00089         {\cf19 for} ({\cf18 size_t} i = pos; i < m_size - 1; i++) \{\par
00090             m_buffer[i] = m_buffer[i + 1];\par
00091         \}\par
00092         m_size--;\par
00093     \}\par
00094 \par
00098     {\cf18 void} pop_back() \{\par
00099         {\cf19 if} (m_size > 0) \{\par
00100             m_size--;\par
00101         \}\par
00102     \}\par
00103 \par
00109     T& operator[]({\cf18 size_t} i) \{\par
00110         {\cf19 if} ((i<0 || i>=m_size)) {\cf19 throw} std::range_error({\cf22 "Index error"});\par
00111         {\cf19 return} m_buffer[i];\par
00112     \}\par
00113 \par
00119     {\cf17 const} T& operator[]({\cf18 size_t} i){\cf17  const }\{\par
00120         {\cf19 if} ((i<0 || i>=m_size)) {\cf19 throw} std::range_error({\cf22 "Index error"});\par
00121         {\cf19 return} m_buffer[i];\par
00122     \};\par
00123 \par
00127     ~MyVector() \{\par
00128         {\cf17 delete}[] m_buffer;\par
00129     \}\par
00130 \};\par
00131 \par
00132 \par
00133 {\cf21 #endif }{\cf20 //SKELETON_MYVEKTOR_HPP}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Test.cpp\par \pard\plain 
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 00001 {\cf21 #include <iostream>}\par
00002 \par
00003 {\cf21 #include "gtest_lite.h"}\par
00004 {\cf21 #include "memtrace.h"}\par
00005 {\cf21 #include "MVM.h"}\par
00006 \par
00019 {\cf21 #define TST 10}\par
00020 \par
00021 \par
00022 \par
00023 {\cf21 #define MEMTRACE_H}\par
00024 {\cf18 int} main() \{\par
00025 \par
00026 {\cf21 #if TST > 0}\par
00027     TEST(MyVector, tesztek) \{\par
00028         MyVector<int> int_test;\par
00029         MyVector<double> double_test;\par
00030         EXPECT_EQ(10, int_test.capacity()); {\cf20 // Alapertelmezett ertek}\par
00031         EXPECT_EQ(0, int_test.size());\par
00032         int_test.push_back(1);\par
00033         EXPECT_EQ(1, int_test.size());\par
00034         int_test.pop_back();\par
00035         EXPECT_EQ(0, int_test.size());\par
00036         int_test.pop_back(); {\cf20 //Torles ha nincs semmi bajt okoz-e?}\par
00037 \par
00038         {\cf19 for}({\cf18 size_t} i = 0; i < 11; ++i) \{\par
00039             int_test.push_back(i);\par
00040             double_test.push_back(i);\par
00041         \}\par
00042         EXPECT_EQ(20, int_test.capacity());\par
00043         EXPECT_EQ(11, int_test.size());\par
00044 \par
00045         {\cf19 for}({\cf18 size_t} i = 0; i < 11; ++i) \{\par
00046             int_test.erase(0);\par
00047             double_test.pop_back();\par
00048         \}\par
00049 \par
00050         EXPECT_EQ(0, int_test.size());\par
00051         EXPECT_EQ(0, double_test.size());\par
00052 \par
00053         {\cf19 for} ({\cf18 size_t} i = 0; i < 5; ++i) \{\par
00054             int_test.push_back(i);\par
00055         \}\par
00056         {\cf19 for} ({\cf18 size_t} i = 0; i < 5; i++)\par
00057         \{\par
00058             EXPECT_EQ(i, int_test[i]);\par
00059         \}\par
00060         EXPECT_THROW(int_test[-1], std::range_error);\par
00061         EXPECT_THROW(int_test[5], std::range_error);\par
00062 \par
00063     \} END\par
00064 {\cf21 #endif}\par
00065 {\cf21 #if TST > 1}\par
00066     TEST(Date, tesztek) \{\par
00067         \par
00068     \}END\par
00069 {\cf21 #endif}\par
00070 {\cf21 #if TST > 2}\par
00071     TEST(Contract_date, tesztek) \{\par
00072 \par
00073     \}END\par
00074 {\cf21 #endif}\par
00075 {\cf21 #if TST > 3}\par
00076     TEST(Client, tesztek) \{\par
00077 \par
00078     \}END\par
00079 {\cf21 #endif}\par
00080 {\cf21 #if TST > 4}\par
00081     TEST(Person, tesztek) \{\par
00082 \par
00083     \}END\par
00084 {\cf21 #endif}\par
00085 {\cf21 #if TST > 5}\par
00086     TEST(Company, tesztek) \{\par
00087 \par
00088     \}END\par
00089 {\cf21 #endif}\par
00090 {\cf21 #if TST > 6}\par
00091     TEST(Contract, tesztek) \{\par
00092 \par
00093     \}END\par
00094 {\cf21 #endif}\par
00095 {\cf21 #if TST > 7}\par
00096     TEST(MVM, tesztek) \{\par
00097 \par
00098     \}END\par
00099 {\cf21 #endif}\par
00100 {\cf21 #if TST > 8}\par
00101     TEST(Szamlakeszites, tesztek) \{\par
00102 \par
00103     \}END\par
00104 {\cf21 #endif}\par
00105 {\cf21 #if TST > 9}\par
00106     TEST(Beolvasas_fajlbol, tesztek) \{\par
00107 \par
00108     \}END\par
00109 {\cf21 #endif}\par
00110     {\cf19 return} 0;\par
00111 \}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
