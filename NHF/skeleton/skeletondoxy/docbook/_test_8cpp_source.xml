<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="__test_8cpp_source" xml:lang="en-US">
<title>Test.cpp</title>
<programlisting linenumbering="unnumbered"><anchor xml:id="__test_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&lt;iostream&gt;</emphasis>
<anchor xml:id="__test_8cpp_source_1l00002"/>00002 
<anchor xml:id="__test_8cpp_source_1l00003"/>00003 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="_gtest__lite_8h">gtest_lite.h</link>&quot;</emphasis>
<anchor xml:id="__test_8cpp_source_1l00004"/>00004 <emphasis role="preprocessor">#include&#32;&quot;memtrace.h&quot;</emphasis>
<anchor xml:id="__test_8cpp_source_1l00005"/>00005 <emphasis role="preprocessor">#include&#32;&quot;MVM.h&quot;</emphasis>
<anchor xml:id="__test_8cpp_source_1l00006"/>00006 
<anchor xml:id="__test_8cpp_source_1l00019"/>00019 <emphasis role="preprocessor">#define&#32;TST&#32;10</emphasis>
<anchor xml:id="__test_8cpp_source_1l00020"/>00020 
<anchor xml:id="__test_8cpp_source_1l00021"/>00021 
<anchor xml:id="__test_8cpp_source_1l00022"/>00022 
<anchor xml:id="__test_8cpp_source_1l00023"/>00023 <emphasis role="preprocessor">#define&#32;MEMTRACE_H</emphasis>
<anchor xml:id="__test_8cpp_source_1l00024"/>00024 <emphasis role="keywordtype">int</emphasis>&#32;main()&#32;{
<anchor xml:id="__test_8cpp_source_1l00025"/>00025 
<anchor xml:id="__test_8cpp_source_1l00026"/>00026 <emphasis role="preprocessor">#if&#32;TST&#32;&gt;&#32;0</emphasis>
<anchor xml:id="__test_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1a379a7b57e74521cb2c8e99f0e2779a72">TEST</link>(<link linkend="_class_my_vector">MyVector</link>,&#32;tesztek)&#32;{
<anchor xml:id="__test_8cpp_source_1l00028"/>00028 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_my_vector">MyVector&lt;int&gt;</link>&#32;int_test;
<anchor xml:id="__test_8cpp_source_1l00029"/>00029 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_class_my_vector">MyVector&lt;double&gt;</link>&#32;double_test;
<anchor xml:id="__test_8cpp_source_1l00030"/>00030 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1aff8385840165a184edc29446aa51936f">EXPECT_EQ</link>(10,&#32;int_test.<link linkend="_class_my_vector_1adbd398910d7ae5c2b42132e10ac6f749">capacity</link>());&#32;<emphasis role="comment">//&#32;Alapertelmezett&#32;ertek</emphasis>
<anchor xml:id="__test_8cpp_source_1l00031"/>00031 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1aff8385840165a184edc29446aa51936f">EXPECT_EQ</link>(0,&#32;int_test.<link linkend="_class_my_vector_1ac167e7f4cf1f1f6a01053db2e5efd3a2">size</link>());
<anchor xml:id="__test_8cpp_source_1l00032"/>00032 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int_test.<link linkend="_class_my_vector_1a1e15063e3a5e1e8153be007099777ccd">push_back</link>(1);
<anchor xml:id="__test_8cpp_source_1l00033"/>00033 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1aff8385840165a184edc29446aa51936f">EXPECT_EQ</link>(1,&#32;int_test.<link linkend="_class_my_vector_1ac167e7f4cf1f1f6a01053db2e5efd3a2">size</link>());
<anchor xml:id="__test_8cpp_source_1l00034"/>00034 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int_test.<link linkend="_class_my_vector_1aa896e95bb435535bdcc0b3e7bcb7f6fe">pop_back</link>();
<anchor xml:id="__test_8cpp_source_1l00035"/>00035 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1aff8385840165a184edc29446aa51936f">EXPECT_EQ</link>(0,&#32;int_test.<link linkend="_class_my_vector_1ac167e7f4cf1f1f6a01053db2e5efd3a2">size</link>());
<anchor xml:id="__test_8cpp_source_1l00036"/>00036 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int_test.<link linkend="_class_my_vector_1aa896e95bb435535bdcc0b3e7bcb7f6fe">pop_back</link>();&#32;<emphasis role="comment">//Torles&#32;ha&#32;nincs&#32;semmi&#32;bajt&#32;okoz-e?</emphasis>
<anchor xml:id="__test_8cpp_source_1l00037"/>00037 
<anchor xml:id="__test_8cpp_source_1l00038"/>00038 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;11;&#32;++i)&#32;{
<anchor xml:id="__test_8cpp_source_1l00039"/>00039 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int_test.<link linkend="_class_my_vector_1a1e15063e3a5e1e8153be007099777ccd">push_back</link>(i);
<anchor xml:id="__test_8cpp_source_1l00040"/>00040 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;double_test.<link linkend="_class_my_vector_1a1e15063e3a5e1e8153be007099777ccd">push_back</link>(i);
<anchor xml:id="__test_8cpp_source_1l00041"/>00041 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_8cpp_source_1l00042"/>00042 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1aff8385840165a184edc29446aa51936f">EXPECT_EQ</link>(20,&#32;int_test.<link linkend="_class_my_vector_1adbd398910d7ae5c2b42132e10ac6f749">capacity</link>());
<anchor xml:id="__test_8cpp_source_1l00043"/>00043 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1aff8385840165a184edc29446aa51936f">EXPECT_EQ</link>(11,&#32;int_test.<link linkend="_class_my_vector_1ac167e7f4cf1f1f6a01053db2e5efd3a2">size</link>());
<anchor xml:id="__test_8cpp_source_1l00044"/>00044 
<anchor xml:id="__test_8cpp_source_1l00045"/>00045 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;11;&#32;++i)&#32;{
<anchor xml:id="__test_8cpp_source_1l00046"/>00046 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int_test.<link linkend="_class_my_vector_1adac3ad2d58897e80d95a64f0ec0b4229">erase</link>(0);
<anchor xml:id="__test_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;double_test.<link linkend="_class_my_vector_1aa896e95bb435535bdcc0b3e7bcb7f6fe">pop_back</link>();
<anchor xml:id="__test_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_8cpp_source_1l00049"/>00049 
<anchor xml:id="__test_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1aff8385840165a184edc29446aa51936f">EXPECT_EQ</link>(0,&#32;int_test.<link linkend="_class_my_vector_1ac167e7f4cf1f1f6a01053db2e5efd3a2">size</link>());
<anchor xml:id="__test_8cpp_source_1l00051"/>00051 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1aff8385840165a184edc29446aa51936f">EXPECT_EQ</link>(0,&#32;double_test.<link linkend="_class_my_vector_1ac167e7f4cf1f1f6a01053db2e5efd3a2">size</link>());
<anchor xml:id="__test_8cpp_source_1l00052"/>00052 
<anchor xml:id="__test_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;5;&#32;++i)&#32;{
<anchor xml:id="__test_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;int_test.<link linkend="_class_my_vector_1a1e15063e3a5e1e8153be007099777ccd">push_back</link>(i);
<anchor xml:id="__test_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">for</emphasis>&#32;(<emphasis role="keywordtype">size_t</emphasis>&#32;i&#32;=&#32;0;&#32;i&#32;&lt;&#32;5;&#32;i++)
<anchor xml:id="__test_8cpp_source_1l00057"/>00057 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;{
<anchor xml:id="__test_8cpp_source_1l00058"/>00058 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1aff8385840165a184edc29446aa51936f">EXPECT_EQ</link>(i,&#32;int_test[i]);
<anchor xml:id="__test_8cpp_source_1l00059"/>00059 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;}
<anchor xml:id="__test_8cpp_source_1l00060"/>00060 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1a4b4fe697f312ef7d2618905a9bc12f04">EXPECT_THROW</link>(int_test[-1],&#32;std::range_error);
<anchor xml:id="__test_8cpp_source_1l00061"/>00061 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1a4b4fe697f312ef7d2618905a9bc12f04">EXPECT_THROW</link>(int_test[5],&#32;std::range_error);
<anchor xml:id="__test_8cpp_source_1l00062"/>00062 
<anchor xml:id="__test_8cpp_source_1l00063"/>00063 &#32;&#32;&#32;&#32;}&#32;<link linkend="_gtest__lite_8h_1a29fd18bed01c4d836c7ebfe73a125c3f">END</link>
<anchor xml:id="__test_8cpp_source_1l00064"/>00064 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__test_8cpp_source_1l00065"/>00065 <emphasis role="preprocessor">#if&#32;TST&#32;&gt;&#32;1</emphasis>
<anchor xml:id="__test_8cpp_source_1l00066"/>00066 &#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1a379a7b57e74521cb2c8e99f0e2779a72">TEST</link>(<link linkend="_class_date">Date</link>,&#32;tesztek)&#32;{
<anchor xml:id="__test_8cpp_source_1l00067"/>00067 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;
<anchor xml:id="__test_8cpp_source_1l00068"/>00068 &#32;&#32;&#32;&#32;}<link linkend="_gtest__lite_8h_1a29fd18bed01c4d836c7ebfe73a125c3f">END</link>
<anchor xml:id="__test_8cpp_source_1l00069"/>00069 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__test_8cpp_source_1l00070"/>00070 <emphasis role="preprocessor">#if&#32;TST&#32;&gt;&#32;2</emphasis>
<anchor xml:id="__test_8cpp_source_1l00071"/>00071 &#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1a379a7b57e74521cb2c8e99f0e2779a72">TEST</link>(<link linkend="_class_contract__date">Contract_date</link>,&#32;tesztek)&#32;{
<anchor xml:id="__test_8cpp_source_1l00072"/>00072 
<anchor xml:id="__test_8cpp_source_1l00073"/>00073 &#32;&#32;&#32;&#32;}<link linkend="_gtest__lite_8h_1a29fd18bed01c4d836c7ebfe73a125c3f">END</link>
<anchor xml:id="__test_8cpp_source_1l00074"/>00074 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__test_8cpp_source_1l00075"/>00075 <emphasis role="preprocessor">#if&#32;TST&#32;&gt;&#32;3</emphasis>
<anchor xml:id="__test_8cpp_source_1l00076"/>00076 &#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1a379a7b57e74521cb2c8e99f0e2779a72">TEST</link>(<link linkend="_class_client">Client</link>,&#32;tesztek)&#32;{
<anchor xml:id="__test_8cpp_source_1l00077"/>00077 
<anchor xml:id="__test_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;}<link linkend="_gtest__lite_8h_1a29fd18bed01c4d836c7ebfe73a125c3f">END</link>
<anchor xml:id="__test_8cpp_source_1l00079"/>00079 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__test_8cpp_source_1l00080"/>00080 <emphasis role="preprocessor">#if&#32;TST&#32;&gt;&#32;4</emphasis>
<anchor xml:id="__test_8cpp_source_1l00081"/>00081 &#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1a379a7b57e74521cb2c8e99f0e2779a72">TEST</link>(<link linkend="_class_person">Person</link>,&#32;tesztek)&#32;{
<anchor xml:id="__test_8cpp_source_1l00082"/>00082 
<anchor xml:id="__test_8cpp_source_1l00083"/>00083 &#32;&#32;&#32;&#32;}<link linkend="_gtest__lite_8h_1a29fd18bed01c4d836c7ebfe73a125c3f">END</link>
<anchor xml:id="__test_8cpp_source_1l00084"/>00084 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__test_8cpp_source_1l00085"/>00085 <emphasis role="preprocessor">#if&#32;TST&#32;&gt;&#32;5</emphasis>
<anchor xml:id="__test_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1a379a7b57e74521cb2c8e99f0e2779a72">TEST</link>(<link linkend="_class_company">Company</link>,&#32;tesztek)&#32;{
<anchor xml:id="__test_8cpp_source_1l00087"/>00087 
<anchor xml:id="__test_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;}<link linkend="_gtest__lite_8h_1a29fd18bed01c4d836c7ebfe73a125c3f">END</link>
<anchor xml:id="__test_8cpp_source_1l00089"/>00089 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__test_8cpp_source_1l00090"/>00090 <emphasis role="preprocessor">#if&#32;TST&#32;&gt;&#32;6</emphasis>
<anchor xml:id="__test_8cpp_source_1l00091"/>00091 &#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1a379a7b57e74521cb2c8e99f0e2779a72">TEST</link>(<link linkend="_class_contract">Contract</link>,&#32;tesztek)&#32;{
<anchor xml:id="__test_8cpp_source_1l00092"/>00092 
<anchor xml:id="__test_8cpp_source_1l00093"/>00093 &#32;&#32;&#32;&#32;}<link linkend="_gtest__lite_8h_1a29fd18bed01c4d836c7ebfe73a125c3f">END</link>
<anchor xml:id="__test_8cpp_source_1l00094"/>00094 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__test_8cpp_source_1l00095"/>00095 <emphasis role="preprocessor">#if&#32;TST&#32;&gt;&#32;7</emphasis>
<anchor xml:id="__test_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1a379a7b57e74521cb2c8e99f0e2779a72">TEST</link>(<link linkend="_class_m_v_m">MVM</link>,&#32;tesztek)&#32;{
<anchor xml:id="__test_8cpp_source_1l00097"/>00097 
<anchor xml:id="__test_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;}<link linkend="_gtest__lite_8h_1a29fd18bed01c4d836c7ebfe73a125c3f">END</link>
<anchor xml:id="__test_8cpp_source_1l00099"/>00099 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__test_8cpp_source_1l00100"/>00100 <emphasis role="preprocessor">#if&#32;TST&#32;&gt;&#32;8</emphasis>
<anchor xml:id="__test_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1a379a7b57e74521cb2c8e99f0e2779a72">TEST</link>(Szamlakeszites,&#32;tesztek)&#32;{
<anchor xml:id="__test_8cpp_source_1l00102"/>00102 
<anchor xml:id="__test_8cpp_source_1l00103"/>00103 &#32;&#32;&#32;&#32;}<link linkend="_gtest__lite_8h_1a29fd18bed01c4d836c7ebfe73a125c3f">END</link>
<anchor xml:id="__test_8cpp_source_1l00104"/>00104 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__test_8cpp_source_1l00105"/>00105 <emphasis role="preprocessor">#if&#32;TST&#32;&gt;&#32;9</emphasis>
<anchor xml:id="__test_8cpp_source_1l00106"/>00106 &#32;&#32;&#32;&#32;<link linkend="_gtest__lite_8h_1a379a7b57e74521cb2c8e99f0e2779a72">TEST</link>(Beolvasas_fajlbol,&#32;tesztek)&#32;{
<anchor xml:id="__test_8cpp_source_1l00107"/>00107 
<anchor xml:id="__test_8cpp_source_1l00108"/>00108 &#32;&#32;&#32;&#32;}<link linkend="_gtest__lite_8h_1a29fd18bed01c4d836c7ebfe73a125c3f">END</link>
<anchor xml:id="__test_8cpp_source_1l00109"/>00109 <emphasis role="preprocessor">#endif</emphasis>
<anchor xml:id="__test_8cpp_source_1l00110"/>00110 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;0;
<anchor xml:id="__test_8cpp_source_1l00111"/>00111 }
</programlisting></section>
